// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gui_config.proto

package gdsc.smlm.data.config;

@SuppressWarnings({"unchecked", "unused"})
public final class GUIConfig {
  private GUIConfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GUIFilterSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.GUIFilterSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float max_drift = 1;</code>
     */
    float getMaxDrift();

    /**
     * <code>float min_signal = 2;</code>
     */
    float getMinSignal();

    /**
     * <code>float min_snr = 3;</code>
     */
    float getMinSnr();

    /**
     * <code>double max_precision = 4;</code>
     */
    double getMaxPrecision();

    /**
     * <code>float max_width = 5;</code>
     */
    float getMaxWidth();

    /**
     * <code>float min_width = 6;</code>
     */
    float getMinWidth();

    /**
     * <code>string mask_title = 7;</code>
     */
    java.lang.String getMaskTitle();
    /**
     * <code>string mask_title = 7;</code>
     */
    com.google.protobuf.ByteString
        getMaskTitleBytes();

    /**
     * <code>string free_filter = 8;</code>
     */
    java.lang.String getFreeFilter();
    /**
     * <code>string free_filter = 8;</code>
     */
    com.google.protobuf.ByteString
        getFreeFilterBytes();

    /**
     * <code>string filter_template = 9;</code>
     */
    java.lang.String getFilterTemplate();
    /**
     * <code>string filter_template = 9;</code>
     */
    com.google.protobuf.ByteString
        getFilterTemplateBytes();

    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    java.lang.String getFilterAnalysisDirectory();
    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    com.google.protobuf.ByteString
        getFilterAnalysisDirectoryBytes();

    /**
     * <code>string filter_set_filename = 11;</code>
     */
    java.lang.String getFilterSetFilename();
    /**
     * <code>string filter_set_filename = 11;</code>
     */
    com.google.protobuf.ByteString
        getFilterSetFilenameBytes();
  }
  /**
   * <pre>
   * Contain the settings for the result filtering
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.GUIFilterSettings}
   */
  public  static final class GUIFilterSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.GUIFilterSettings)
      GUIFilterSettingsOrBuilder {
    // Use GUIFilterSettings.newBuilder() to construct.
    private GUIFilterSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GUIFilterSettings() {
      maxDrift_ = 0F;
      minSignal_ = 0F;
      minSnr_ = 0F;
      maxPrecision_ = 0D;
      maxWidth_ = 0F;
      minWidth_ = 0F;
      maskTitle_ = "";
      freeFilter_ = "";
      filterTemplate_ = "";
      filterAnalysisDirectory_ = "";
      filterSetFilename_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GUIFilterSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              maxDrift_ = input.readFloat();
              break;
            }
            case 21: {

              minSignal_ = input.readFloat();
              break;
            }
            case 29: {

              minSnr_ = input.readFloat();
              break;
            }
            case 33: {

              maxPrecision_ = input.readDouble();
              break;
            }
            case 45: {

              maxWidth_ = input.readFloat();
              break;
            }
            case 53: {

              minWidth_ = input.readFloat();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              maskTitle_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              freeFilter_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              filterTemplate_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              filterAnalysisDirectory_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              filterSetFilename_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIConfig.GUIFilterSettings.class, gdsc.smlm.data.config.GUIConfig.GUIFilterSettings.Builder.class);
    }

    public static final int MAX_DRIFT_FIELD_NUMBER = 1;
    private float maxDrift_;
    /**
     * <code>float max_drift = 1;</code>
     */
    public float getMaxDrift() {
      return maxDrift_;
    }

    public static final int MIN_SIGNAL_FIELD_NUMBER = 2;
    private float minSignal_;
    /**
     * <code>float min_signal = 2;</code>
     */
    public float getMinSignal() {
      return minSignal_;
    }

    public static final int MIN_SNR_FIELD_NUMBER = 3;
    private float minSnr_;
    /**
     * <code>float min_snr = 3;</code>
     */
    public float getMinSnr() {
      return minSnr_;
    }

    public static final int MAX_PRECISION_FIELD_NUMBER = 4;
    private double maxPrecision_;
    /**
     * <code>double max_precision = 4;</code>
     */
    public double getMaxPrecision() {
      return maxPrecision_;
    }

    public static final int MAX_WIDTH_FIELD_NUMBER = 5;
    private float maxWidth_;
    /**
     * <code>float max_width = 5;</code>
     */
    public float getMaxWidth() {
      return maxWidth_;
    }

    public static final int MIN_WIDTH_FIELD_NUMBER = 6;
    private float minWidth_;
    /**
     * <code>float min_width = 6;</code>
     */
    public float getMinWidth() {
      return minWidth_;
    }

    public static final int MASK_TITLE_FIELD_NUMBER = 7;
    private volatile java.lang.Object maskTitle_;
    /**
     * <code>string mask_title = 7;</code>
     */
    public java.lang.String getMaskTitle() {
      java.lang.Object ref = maskTitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        maskTitle_ = s;
        return s;
      }
    }
    /**
     * <code>string mask_title = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMaskTitleBytes() {
      java.lang.Object ref = maskTitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        maskTitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREE_FILTER_FIELD_NUMBER = 8;
    private volatile java.lang.Object freeFilter_;
    /**
     * <code>string free_filter = 8;</code>
     */
    public java.lang.String getFreeFilter() {
      java.lang.Object ref = freeFilter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        freeFilter_ = s;
        return s;
      }
    }
    /**
     * <code>string free_filter = 8;</code>
     */
    public com.google.protobuf.ByteString
        getFreeFilterBytes() {
      java.lang.Object ref = freeFilter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        freeFilter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_TEMPLATE_FIELD_NUMBER = 9;
    private volatile java.lang.Object filterTemplate_;
    /**
     * <code>string filter_template = 9;</code>
     */
    public java.lang.String getFilterTemplate() {
      java.lang.Object ref = filterTemplate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filterTemplate_ = s;
        return s;
      }
    }
    /**
     * <code>string filter_template = 9;</code>
     */
    public com.google.protobuf.ByteString
        getFilterTemplateBytes() {
      java.lang.Object ref = filterTemplate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filterTemplate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_ANALYSIS_DIRECTORY_FIELD_NUMBER = 10;
    private volatile java.lang.Object filterAnalysisDirectory_;
    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    public java.lang.String getFilterAnalysisDirectory() {
      java.lang.Object ref = filterAnalysisDirectory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filterAnalysisDirectory_ = s;
        return s;
      }
    }
    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    public com.google.protobuf.ByteString
        getFilterAnalysisDirectoryBytes() {
      java.lang.Object ref = filterAnalysisDirectory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filterAnalysisDirectory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_SET_FILENAME_FIELD_NUMBER = 11;
    private volatile java.lang.Object filterSetFilename_;
    /**
     * <code>string filter_set_filename = 11;</code>
     */
    public java.lang.String getFilterSetFilename() {
      java.lang.Object ref = filterSetFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filterSetFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string filter_set_filename = 11;</code>
     */
    public com.google.protobuf.ByteString
        getFilterSetFilenameBytes() {
      java.lang.Object ref = filterSetFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filterSetFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxDrift_ != 0F) {
        output.writeFloat(1, maxDrift_);
      }
      if (minSignal_ != 0F) {
        output.writeFloat(2, minSignal_);
      }
      if (minSnr_ != 0F) {
        output.writeFloat(3, minSnr_);
      }
      if (maxPrecision_ != 0D) {
        output.writeDouble(4, maxPrecision_);
      }
      if (maxWidth_ != 0F) {
        output.writeFloat(5, maxWidth_);
      }
      if (minWidth_ != 0F) {
        output.writeFloat(6, minWidth_);
      }
      if (!getMaskTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, maskTitle_);
      }
      if (!getFreeFilterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, freeFilter_);
      }
      if (!getFilterTemplateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, filterTemplate_);
      }
      if (!getFilterAnalysisDirectoryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, filterAnalysisDirectory_);
      }
      if (!getFilterSetFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, filterSetFilename_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxDrift_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, maxDrift_);
      }
      if (minSignal_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minSignal_);
      }
      if (minSnr_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, minSnr_);
      }
      if (maxPrecision_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, maxPrecision_);
      }
      if (maxWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxWidth_);
      }
      if (minWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minWidth_);
      }
      if (!getMaskTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, maskTitle_);
      }
      if (!getFreeFilterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, freeFilter_);
      }
      if (!getFilterTemplateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, filterTemplate_);
      }
      if (!getFilterAnalysisDirectoryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, filterAnalysisDirectory_);
      }
      if (!getFilterSetFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, filterSetFilename_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIConfig.GUIFilterSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIConfig.GUIFilterSettings other = (gdsc.smlm.data.config.GUIConfig.GUIFilterSettings) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getMaxDrift())
          == java.lang.Float.floatToIntBits(
              other.getMaxDrift()));
      result = result && (
          java.lang.Float.floatToIntBits(getMinSignal())
          == java.lang.Float.floatToIntBits(
              other.getMinSignal()));
      result = result && (
          java.lang.Float.floatToIntBits(getMinSnr())
          == java.lang.Float.floatToIntBits(
              other.getMinSnr()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxPrecision())
          == java.lang.Double.doubleToLongBits(
              other.getMaxPrecision()));
      result = result && (
          java.lang.Float.floatToIntBits(getMaxWidth())
          == java.lang.Float.floatToIntBits(
              other.getMaxWidth()));
      result = result && (
          java.lang.Float.floatToIntBits(getMinWidth())
          == java.lang.Float.floatToIntBits(
              other.getMinWidth()));
      result = result && getMaskTitle()
          .equals(other.getMaskTitle());
      result = result && getFreeFilter()
          .equals(other.getFreeFilter());
      result = result && getFilterTemplate()
          .equals(other.getFilterTemplate());
      result = result && getFilterAnalysisDirectory()
          .equals(other.getFilterAnalysisDirectory());
      result = result && getFilterSetFilename()
          .equals(other.getFilterSetFilename());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAX_DRIFT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxDrift());
      hash = (37 * hash) + MIN_SIGNAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinSignal());
      hash = (37 * hash) + MIN_SNR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinSnr());
      hash = (37 * hash) + MAX_PRECISION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxPrecision()));
      hash = (37 * hash) + MAX_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxWidth());
      hash = (37 * hash) + MIN_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinWidth());
      hash = (37 * hash) + MASK_TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getMaskTitle().hashCode();
      hash = (37 * hash) + FREE_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFreeFilter().hashCode();
      hash = (37 * hash) + FILTER_TEMPLATE_FIELD_NUMBER;
      hash = (53 * hash) + getFilterTemplate().hashCode();
      hash = (37 * hash) + FILTER_ANALYSIS_DIRECTORY_FIELD_NUMBER;
      hash = (53 * hash) + getFilterAnalysisDirectory().hashCode();
      hash = (37 * hash) + FILTER_SET_FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFilterSetFilename().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIConfig.GUIFilterSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the result filtering
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.GUIFilterSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.GUIFilterSettings)
        gdsc.smlm.data.config.GUIConfig.GUIFilterSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIConfig.GUIFilterSettings.class, gdsc.smlm.data.config.GUIConfig.GUIFilterSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIConfig.GUIFilterSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        maxDrift_ = 0F;

        minSignal_ = 0F;

        minSnr_ = 0F;

        maxPrecision_ = 0D;

        maxWidth_ = 0F;

        minWidth_ = 0F;

        maskTitle_ = "";

        freeFilter_ = "";

        filterTemplate_ = "";

        filterAnalysisDirectory_ = "";

        filterSetFilename_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIConfig.GUIFilterSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIConfig.GUIFilterSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIConfig.GUIFilterSettings build() {
        gdsc.smlm.data.config.GUIConfig.GUIFilterSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIConfig.GUIFilterSettings buildPartial() {
        gdsc.smlm.data.config.GUIConfig.GUIFilterSettings result = new gdsc.smlm.data.config.GUIConfig.GUIFilterSettings(this);
        result.maxDrift_ = maxDrift_;
        result.minSignal_ = minSignal_;
        result.minSnr_ = minSnr_;
        result.maxPrecision_ = maxPrecision_;
        result.maxWidth_ = maxWidth_;
        result.minWidth_ = minWidth_;
        result.maskTitle_ = maskTitle_;
        result.freeFilter_ = freeFilter_;
        result.filterTemplate_ = filterTemplate_;
        result.filterAnalysisDirectory_ = filterAnalysisDirectory_;
        result.filterSetFilename_ = filterSetFilename_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIConfig.GUIFilterSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIConfig.GUIFilterSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIConfig.GUIFilterSettings other) {
        if (other == gdsc.smlm.data.config.GUIConfig.GUIFilterSettings.getDefaultInstance()) return this;
        if (other.getMaxDrift() != 0F) {
          setMaxDrift(other.getMaxDrift());
        }
        if (other.getMinSignal() != 0F) {
          setMinSignal(other.getMinSignal());
        }
        if (other.getMinSnr() != 0F) {
          setMinSnr(other.getMinSnr());
        }
        if (other.getMaxPrecision() != 0D) {
          setMaxPrecision(other.getMaxPrecision());
        }
        if (other.getMaxWidth() != 0F) {
          setMaxWidth(other.getMaxWidth());
        }
        if (other.getMinWidth() != 0F) {
          setMinWidth(other.getMinWidth());
        }
        if (!other.getMaskTitle().isEmpty()) {
          maskTitle_ = other.maskTitle_;
          onChanged();
        }
        if (!other.getFreeFilter().isEmpty()) {
          freeFilter_ = other.freeFilter_;
          onChanged();
        }
        if (!other.getFilterTemplate().isEmpty()) {
          filterTemplate_ = other.filterTemplate_;
          onChanged();
        }
        if (!other.getFilterAnalysisDirectory().isEmpty()) {
          filterAnalysisDirectory_ = other.filterAnalysisDirectory_;
          onChanged();
        }
        if (!other.getFilterSetFilename().isEmpty()) {
          filterSetFilename_ = other.filterSetFilename_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIConfig.GUIFilterSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIConfig.GUIFilterSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float maxDrift_ ;
      /**
       * <code>float max_drift = 1;</code>
       */
      public float getMaxDrift() {
        return maxDrift_;
      }
      /**
       * <code>float max_drift = 1;</code>
       */
      public Builder setMaxDrift(float value) {
        
        maxDrift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float max_drift = 1;</code>
       */
      public Builder clearMaxDrift() {
        
        maxDrift_ = 0F;
        onChanged();
        return this;
      }

      private float minSignal_ ;
      /**
       * <code>float min_signal = 2;</code>
       */
      public float getMinSignal() {
        return minSignal_;
      }
      /**
       * <code>float min_signal = 2;</code>
       */
      public Builder setMinSignal(float value) {
        
        minSignal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float min_signal = 2;</code>
       */
      public Builder clearMinSignal() {
        
        minSignal_ = 0F;
        onChanged();
        return this;
      }

      private float minSnr_ ;
      /**
       * <code>float min_snr = 3;</code>
       */
      public float getMinSnr() {
        return minSnr_;
      }
      /**
       * <code>float min_snr = 3;</code>
       */
      public Builder setMinSnr(float value) {
        
        minSnr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float min_snr = 3;</code>
       */
      public Builder clearMinSnr() {
        
        minSnr_ = 0F;
        onChanged();
        return this;
      }

      private double maxPrecision_ ;
      /**
       * <code>double max_precision = 4;</code>
       */
      public double getMaxPrecision() {
        return maxPrecision_;
      }
      /**
       * <code>double max_precision = 4;</code>
       */
      public Builder setMaxPrecision(double value) {
        
        maxPrecision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double max_precision = 4;</code>
       */
      public Builder clearMaxPrecision() {
        
        maxPrecision_ = 0D;
        onChanged();
        return this;
      }

      private float maxWidth_ ;
      /**
       * <code>float max_width = 5;</code>
       */
      public float getMaxWidth() {
        return maxWidth_;
      }
      /**
       * <code>float max_width = 5;</code>
       */
      public Builder setMaxWidth(float value) {
        
        maxWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float max_width = 5;</code>
       */
      public Builder clearMaxWidth() {
        
        maxWidth_ = 0F;
        onChanged();
        return this;
      }

      private float minWidth_ ;
      /**
       * <code>float min_width = 6;</code>
       */
      public float getMinWidth() {
        return minWidth_;
      }
      /**
       * <code>float min_width = 6;</code>
       */
      public Builder setMinWidth(float value) {
        
        minWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float min_width = 6;</code>
       */
      public Builder clearMinWidth() {
        
        minWidth_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object maskTitle_ = "";
      /**
       * <code>string mask_title = 7;</code>
       */
      public java.lang.String getMaskTitle() {
        java.lang.Object ref = maskTitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          maskTitle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMaskTitleBytes() {
        java.lang.Object ref = maskTitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          maskTitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public Builder setMaskTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        maskTitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public Builder clearMaskTitle() {
        
        maskTitle_ = getDefaultInstance().getMaskTitle();
        onChanged();
        return this;
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public Builder setMaskTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        maskTitle_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object freeFilter_ = "";
      /**
       * <code>string free_filter = 8;</code>
       */
      public java.lang.String getFreeFilter() {
        java.lang.Object ref = freeFilter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          freeFilter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public com.google.protobuf.ByteString
          getFreeFilterBytes() {
        java.lang.Object ref = freeFilter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          freeFilter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public Builder setFreeFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        freeFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public Builder clearFreeFilter() {
        
        freeFilter_ = getDefaultInstance().getFreeFilter();
        onChanged();
        return this;
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public Builder setFreeFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        freeFilter_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filterTemplate_ = "";
      /**
       * <code>string filter_template = 9;</code>
       */
      public java.lang.String getFilterTemplate() {
        java.lang.Object ref = filterTemplate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filterTemplate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public com.google.protobuf.ByteString
          getFilterTemplateBytes() {
        java.lang.Object ref = filterTemplate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filterTemplate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public Builder setFilterTemplate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filterTemplate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public Builder clearFilterTemplate() {
        
        filterTemplate_ = getDefaultInstance().getFilterTemplate();
        onChanged();
        return this;
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public Builder setFilterTemplateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filterTemplate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filterAnalysisDirectory_ = "";
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public java.lang.String getFilterAnalysisDirectory() {
        java.lang.Object ref = filterAnalysisDirectory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filterAnalysisDirectory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public com.google.protobuf.ByteString
          getFilterAnalysisDirectoryBytes() {
        java.lang.Object ref = filterAnalysisDirectory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filterAnalysisDirectory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public Builder setFilterAnalysisDirectory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filterAnalysisDirectory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public Builder clearFilterAnalysisDirectory() {
        
        filterAnalysisDirectory_ = getDefaultInstance().getFilterAnalysisDirectory();
        onChanged();
        return this;
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public Builder setFilterAnalysisDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filterAnalysisDirectory_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filterSetFilename_ = "";
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public java.lang.String getFilterSetFilename() {
        java.lang.Object ref = filterSetFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filterSetFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public com.google.protobuf.ByteString
          getFilterSetFilenameBytes() {
        java.lang.Object ref = filterSetFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filterSetFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public Builder setFilterSetFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filterSetFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public Builder clearFilterSetFilename() {
        
        filterSetFilename_ = getDefaultInstance().getFilterSetFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public Builder setFilterSetFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filterSetFilename_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.GUIFilterSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.GUIFilterSettings)
    private static final gdsc.smlm.data.config.GUIConfig.GUIFilterSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIConfig.GUIFilterSettings();
    }

    public static gdsc.smlm.data.config.GUIConfig.GUIFilterSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GUIFilterSettings>
        PARSER = new com.google.protobuf.AbstractParser<GUIFilterSettings>() {
      public GUIFilterSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GUIFilterSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GUIFilterSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GUIFilterSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIConfig.GUIFilterSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PSFCalculatorSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.PSFCalculatorSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double pixel_pitch = 1;</code>
     */
    double getPixelPitch();

    /**
     * <code>double magnification = 2;</code>
     */
    double getMagnification();

    /**
     * <code>double beam_expander = 3;</code>
     */
    double getBeamExpander();

    /**
     * <code>double wavelength = 4;</code>
     */
    double getWavelength();

    /**
     * <code>double numerical_aperture = 5;</code>
     */
    double getNumericalAperture();

    /**
     * <code>bool adjust_for_square_pixels = 6;</code>
     */
    boolean getAdjustForSquarePixels();

    /**
     * <code>double proportionality_factor = 7;</code>
     */
    double getProportionalityFactor();
  }
  /**
   * <pre>
   * Contain the settings for the PSF Calculator
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.PSFCalculatorSettings}
   */
  public  static final class PSFCalculatorSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.PSFCalculatorSettings)
      PSFCalculatorSettingsOrBuilder {
    // Use PSFCalculatorSettings.newBuilder() to construct.
    private PSFCalculatorSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSFCalculatorSettings() {
      pixelPitch_ = 0D;
      magnification_ = 0D;
      beamExpander_ = 0D;
      wavelength_ = 0D;
      numericalAperture_ = 0D;
      adjustForSquarePixels_ = false;
      proportionalityFactor_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PSFCalculatorSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              pixelPitch_ = input.readDouble();
              break;
            }
            case 17: {

              magnification_ = input.readDouble();
              break;
            }
            case 25: {

              beamExpander_ = input.readDouble();
              break;
            }
            case 33: {

              wavelength_ = input.readDouble();
              break;
            }
            case 41: {

              numericalAperture_ = input.readDouble();
              break;
            }
            case 48: {

              adjustForSquarePixels_ = input.readBool();
              break;
            }
            case 57: {

              proportionalityFactor_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings.class, gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings.Builder.class);
    }

    public static final int PIXEL_PITCH_FIELD_NUMBER = 1;
    private double pixelPitch_;
    /**
     * <code>double pixel_pitch = 1;</code>
     */
    public double getPixelPitch() {
      return pixelPitch_;
    }

    public static final int MAGNIFICATION_FIELD_NUMBER = 2;
    private double magnification_;
    /**
     * <code>double magnification = 2;</code>
     */
    public double getMagnification() {
      return magnification_;
    }

    public static final int BEAM_EXPANDER_FIELD_NUMBER = 3;
    private double beamExpander_;
    /**
     * <code>double beam_expander = 3;</code>
     */
    public double getBeamExpander() {
      return beamExpander_;
    }

    public static final int WAVELENGTH_FIELD_NUMBER = 4;
    private double wavelength_;
    /**
     * <code>double wavelength = 4;</code>
     */
    public double getWavelength() {
      return wavelength_;
    }

    public static final int NUMERICAL_APERTURE_FIELD_NUMBER = 5;
    private double numericalAperture_;
    /**
     * <code>double numerical_aperture = 5;</code>
     */
    public double getNumericalAperture() {
      return numericalAperture_;
    }

    public static final int ADJUST_FOR_SQUARE_PIXELS_FIELD_NUMBER = 6;
    private boolean adjustForSquarePixels_;
    /**
     * <code>bool adjust_for_square_pixels = 6;</code>
     */
    public boolean getAdjustForSquarePixels() {
      return adjustForSquarePixels_;
    }

    public static final int PROPORTIONALITY_FACTOR_FIELD_NUMBER = 7;
    private double proportionalityFactor_;
    /**
     * <code>double proportionality_factor = 7;</code>
     */
    public double getProportionalityFactor() {
      return proportionalityFactor_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pixelPitch_ != 0D) {
        output.writeDouble(1, pixelPitch_);
      }
      if (magnification_ != 0D) {
        output.writeDouble(2, magnification_);
      }
      if (beamExpander_ != 0D) {
        output.writeDouble(3, beamExpander_);
      }
      if (wavelength_ != 0D) {
        output.writeDouble(4, wavelength_);
      }
      if (numericalAperture_ != 0D) {
        output.writeDouble(5, numericalAperture_);
      }
      if (adjustForSquarePixels_ != false) {
        output.writeBool(6, adjustForSquarePixels_);
      }
      if (proportionalityFactor_ != 0D) {
        output.writeDouble(7, proportionalityFactor_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pixelPitch_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, pixelPitch_);
      }
      if (magnification_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, magnification_);
      }
      if (beamExpander_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, beamExpander_);
      }
      if (wavelength_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, wavelength_);
      }
      if (numericalAperture_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, numericalAperture_);
      }
      if (adjustForSquarePixels_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, adjustForSquarePixels_);
      }
      if (proportionalityFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, proportionalityFactor_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings other = (gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getPixelPitch())
          == java.lang.Double.doubleToLongBits(
              other.getPixelPitch()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMagnification())
          == java.lang.Double.doubleToLongBits(
              other.getMagnification()));
      result = result && (
          java.lang.Double.doubleToLongBits(getBeamExpander())
          == java.lang.Double.doubleToLongBits(
              other.getBeamExpander()));
      result = result && (
          java.lang.Double.doubleToLongBits(getWavelength())
          == java.lang.Double.doubleToLongBits(
              other.getWavelength()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNumericalAperture())
          == java.lang.Double.doubleToLongBits(
              other.getNumericalAperture()));
      result = result && (getAdjustForSquarePixels()
          == other.getAdjustForSquarePixels());
      result = result && (
          java.lang.Double.doubleToLongBits(getProportionalityFactor())
          == java.lang.Double.doubleToLongBits(
              other.getProportionalityFactor()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PIXEL_PITCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPixelPitch()));
      hash = (37 * hash) + MAGNIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMagnification()));
      hash = (37 * hash) + BEAM_EXPANDER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBeamExpander()));
      hash = (37 * hash) + WAVELENGTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWavelength()));
      hash = (37 * hash) + NUMERICAL_APERTURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNumericalAperture()));
      hash = (37 * hash) + ADJUST_FOR_SQUARE_PIXELS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAdjustForSquarePixels());
      hash = (37 * hash) + PROPORTIONALITY_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getProportionalityFactor()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the PSF Calculator
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.PSFCalculatorSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.PSFCalculatorSettings)
        gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings.class, gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        pixelPitch_ = 0D;

        magnification_ = 0D;

        beamExpander_ = 0D;

        wavelength_ = 0D;

        numericalAperture_ = 0D;

        adjustForSquarePixels_ = false;

        proportionalityFactor_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings build() {
        gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings buildPartial() {
        gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings result = new gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings(this);
        result.pixelPitch_ = pixelPitch_;
        result.magnification_ = magnification_;
        result.beamExpander_ = beamExpander_;
        result.wavelength_ = wavelength_;
        result.numericalAperture_ = numericalAperture_;
        result.adjustForSquarePixels_ = adjustForSquarePixels_;
        result.proportionalityFactor_ = proportionalityFactor_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings other) {
        if (other == gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings.getDefaultInstance()) return this;
        if (other.getPixelPitch() != 0D) {
          setPixelPitch(other.getPixelPitch());
        }
        if (other.getMagnification() != 0D) {
          setMagnification(other.getMagnification());
        }
        if (other.getBeamExpander() != 0D) {
          setBeamExpander(other.getBeamExpander());
        }
        if (other.getWavelength() != 0D) {
          setWavelength(other.getWavelength());
        }
        if (other.getNumericalAperture() != 0D) {
          setNumericalAperture(other.getNumericalAperture());
        }
        if (other.getAdjustForSquarePixels() != false) {
          setAdjustForSquarePixels(other.getAdjustForSquarePixels());
        }
        if (other.getProportionalityFactor() != 0D) {
          setProportionalityFactor(other.getProportionalityFactor());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double pixelPitch_ ;
      /**
       * <code>double pixel_pitch = 1;</code>
       */
      public double getPixelPitch() {
        return pixelPitch_;
      }
      /**
       * <code>double pixel_pitch = 1;</code>
       */
      public Builder setPixelPitch(double value) {
        
        pixelPitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pixel_pitch = 1;</code>
       */
      public Builder clearPixelPitch() {
        
        pixelPitch_ = 0D;
        onChanged();
        return this;
      }

      private double magnification_ ;
      /**
       * <code>double magnification = 2;</code>
       */
      public double getMagnification() {
        return magnification_;
      }
      /**
       * <code>double magnification = 2;</code>
       */
      public Builder setMagnification(double value) {
        
        magnification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double magnification = 2;</code>
       */
      public Builder clearMagnification() {
        
        magnification_ = 0D;
        onChanged();
        return this;
      }

      private double beamExpander_ ;
      /**
       * <code>double beam_expander = 3;</code>
       */
      public double getBeamExpander() {
        return beamExpander_;
      }
      /**
       * <code>double beam_expander = 3;</code>
       */
      public Builder setBeamExpander(double value) {
        
        beamExpander_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double beam_expander = 3;</code>
       */
      public Builder clearBeamExpander() {
        
        beamExpander_ = 0D;
        onChanged();
        return this;
      }

      private double wavelength_ ;
      /**
       * <code>double wavelength = 4;</code>
       */
      public double getWavelength() {
        return wavelength_;
      }
      /**
       * <code>double wavelength = 4;</code>
       */
      public Builder setWavelength(double value) {
        
        wavelength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wavelength = 4;</code>
       */
      public Builder clearWavelength() {
        
        wavelength_ = 0D;
        onChanged();
        return this;
      }

      private double numericalAperture_ ;
      /**
       * <code>double numerical_aperture = 5;</code>
       */
      public double getNumericalAperture() {
        return numericalAperture_;
      }
      /**
       * <code>double numerical_aperture = 5;</code>
       */
      public Builder setNumericalAperture(double value) {
        
        numericalAperture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double numerical_aperture = 5;</code>
       */
      public Builder clearNumericalAperture() {
        
        numericalAperture_ = 0D;
        onChanged();
        return this;
      }

      private boolean adjustForSquarePixels_ ;
      /**
       * <code>bool adjust_for_square_pixels = 6;</code>
       */
      public boolean getAdjustForSquarePixels() {
        return adjustForSquarePixels_;
      }
      /**
       * <code>bool adjust_for_square_pixels = 6;</code>
       */
      public Builder setAdjustForSquarePixels(boolean value) {
        
        adjustForSquarePixels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool adjust_for_square_pixels = 6;</code>
       */
      public Builder clearAdjustForSquarePixels() {
        
        adjustForSquarePixels_ = false;
        onChanged();
        return this;
      }

      private double proportionalityFactor_ ;
      /**
       * <code>double proportionality_factor = 7;</code>
       */
      public double getProportionalityFactor() {
        return proportionalityFactor_;
      }
      /**
       * <code>double proportionality_factor = 7;</code>
       */
      public Builder setProportionalityFactor(double value) {
        
        proportionalityFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double proportionality_factor = 7;</code>
       */
      public Builder clearProportionalityFactor() {
        
        proportionalityFactor_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.PSFCalculatorSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.PSFCalculatorSettings)
    private static final gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings();
    }

    public static gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSFCalculatorSettings>
        PARSER = new com.google.protobuf.AbstractParser<PSFCalculatorSettings>() {
      public PSFCalculatorSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PSFCalculatorSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSFCalculatorSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSFCalculatorSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIConfig.PSFCalculatorSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PSFEstimatorSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.PSFEstimatorSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 number_of_peaks = 1;</code>
     */
    int getNumberOfPeaks();

    /**
     * <code>double p_value = 2;</code>
     */
    double getPValue();

    /**
     * <code>bool update_preferences = 3;</code>
     */
    boolean getUpdatePreferences();

    /**
     * <code>bool debug_psf_estimator = 4;</code>
     */
    boolean getDebugPsfEstimator();

    /**
     * <code>bool iterate = 5;</code>
     */
    boolean getIterate();

    /**
     * <code>bool show_histograms = 6;</code>
     */
    boolean getShowHistograms();

    /**
     * <code>int32 histogram_bins = 7;</code>
     */
    int getHistogramBins();
  }
  /**
   * <pre>
   * Contain the settings for the PSF Estimator
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.PSFEstimatorSettings}
   */
  public  static final class PSFEstimatorSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.PSFEstimatorSettings)
      PSFEstimatorSettingsOrBuilder {
    // Use PSFEstimatorSettings.newBuilder() to construct.
    private PSFEstimatorSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSFEstimatorSettings() {
      numberOfPeaks_ = 0;
      pValue_ = 0D;
      updatePreferences_ = false;
      debugPsfEstimator_ = false;
      iterate_ = false;
      showHistograms_ = false;
      histogramBins_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PSFEstimatorSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              numberOfPeaks_ = input.readInt32();
              break;
            }
            case 17: {

              pValue_ = input.readDouble();
              break;
            }
            case 24: {

              updatePreferences_ = input.readBool();
              break;
            }
            case 32: {

              debugPsfEstimator_ = input.readBool();
              break;
            }
            case 40: {

              iterate_ = input.readBool();
              break;
            }
            case 48: {

              showHistograms_ = input.readBool();
              break;
            }
            case 56: {

              histogramBins_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings.class, gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings.Builder.class);
    }

    public static final int NUMBER_OF_PEAKS_FIELD_NUMBER = 1;
    private int numberOfPeaks_;
    /**
     * <code>int32 number_of_peaks = 1;</code>
     */
    public int getNumberOfPeaks() {
      return numberOfPeaks_;
    }

    public static final int P_VALUE_FIELD_NUMBER = 2;
    private double pValue_;
    /**
     * <code>double p_value = 2;</code>
     */
    public double getPValue() {
      return pValue_;
    }

    public static final int UPDATE_PREFERENCES_FIELD_NUMBER = 3;
    private boolean updatePreferences_;
    /**
     * <code>bool update_preferences = 3;</code>
     */
    public boolean getUpdatePreferences() {
      return updatePreferences_;
    }

    public static final int DEBUG_PSF_ESTIMATOR_FIELD_NUMBER = 4;
    private boolean debugPsfEstimator_;
    /**
     * <code>bool debug_psf_estimator = 4;</code>
     */
    public boolean getDebugPsfEstimator() {
      return debugPsfEstimator_;
    }

    public static final int ITERATE_FIELD_NUMBER = 5;
    private boolean iterate_;
    /**
     * <code>bool iterate = 5;</code>
     */
    public boolean getIterate() {
      return iterate_;
    }

    public static final int SHOW_HISTOGRAMS_FIELD_NUMBER = 6;
    private boolean showHistograms_;
    /**
     * <code>bool show_histograms = 6;</code>
     */
    public boolean getShowHistograms() {
      return showHistograms_;
    }

    public static final int HISTOGRAM_BINS_FIELD_NUMBER = 7;
    private int histogramBins_;
    /**
     * <code>int32 histogram_bins = 7;</code>
     */
    public int getHistogramBins() {
      return histogramBins_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (numberOfPeaks_ != 0) {
        output.writeInt32(1, numberOfPeaks_);
      }
      if (pValue_ != 0D) {
        output.writeDouble(2, pValue_);
      }
      if (updatePreferences_ != false) {
        output.writeBool(3, updatePreferences_);
      }
      if (debugPsfEstimator_ != false) {
        output.writeBool(4, debugPsfEstimator_);
      }
      if (iterate_ != false) {
        output.writeBool(5, iterate_);
      }
      if (showHistograms_ != false) {
        output.writeBool(6, showHistograms_);
      }
      if (histogramBins_ != 0) {
        output.writeInt32(7, histogramBins_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numberOfPeaks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numberOfPeaks_);
      }
      if (pValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, pValue_);
      }
      if (updatePreferences_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, updatePreferences_);
      }
      if (debugPsfEstimator_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, debugPsfEstimator_);
      }
      if (iterate_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, iterate_);
      }
      if (showHistograms_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, showHistograms_);
      }
      if (histogramBins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, histogramBins_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings other = (gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings) obj;

      boolean result = true;
      result = result && (getNumberOfPeaks()
          == other.getNumberOfPeaks());
      result = result && (
          java.lang.Double.doubleToLongBits(getPValue())
          == java.lang.Double.doubleToLongBits(
              other.getPValue()));
      result = result && (getUpdatePreferences()
          == other.getUpdatePreferences());
      result = result && (getDebugPsfEstimator()
          == other.getDebugPsfEstimator());
      result = result && (getIterate()
          == other.getIterate());
      result = result && (getShowHistograms()
          == other.getShowHistograms());
      result = result && (getHistogramBins()
          == other.getHistogramBins());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUMBER_OF_PEAKS_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfPeaks();
      hash = (37 * hash) + P_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPValue()));
      hash = (37 * hash) + UPDATE_PREFERENCES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUpdatePreferences());
      hash = (37 * hash) + DEBUG_PSF_ESTIMATOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebugPsfEstimator());
      hash = (37 * hash) + ITERATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIterate());
      hash = (37 * hash) + SHOW_HISTOGRAMS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShowHistograms());
      hash = (37 * hash) + HISTOGRAM_BINS_FIELD_NUMBER;
      hash = (53 * hash) + getHistogramBins();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the PSF Estimator
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.PSFEstimatorSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.PSFEstimatorSettings)
        gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings.class, gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        numberOfPeaks_ = 0;

        pValue_ = 0D;

        updatePreferences_ = false;

        debugPsfEstimator_ = false;

        iterate_ = false;

        showHistograms_ = false;

        histogramBins_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIConfig.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings build() {
        gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings buildPartial() {
        gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings result = new gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings(this);
        result.numberOfPeaks_ = numberOfPeaks_;
        result.pValue_ = pValue_;
        result.updatePreferences_ = updatePreferences_;
        result.debugPsfEstimator_ = debugPsfEstimator_;
        result.iterate_ = iterate_;
        result.showHistograms_ = showHistograms_;
        result.histogramBins_ = histogramBins_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings other) {
        if (other == gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings.getDefaultInstance()) return this;
        if (other.getNumberOfPeaks() != 0) {
          setNumberOfPeaks(other.getNumberOfPeaks());
        }
        if (other.getPValue() != 0D) {
          setPValue(other.getPValue());
        }
        if (other.getUpdatePreferences() != false) {
          setUpdatePreferences(other.getUpdatePreferences());
        }
        if (other.getDebugPsfEstimator() != false) {
          setDebugPsfEstimator(other.getDebugPsfEstimator());
        }
        if (other.getIterate() != false) {
          setIterate(other.getIterate());
        }
        if (other.getShowHistograms() != false) {
          setShowHistograms(other.getShowHistograms());
        }
        if (other.getHistogramBins() != 0) {
          setHistogramBins(other.getHistogramBins());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int numberOfPeaks_ ;
      /**
       * <code>int32 number_of_peaks = 1;</code>
       */
      public int getNumberOfPeaks() {
        return numberOfPeaks_;
      }
      /**
       * <code>int32 number_of_peaks = 1;</code>
       */
      public Builder setNumberOfPeaks(int value) {
        
        numberOfPeaks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 number_of_peaks = 1;</code>
       */
      public Builder clearNumberOfPeaks() {
        
        numberOfPeaks_ = 0;
        onChanged();
        return this;
      }

      private double pValue_ ;
      /**
       * <code>double p_value = 2;</code>
       */
      public double getPValue() {
        return pValue_;
      }
      /**
       * <code>double p_value = 2;</code>
       */
      public Builder setPValue(double value) {
        
        pValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double p_value = 2;</code>
       */
      public Builder clearPValue() {
        
        pValue_ = 0D;
        onChanged();
        return this;
      }

      private boolean updatePreferences_ ;
      /**
       * <code>bool update_preferences = 3;</code>
       */
      public boolean getUpdatePreferences() {
        return updatePreferences_;
      }
      /**
       * <code>bool update_preferences = 3;</code>
       */
      public Builder setUpdatePreferences(boolean value) {
        
        updatePreferences_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool update_preferences = 3;</code>
       */
      public Builder clearUpdatePreferences() {
        
        updatePreferences_ = false;
        onChanged();
        return this;
      }

      private boolean debugPsfEstimator_ ;
      /**
       * <code>bool debug_psf_estimator = 4;</code>
       */
      public boolean getDebugPsfEstimator() {
        return debugPsfEstimator_;
      }
      /**
       * <code>bool debug_psf_estimator = 4;</code>
       */
      public Builder setDebugPsfEstimator(boolean value) {
        
        debugPsfEstimator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool debug_psf_estimator = 4;</code>
       */
      public Builder clearDebugPsfEstimator() {
        
        debugPsfEstimator_ = false;
        onChanged();
        return this;
      }

      private boolean iterate_ ;
      /**
       * <code>bool iterate = 5;</code>
       */
      public boolean getIterate() {
        return iterate_;
      }
      /**
       * <code>bool iterate = 5;</code>
       */
      public Builder setIterate(boolean value) {
        
        iterate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool iterate = 5;</code>
       */
      public Builder clearIterate() {
        
        iterate_ = false;
        onChanged();
        return this;
      }

      private boolean showHistograms_ ;
      /**
       * <code>bool show_histograms = 6;</code>
       */
      public boolean getShowHistograms() {
        return showHistograms_;
      }
      /**
       * <code>bool show_histograms = 6;</code>
       */
      public Builder setShowHistograms(boolean value) {
        
        showHistograms_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool show_histograms = 6;</code>
       */
      public Builder clearShowHistograms() {
        
        showHistograms_ = false;
        onChanged();
        return this;
      }

      private int histogramBins_ ;
      /**
       * <code>int32 histogram_bins = 7;</code>
       */
      public int getHistogramBins() {
        return histogramBins_;
      }
      /**
       * <code>int32 histogram_bins = 7;</code>
       */
      public Builder setHistogramBins(int value) {
        
        histogramBins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 histogram_bins = 7;</code>
       */
      public Builder clearHistogramBins() {
        
        histogramBins_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.PSFEstimatorSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.PSFEstimatorSettings)
    private static final gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings();
    }

    public static gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSFEstimatorSettings>
        PARSER = new com.google.protobuf.AbstractParser<PSFEstimatorSettings>() {
      public PSFEstimatorSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PSFEstimatorSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSFEstimatorSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSFEstimatorSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIConfig.PSFEstimatorSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020gui_config.proto\022\025gdsc.smlm.data.confi" +
      "g\"\212\002\n\021GUIFilterSettings\022\021\n\tmax_drift\030\001 \001" +
      "(\002\022\022\n\nmin_signal\030\002 \001(\002\022\017\n\007min_snr\030\003 \001(\002\022" +
      "\025\n\rmax_precision\030\004 \001(\001\022\021\n\tmax_width\030\005 \001(" +
      "\002\022\021\n\tmin_width\030\006 \001(\002\022\022\n\nmask_title\030\007 \001(\t" +
      "\022\023\n\013free_filter\030\010 \001(\t\022\027\n\017filter_template" +
      "\030\t \001(\t\022!\n\031filter_analysis_directory\030\n \001(" +
      "\t\022\033\n\023filter_set_filename\030\013 \001(\t\"\314\001\n\025PSFCa" +
      "lculatorSettings\022\023\n\013pixel_pitch\030\001 \001(\001\022\025\n" +
      "\rmagnification\030\002 \001(\001\022\025\n\rbeam_expander\030\003 ",
      "\001(\001\022\022\n\nwavelength\030\004 \001(\001\022\032\n\022numerical_ape" +
      "rture\030\005 \001(\001\022 \n\030adjust_for_square_pixels\030" +
      "\006 \001(\010\022\036\n\026proportionality_factor\030\007 \001(\001\"\273\001" +
      "\n\024PSFEstimatorSettings\022\027\n\017number_of_peak" +
      "s\030\001 \001(\005\022\017\n\007p_value\030\002 \001(\001\022\032\n\022update_prefe" +
      "rences\030\003 \001(\010\022\033\n\023debug_psf_estimator\030\004 \001(" +
      "\010\022\017\n\007iterate\030\005 \001(\010\022\027\n\017show_histograms\030\006 " +
      "\001(\010\022\026\n\016histogram_bins\030\007 \001(\005B\013B\tGUIConfig" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor,
        new java.lang.String[] { "MaxDrift", "MinSignal", "MinSnr", "MaxPrecision", "MaxWidth", "MinWidth", "MaskTitle", "FreeFilter", "FilterTemplate", "FilterAnalysisDirectory", "FilterSetFilename", });
    internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor,
        new java.lang.String[] { "PixelPitch", "Magnification", "BeamExpander", "Wavelength", "NumericalAperture", "AdjustForSquarePixels", "ProportionalityFactor", });
    internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor,
        new java.lang.String[] { "NumberOfPeaks", "PValue", "UpdatePreferences", "DebugPsfEstimator", "Iterate", "ShowHistograms", "HistogramBins", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
