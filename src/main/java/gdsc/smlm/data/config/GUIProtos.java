// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gui.proto

package gdsc.smlm.data.config;

@SuppressWarnings({"unchecked", "unused", "deprecation"})
public final class GUIProtos {
  private GUIProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code gdsc.smlm.data.config.TemplateType}
   */
  public enum TemplateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INLINE_TEMPLATE = 0;</code>
     */
    INLINE_TEMPLATE(0),
    /**
     * <code>RESOURCE_TEMPLATE = 1;</code>
     */
    RESOURCE_TEMPLATE(1),
    /**
     * <code>CUSTOM_TEMPLATE = 2;</code>
     */
    CUSTOM_TEMPLATE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>INLINE_TEMPLATE = 0;</code>
     */
    public static final int INLINE_TEMPLATE_VALUE = 0;
    /**
     * <code>RESOURCE_TEMPLATE = 1;</code>
     */
    public static final int RESOURCE_TEMPLATE_VALUE = 1;
    /**
     * <code>CUSTOM_TEMPLATE = 2;</code>
     */
    public static final int CUSTOM_TEMPLATE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TemplateType valueOf(int value) {
      return forNumber(value);
    }

    public static TemplateType forNumber(int value) {
      switch (value) {
        case 0: return INLINE_TEMPLATE;
        case 1: return RESOURCE_TEMPLATE;
        case 2: return CUSTOM_TEMPLATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TemplateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TemplateType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TemplateType>() {
            public TemplateType findValueByNumber(int number) {
              return TemplateType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final TemplateType[] VALUES = values();

    public static TemplateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TemplateType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gdsc.smlm.data.config.TemplateType)
  }

  public interface GUIFilterSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.GUIFilterSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float max_drift = 1;</code>
     */
    float getMaxDrift();

    /**
     * <code>float min_signal = 2;</code>
     */
    float getMinSignal();

    /**
     * <code>float min_snr = 3;</code>
     */
    float getMinSnr();

    /**
     * <code>double max_precision = 4;</code>
     */
    double getMaxPrecision();

    /**
     * <code>float max_width = 5;</code>
     */
    float getMaxWidth();

    /**
     * <code>float min_width = 6;</code>
     */
    float getMinWidth();

    /**
     * <code>string mask_title = 7;</code>
     */
    java.lang.String getMaskTitle();
    /**
     * <code>string mask_title = 7;</code>
     */
    com.google.protobuf.ByteString
        getMaskTitleBytes();

    /**
     * <code>string free_filter = 8;</code>
     */
    java.lang.String getFreeFilter();
    /**
     * <code>string free_filter = 8;</code>
     */
    com.google.protobuf.ByteString
        getFreeFilterBytes();

    /**
     * <code>string filter_template = 9;</code>
     */
    java.lang.String getFilterTemplate();
    /**
     * <code>string filter_template = 9;</code>
     */
    com.google.protobuf.ByteString
        getFilterTemplateBytes();

    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    java.lang.String getFilterAnalysisDirectory();
    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    com.google.protobuf.ByteString
        getFilterAnalysisDirectoryBytes();

    /**
     * <code>string filter_set_filename = 11;</code>
     */
    java.lang.String getFilterSetFilename();
    /**
     * <code>string filter_set_filename = 11;</code>
     */
    com.google.protobuf.ByteString
        getFilterSetFilenameBytes();
  }
  /**
   * <pre>
   * Contain the settings for the result filtering
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.GUIFilterSettings}
   */
  public  static final class GUIFilterSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.GUIFilterSettings)
      GUIFilterSettingsOrBuilder {
    // Use GUIFilterSettings.newBuilder() to construct.
    private GUIFilterSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GUIFilterSettings() {
      maxDrift_ = 0F;
      minSignal_ = 0F;
      minSnr_ = 0F;
      maxPrecision_ = 0D;
      maxWidth_ = 0F;
      minWidth_ = 0F;
      maskTitle_ = "";
      freeFilter_ = "";
      filterTemplate_ = "";
      filterAnalysisDirectory_ = "";
      filterSetFilename_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GUIFilterSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              maxDrift_ = input.readFloat();
              break;
            }
            case 21: {

              minSignal_ = input.readFloat();
              break;
            }
            case 29: {

              minSnr_ = input.readFloat();
              break;
            }
            case 33: {

              maxPrecision_ = input.readDouble();
              break;
            }
            case 45: {

              maxWidth_ = input.readFloat();
              break;
            }
            case 53: {

              minWidth_ = input.readFloat();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              maskTitle_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              freeFilter_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              filterTemplate_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              filterAnalysisDirectory_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              filterSetFilename_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.GUIFilterSettings.class, gdsc.smlm.data.config.GUIProtos.GUIFilterSettings.Builder.class);
    }

    public static final int MAX_DRIFT_FIELD_NUMBER = 1;
    private float maxDrift_;
    /**
     * <code>float max_drift = 1;</code>
     */
    public float getMaxDrift() {
      return maxDrift_;
    }

    public static final int MIN_SIGNAL_FIELD_NUMBER = 2;
    private float minSignal_;
    /**
     * <code>float min_signal = 2;</code>
     */
    public float getMinSignal() {
      return minSignal_;
    }

    public static final int MIN_SNR_FIELD_NUMBER = 3;
    private float minSnr_;
    /**
     * <code>float min_snr = 3;</code>
     */
    public float getMinSnr() {
      return minSnr_;
    }

    public static final int MAX_PRECISION_FIELD_NUMBER = 4;
    private double maxPrecision_;
    /**
     * <code>double max_precision = 4;</code>
     */
    public double getMaxPrecision() {
      return maxPrecision_;
    }

    public static final int MAX_WIDTH_FIELD_NUMBER = 5;
    private float maxWidth_;
    /**
     * <code>float max_width = 5;</code>
     */
    public float getMaxWidth() {
      return maxWidth_;
    }

    public static final int MIN_WIDTH_FIELD_NUMBER = 6;
    private float minWidth_;
    /**
     * <code>float min_width = 6;</code>
     */
    public float getMinWidth() {
      return minWidth_;
    }

    public static final int MASK_TITLE_FIELD_NUMBER = 7;
    private volatile java.lang.Object maskTitle_;
    /**
     * <code>string mask_title = 7;</code>
     */
    public java.lang.String getMaskTitle() {
      java.lang.Object ref = maskTitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        maskTitle_ = s;
        return s;
      }
    }
    /**
     * <code>string mask_title = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMaskTitleBytes() {
      java.lang.Object ref = maskTitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        maskTitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREE_FILTER_FIELD_NUMBER = 8;
    private volatile java.lang.Object freeFilter_;
    /**
     * <code>string free_filter = 8;</code>
     */
    public java.lang.String getFreeFilter() {
      java.lang.Object ref = freeFilter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        freeFilter_ = s;
        return s;
      }
    }
    /**
     * <code>string free_filter = 8;</code>
     */
    public com.google.protobuf.ByteString
        getFreeFilterBytes() {
      java.lang.Object ref = freeFilter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        freeFilter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_TEMPLATE_FIELD_NUMBER = 9;
    private volatile java.lang.Object filterTemplate_;
    /**
     * <code>string filter_template = 9;</code>
     */
    public java.lang.String getFilterTemplate() {
      java.lang.Object ref = filterTemplate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filterTemplate_ = s;
        return s;
      }
    }
    /**
     * <code>string filter_template = 9;</code>
     */
    public com.google.protobuf.ByteString
        getFilterTemplateBytes() {
      java.lang.Object ref = filterTemplate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filterTemplate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_ANALYSIS_DIRECTORY_FIELD_NUMBER = 10;
    private volatile java.lang.Object filterAnalysisDirectory_;
    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    public java.lang.String getFilterAnalysisDirectory() {
      java.lang.Object ref = filterAnalysisDirectory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filterAnalysisDirectory_ = s;
        return s;
      }
    }
    /**
     * <code>string filter_analysis_directory = 10;</code>
     */
    public com.google.protobuf.ByteString
        getFilterAnalysisDirectoryBytes() {
      java.lang.Object ref = filterAnalysisDirectory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filterAnalysisDirectory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_SET_FILENAME_FIELD_NUMBER = 11;
    private volatile java.lang.Object filterSetFilename_;
    /**
     * <code>string filter_set_filename = 11;</code>
     */
    public java.lang.String getFilterSetFilename() {
      java.lang.Object ref = filterSetFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filterSetFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string filter_set_filename = 11;</code>
     */
    public com.google.protobuf.ByteString
        getFilterSetFilenameBytes() {
      java.lang.Object ref = filterSetFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filterSetFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxDrift_ != 0F) {
        output.writeFloat(1, maxDrift_);
      }
      if (minSignal_ != 0F) {
        output.writeFloat(2, minSignal_);
      }
      if (minSnr_ != 0F) {
        output.writeFloat(3, minSnr_);
      }
      if (maxPrecision_ != 0D) {
        output.writeDouble(4, maxPrecision_);
      }
      if (maxWidth_ != 0F) {
        output.writeFloat(5, maxWidth_);
      }
      if (minWidth_ != 0F) {
        output.writeFloat(6, minWidth_);
      }
      if (!getMaskTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, maskTitle_);
      }
      if (!getFreeFilterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, freeFilter_);
      }
      if (!getFilterTemplateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, filterTemplate_);
      }
      if (!getFilterAnalysisDirectoryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, filterAnalysisDirectory_);
      }
      if (!getFilterSetFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, filterSetFilename_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxDrift_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, maxDrift_);
      }
      if (minSignal_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minSignal_);
      }
      if (minSnr_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, minSnr_);
      }
      if (maxPrecision_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, maxPrecision_);
      }
      if (maxWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxWidth_);
      }
      if (minWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minWidth_);
      }
      if (!getMaskTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, maskTitle_);
      }
      if (!getFreeFilterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, freeFilter_);
      }
      if (!getFilterTemplateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, filterTemplate_);
      }
      if (!getFilterAnalysisDirectoryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, filterAnalysisDirectory_);
      }
      if (!getFilterSetFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, filterSetFilename_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.GUIFilterSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.GUIFilterSettings other = (gdsc.smlm.data.config.GUIProtos.GUIFilterSettings) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getMaxDrift())
          == java.lang.Float.floatToIntBits(
              other.getMaxDrift()));
      result = result && (
          java.lang.Float.floatToIntBits(getMinSignal())
          == java.lang.Float.floatToIntBits(
              other.getMinSignal()));
      result = result && (
          java.lang.Float.floatToIntBits(getMinSnr())
          == java.lang.Float.floatToIntBits(
              other.getMinSnr()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxPrecision())
          == java.lang.Double.doubleToLongBits(
              other.getMaxPrecision()));
      result = result && (
          java.lang.Float.floatToIntBits(getMaxWidth())
          == java.lang.Float.floatToIntBits(
              other.getMaxWidth()));
      result = result && (
          java.lang.Float.floatToIntBits(getMinWidth())
          == java.lang.Float.floatToIntBits(
              other.getMinWidth()));
      result = result && getMaskTitle()
          .equals(other.getMaskTitle());
      result = result && getFreeFilter()
          .equals(other.getFreeFilter());
      result = result && getFilterTemplate()
          .equals(other.getFilterTemplate());
      result = result && getFilterAnalysisDirectory()
          .equals(other.getFilterAnalysisDirectory());
      result = result && getFilterSetFilename()
          .equals(other.getFilterSetFilename());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAX_DRIFT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxDrift());
      hash = (37 * hash) + MIN_SIGNAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinSignal());
      hash = (37 * hash) + MIN_SNR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinSnr());
      hash = (37 * hash) + MAX_PRECISION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxPrecision()));
      hash = (37 * hash) + MAX_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxWidth());
      hash = (37 * hash) + MIN_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinWidth());
      hash = (37 * hash) + MASK_TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getMaskTitle().hashCode();
      hash = (37 * hash) + FREE_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFreeFilter().hashCode();
      hash = (37 * hash) + FILTER_TEMPLATE_FIELD_NUMBER;
      hash = (53 * hash) + getFilterTemplate().hashCode();
      hash = (37 * hash) + FILTER_ANALYSIS_DIRECTORY_FIELD_NUMBER;
      hash = (53 * hash) + getFilterAnalysisDirectory().hashCode();
      hash = (37 * hash) + FILTER_SET_FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFilterSetFilename().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.GUIFilterSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the result filtering
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.GUIFilterSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.GUIFilterSettings)
        gdsc.smlm.data.config.GUIProtos.GUIFilterSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.GUIFilterSettings.class, gdsc.smlm.data.config.GUIProtos.GUIFilterSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.GUIFilterSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        maxDrift_ = 0F;

        minSignal_ = 0F;

        minSnr_ = 0F;

        maxPrecision_ = 0D;

        maxWidth_ = 0F;

        minWidth_ = 0F;

        maskTitle_ = "";

        freeFilter_ = "";

        filterTemplate_ = "";

        filterAnalysisDirectory_ = "";

        filterSetFilename_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.GUIFilterSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.GUIFilterSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.GUIFilterSettings build() {
        gdsc.smlm.data.config.GUIProtos.GUIFilterSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.GUIFilterSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.GUIFilterSettings result = new gdsc.smlm.data.config.GUIProtos.GUIFilterSettings(this);
        result.maxDrift_ = maxDrift_;
        result.minSignal_ = minSignal_;
        result.minSnr_ = minSnr_;
        result.maxPrecision_ = maxPrecision_;
        result.maxWidth_ = maxWidth_;
        result.minWidth_ = minWidth_;
        result.maskTitle_ = maskTitle_;
        result.freeFilter_ = freeFilter_;
        result.filterTemplate_ = filterTemplate_;
        result.filterAnalysisDirectory_ = filterAnalysisDirectory_;
        result.filterSetFilename_ = filterSetFilename_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.GUIFilterSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.GUIFilterSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.GUIFilterSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.GUIFilterSettings.getDefaultInstance()) return this;
        if (other.getMaxDrift() != 0F) {
          setMaxDrift(other.getMaxDrift());
        }
        if (other.getMinSignal() != 0F) {
          setMinSignal(other.getMinSignal());
        }
        if (other.getMinSnr() != 0F) {
          setMinSnr(other.getMinSnr());
        }
        if (other.getMaxPrecision() != 0D) {
          setMaxPrecision(other.getMaxPrecision());
        }
        if (other.getMaxWidth() != 0F) {
          setMaxWidth(other.getMaxWidth());
        }
        if (other.getMinWidth() != 0F) {
          setMinWidth(other.getMinWidth());
        }
        if (!other.getMaskTitle().isEmpty()) {
          maskTitle_ = other.maskTitle_;
          onChanged();
        }
        if (!other.getFreeFilter().isEmpty()) {
          freeFilter_ = other.freeFilter_;
          onChanged();
        }
        if (!other.getFilterTemplate().isEmpty()) {
          filterTemplate_ = other.filterTemplate_;
          onChanged();
        }
        if (!other.getFilterAnalysisDirectory().isEmpty()) {
          filterAnalysisDirectory_ = other.filterAnalysisDirectory_;
          onChanged();
        }
        if (!other.getFilterSetFilename().isEmpty()) {
          filterSetFilename_ = other.filterSetFilename_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.GUIFilterSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.GUIFilterSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float maxDrift_ ;
      /**
       * <code>float max_drift = 1;</code>
       */
      public float getMaxDrift() {
        return maxDrift_;
      }
      /**
       * <code>float max_drift = 1;</code>
       */
      public Builder setMaxDrift(float value) {
        
        maxDrift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float max_drift = 1;</code>
       */
      public Builder clearMaxDrift() {
        
        maxDrift_ = 0F;
        onChanged();
        return this;
      }

      private float minSignal_ ;
      /**
       * <code>float min_signal = 2;</code>
       */
      public float getMinSignal() {
        return minSignal_;
      }
      /**
       * <code>float min_signal = 2;</code>
       */
      public Builder setMinSignal(float value) {
        
        minSignal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float min_signal = 2;</code>
       */
      public Builder clearMinSignal() {
        
        minSignal_ = 0F;
        onChanged();
        return this;
      }

      private float minSnr_ ;
      /**
       * <code>float min_snr = 3;</code>
       */
      public float getMinSnr() {
        return minSnr_;
      }
      /**
       * <code>float min_snr = 3;</code>
       */
      public Builder setMinSnr(float value) {
        
        minSnr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float min_snr = 3;</code>
       */
      public Builder clearMinSnr() {
        
        minSnr_ = 0F;
        onChanged();
        return this;
      }

      private double maxPrecision_ ;
      /**
       * <code>double max_precision = 4;</code>
       */
      public double getMaxPrecision() {
        return maxPrecision_;
      }
      /**
       * <code>double max_precision = 4;</code>
       */
      public Builder setMaxPrecision(double value) {
        
        maxPrecision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double max_precision = 4;</code>
       */
      public Builder clearMaxPrecision() {
        
        maxPrecision_ = 0D;
        onChanged();
        return this;
      }

      private float maxWidth_ ;
      /**
       * <code>float max_width = 5;</code>
       */
      public float getMaxWidth() {
        return maxWidth_;
      }
      /**
       * <code>float max_width = 5;</code>
       */
      public Builder setMaxWidth(float value) {
        
        maxWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float max_width = 5;</code>
       */
      public Builder clearMaxWidth() {
        
        maxWidth_ = 0F;
        onChanged();
        return this;
      }

      private float minWidth_ ;
      /**
       * <code>float min_width = 6;</code>
       */
      public float getMinWidth() {
        return minWidth_;
      }
      /**
       * <code>float min_width = 6;</code>
       */
      public Builder setMinWidth(float value) {
        
        minWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float min_width = 6;</code>
       */
      public Builder clearMinWidth() {
        
        minWidth_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object maskTitle_ = "";
      /**
       * <code>string mask_title = 7;</code>
       */
      public java.lang.String getMaskTitle() {
        java.lang.Object ref = maskTitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          maskTitle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMaskTitleBytes() {
        java.lang.Object ref = maskTitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          maskTitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public Builder setMaskTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        maskTitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public Builder clearMaskTitle() {
        
        maskTitle_ = getDefaultInstance().getMaskTitle();
        onChanged();
        return this;
      }
      /**
       * <code>string mask_title = 7;</code>
       */
      public Builder setMaskTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        maskTitle_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object freeFilter_ = "";
      /**
       * <code>string free_filter = 8;</code>
       */
      public java.lang.String getFreeFilter() {
        java.lang.Object ref = freeFilter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          freeFilter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public com.google.protobuf.ByteString
          getFreeFilterBytes() {
        java.lang.Object ref = freeFilter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          freeFilter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public Builder setFreeFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        freeFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public Builder clearFreeFilter() {
        
        freeFilter_ = getDefaultInstance().getFreeFilter();
        onChanged();
        return this;
      }
      /**
       * <code>string free_filter = 8;</code>
       */
      public Builder setFreeFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        freeFilter_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filterTemplate_ = "";
      /**
       * <code>string filter_template = 9;</code>
       */
      public java.lang.String getFilterTemplate() {
        java.lang.Object ref = filterTemplate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filterTemplate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public com.google.protobuf.ByteString
          getFilterTemplateBytes() {
        java.lang.Object ref = filterTemplate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filterTemplate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public Builder setFilterTemplate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filterTemplate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public Builder clearFilterTemplate() {
        
        filterTemplate_ = getDefaultInstance().getFilterTemplate();
        onChanged();
        return this;
      }
      /**
       * <code>string filter_template = 9;</code>
       */
      public Builder setFilterTemplateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filterTemplate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filterAnalysisDirectory_ = "";
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public java.lang.String getFilterAnalysisDirectory() {
        java.lang.Object ref = filterAnalysisDirectory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filterAnalysisDirectory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public com.google.protobuf.ByteString
          getFilterAnalysisDirectoryBytes() {
        java.lang.Object ref = filterAnalysisDirectory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filterAnalysisDirectory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public Builder setFilterAnalysisDirectory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filterAnalysisDirectory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public Builder clearFilterAnalysisDirectory() {
        
        filterAnalysisDirectory_ = getDefaultInstance().getFilterAnalysisDirectory();
        onChanged();
        return this;
      }
      /**
       * <code>string filter_analysis_directory = 10;</code>
       */
      public Builder setFilterAnalysisDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filterAnalysisDirectory_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filterSetFilename_ = "";
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public java.lang.String getFilterSetFilename() {
        java.lang.Object ref = filterSetFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filterSetFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public com.google.protobuf.ByteString
          getFilterSetFilenameBytes() {
        java.lang.Object ref = filterSetFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filterSetFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public Builder setFilterSetFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filterSetFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public Builder clearFilterSetFilename() {
        
        filterSetFilename_ = getDefaultInstance().getFilterSetFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string filter_set_filename = 11;</code>
       */
      public Builder setFilterSetFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filterSetFilename_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.GUIFilterSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.GUIFilterSettings)
    private static final gdsc.smlm.data.config.GUIProtos.GUIFilterSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.GUIFilterSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.GUIFilterSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GUIFilterSettings>
        PARSER = new com.google.protobuf.AbstractParser<GUIFilterSettings>() {
      public GUIFilterSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GUIFilterSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GUIFilterSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GUIFilterSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.GUIFilterSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PSFCalculatorSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.PSFCalculatorSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double pixel_pitch = 1;</code>
     */
    double getPixelPitch();

    /**
     * <code>double magnification = 2;</code>
     */
    double getMagnification();

    /**
     * <code>double beam_expander = 3;</code>
     */
    double getBeamExpander();

    /**
     * <code>double wavelength = 4;</code>
     */
    double getWavelength();

    /**
     * <code>double numerical_aperture = 5;</code>
     */
    double getNumericalAperture();

    /**
     * <code>bool adjust_for_square_pixels = 6;</code>
     */
    boolean getAdjustForSquarePixels();

    /**
     * <code>double proportionality_factor = 7;</code>
     */
    double getProportionalityFactor();
  }
  /**
   * <pre>
   * Contain the settings for the PSF Calculator
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.PSFCalculatorSettings}
   */
  public  static final class PSFCalculatorSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.PSFCalculatorSettings)
      PSFCalculatorSettingsOrBuilder {
    // Use PSFCalculatorSettings.newBuilder() to construct.
    private PSFCalculatorSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSFCalculatorSettings() {
      pixelPitch_ = 0D;
      magnification_ = 0D;
      beamExpander_ = 0D;
      wavelength_ = 0D;
      numericalAperture_ = 0D;
      adjustForSquarePixels_ = false;
      proportionalityFactor_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PSFCalculatorSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              pixelPitch_ = input.readDouble();
              break;
            }
            case 17: {

              magnification_ = input.readDouble();
              break;
            }
            case 25: {

              beamExpander_ = input.readDouble();
              break;
            }
            case 33: {

              wavelength_ = input.readDouble();
              break;
            }
            case 41: {

              numericalAperture_ = input.readDouble();
              break;
            }
            case 48: {

              adjustForSquarePixels_ = input.readBool();
              break;
            }
            case 57: {

              proportionalityFactor_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings.class, gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings.Builder.class);
    }

    public static final int PIXEL_PITCH_FIELD_NUMBER = 1;
    private double pixelPitch_;
    /**
     * <code>double pixel_pitch = 1;</code>
     */
    public double getPixelPitch() {
      return pixelPitch_;
    }

    public static final int MAGNIFICATION_FIELD_NUMBER = 2;
    private double magnification_;
    /**
     * <code>double magnification = 2;</code>
     */
    public double getMagnification() {
      return magnification_;
    }

    public static final int BEAM_EXPANDER_FIELD_NUMBER = 3;
    private double beamExpander_;
    /**
     * <code>double beam_expander = 3;</code>
     */
    public double getBeamExpander() {
      return beamExpander_;
    }

    public static final int WAVELENGTH_FIELD_NUMBER = 4;
    private double wavelength_;
    /**
     * <code>double wavelength = 4;</code>
     */
    public double getWavelength() {
      return wavelength_;
    }

    public static final int NUMERICAL_APERTURE_FIELD_NUMBER = 5;
    private double numericalAperture_;
    /**
     * <code>double numerical_aperture = 5;</code>
     */
    public double getNumericalAperture() {
      return numericalAperture_;
    }

    public static final int ADJUST_FOR_SQUARE_PIXELS_FIELD_NUMBER = 6;
    private boolean adjustForSquarePixels_;
    /**
     * <code>bool adjust_for_square_pixels = 6;</code>
     */
    public boolean getAdjustForSquarePixels() {
      return adjustForSquarePixels_;
    }

    public static final int PROPORTIONALITY_FACTOR_FIELD_NUMBER = 7;
    private double proportionalityFactor_;
    /**
     * <code>double proportionality_factor = 7;</code>
     */
    public double getProportionalityFactor() {
      return proportionalityFactor_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pixelPitch_ != 0D) {
        output.writeDouble(1, pixelPitch_);
      }
      if (magnification_ != 0D) {
        output.writeDouble(2, magnification_);
      }
      if (beamExpander_ != 0D) {
        output.writeDouble(3, beamExpander_);
      }
      if (wavelength_ != 0D) {
        output.writeDouble(4, wavelength_);
      }
      if (numericalAperture_ != 0D) {
        output.writeDouble(5, numericalAperture_);
      }
      if (adjustForSquarePixels_ != false) {
        output.writeBool(6, adjustForSquarePixels_);
      }
      if (proportionalityFactor_ != 0D) {
        output.writeDouble(7, proportionalityFactor_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pixelPitch_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, pixelPitch_);
      }
      if (magnification_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, magnification_);
      }
      if (beamExpander_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, beamExpander_);
      }
      if (wavelength_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, wavelength_);
      }
      if (numericalAperture_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, numericalAperture_);
      }
      if (adjustForSquarePixels_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, adjustForSquarePixels_);
      }
      if (proportionalityFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, proportionalityFactor_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings other = (gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getPixelPitch())
          == java.lang.Double.doubleToLongBits(
              other.getPixelPitch()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMagnification())
          == java.lang.Double.doubleToLongBits(
              other.getMagnification()));
      result = result && (
          java.lang.Double.doubleToLongBits(getBeamExpander())
          == java.lang.Double.doubleToLongBits(
              other.getBeamExpander()));
      result = result && (
          java.lang.Double.doubleToLongBits(getWavelength())
          == java.lang.Double.doubleToLongBits(
              other.getWavelength()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNumericalAperture())
          == java.lang.Double.doubleToLongBits(
              other.getNumericalAperture()));
      result = result && (getAdjustForSquarePixels()
          == other.getAdjustForSquarePixels());
      result = result && (
          java.lang.Double.doubleToLongBits(getProportionalityFactor())
          == java.lang.Double.doubleToLongBits(
              other.getProportionalityFactor()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PIXEL_PITCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPixelPitch()));
      hash = (37 * hash) + MAGNIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMagnification()));
      hash = (37 * hash) + BEAM_EXPANDER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBeamExpander()));
      hash = (37 * hash) + WAVELENGTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWavelength()));
      hash = (37 * hash) + NUMERICAL_APERTURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNumericalAperture()));
      hash = (37 * hash) + ADJUST_FOR_SQUARE_PIXELS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAdjustForSquarePixels());
      hash = (37 * hash) + PROPORTIONALITY_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getProportionalityFactor()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the PSF Calculator
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.PSFCalculatorSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.PSFCalculatorSettings)
        gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings.class, gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        pixelPitch_ = 0D;

        magnification_ = 0D;

        beamExpander_ = 0D;

        wavelength_ = 0D;

        numericalAperture_ = 0D;

        adjustForSquarePixels_ = false;

        proportionalityFactor_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings build() {
        gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings result = new gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings(this);
        result.pixelPitch_ = pixelPitch_;
        result.magnification_ = magnification_;
        result.beamExpander_ = beamExpander_;
        result.wavelength_ = wavelength_;
        result.numericalAperture_ = numericalAperture_;
        result.adjustForSquarePixels_ = adjustForSquarePixels_;
        result.proportionalityFactor_ = proportionalityFactor_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings.getDefaultInstance()) return this;
        if (other.getPixelPitch() != 0D) {
          setPixelPitch(other.getPixelPitch());
        }
        if (other.getMagnification() != 0D) {
          setMagnification(other.getMagnification());
        }
        if (other.getBeamExpander() != 0D) {
          setBeamExpander(other.getBeamExpander());
        }
        if (other.getWavelength() != 0D) {
          setWavelength(other.getWavelength());
        }
        if (other.getNumericalAperture() != 0D) {
          setNumericalAperture(other.getNumericalAperture());
        }
        if (other.getAdjustForSquarePixels() != false) {
          setAdjustForSquarePixels(other.getAdjustForSquarePixels());
        }
        if (other.getProportionalityFactor() != 0D) {
          setProportionalityFactor(other.getProportionalityFactor());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double pixelPitch_ ;
      /**
       * <code>double pixel_pitch = 1;</code>
       */
      public double getPixelPitch() {
        return pixelPitch_;
      }
      /**
       * <code>double pixel_pitch = 1;</code>
       */
      public Builder setPixelPitch(double value) {
        
        pixelPitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pixel_pitch = 1;</code>
       */
      public Builder clearPixelPitch() {
        
        pixelPitch_ = 0D;
        onChanged();
        return this;
      }

      private double magnification_ ;
      /**
       * <code>double magnification = 2;</code>
       */
      public double getMagnification() {
        return magnification_;
      }
      /**
       * <code>double magnification = 2;</code>
       */
      public Builder setMagnification(double value) {
        
        magnification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double magnification = 2;</code>
       */
      public Builder clearMagnification() {
        
        magnification_ = 0D;
        onChanged();
        return this;
      }

      private double beamExpander_ ;
      /**
       * <code>double beam_expander = 3;</code>
       */
      public double getBeamExpander() {
        return beamExpander_;
      }
      /**
       * <code>double beam_expander = 3;</code>
       */
      public Builder setBeamExpander(double value) {
        
        beamExpander_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double beam_expander = 3;</code>
       */
      public Builder clearBeamExpander() {
        
        beamExpander_ = 0D;
        onChanged();
        return this;
      }

      private double wavelength_ ;
      /**
       * <code>double wavelength = 4;</code>
       */
      public double getWavelength() {
        return wavelength_;
      }
      /**
       * <code>double wavelength = 4;</code>
       */
      public Builder setWavelength(double value) {
        
        wavelength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wavelength = 4;</code>
       */
      public Builder clearWavelength() {
        
        wavelength_ = 0D;
        onChanged();
        return this;
      }

      private double numericalAperture_ ;
      /**
       * <code>double numerical_aperture = 5;</code>
       */
      public double getNumericalAperture() {
        return numericalAperture_;
      }
      /**
       * <code>double numerical_aperture = 5;</code>
       */
      public Builder setNumericalAperture(double value) {
        
        numericalAperture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double numerical_aperture = 5;</code>
       */
      public Builder clearNumericalAperture() {
        
        numericalAperture_ = 0D;
        onChanged();
        return this;
      }

      private boolean adjustForSquarePixels_ ;
      /**
       * <code>bool adjust_for_square_pixels = 6;</code>
       */
      public boolean getAdjustForSquarePixels() {
        return adjustForSquarePixels_;
      }
      /**
       * <code>bool adjust_for_square_pixels = 6;</code>
       */
      public Builder setAdjustForSquarePixels(boolean value) {
        
        adjustForSquarePixels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool adjust_for_square_pixels = 6;</code>
       */
      public Builder clearAdjustForSquarePixels() {
        
        adjustForSquarePixels_ = false;
        onChanged();
        return this;
      }

      private double proportionalityFactor_ ;
      /**
       * <code>double proportionality_factor = 7;</code>
       */
      public double getProportionalityFactor() {
        return proportionalityFactor_;
      }
      /**
       * <code>double proportionality_factor = 7;</code>
       */
      public Builder setProportionalityFactor(double value) {
        
        proportionalityFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double proportionality_factor = 7;</code>
       */
      public Builder clearProportionalityFactor() {
        
        proportionalityFactor_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.PSFCalculatorSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.PSFCalculatorSettings)
    private static final gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSFCalculatorSettings>
        PARSER = new com.google.protobuf.AbstractParser<PSFCalculatorSettings>() {
      public PSFCalculatorSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PSFCalculatorSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSFCalculatorSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSFCalculatorSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.PSFCalculatorSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PSFEstimatorSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.PSFEstimatorSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 number_of_peaks = 1;</code>
     */
    int getNumberOfPeaks();

    /**
     * <code>double p_value = 2;</code>
     */
    double getPValue();

    /**
     * <code>bool update_preferences = 3;</code>
     */
    boolean getUpdatePreferences();

    /**
     * <code>bool debug_psf_estimator = 4;</code>
     */
    boolean getDebugPsfEstimator();

    /**
     * <code>bool iterate = 5;</code>
     */
    boolean getIterate();

    /**
     * <code>bool show_histograms = 6;</code>
     */
    boolean getShowHistograms();

    /**
     * <code>int32 histogram_bins = 7;</code>
     */
    int getHistogramBins();
  }
  /**
   * <pre>
   * Contain the settings for the PSF Estimator
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.PSFEstimatorSettings}
   */
  public  static final class PSFEstimatorSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.PSFEstimatorSettings)
      PSFEstimatorSettingsOrBuilder {
    // Use PSFEstimatorSettings.newBuilder() to construct.
    private PSFEstimatorSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSFEstimatorSettings() {
      numberOfPeaks_ = 0;
      pValue_ = 0D;
      updatePreferences_ = false;
      debugPsfEstimator_ = false;
      iterate_ = false;
      showHistograms_ = false;
      histogramBins_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PSFEstimatorSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              numberOfPeaks_ = input.readInt32();
              break;
            }
            case 17: {

              pValue_ = input.readDouble();
              break;
            }
            case 24: {

              updatePreferences_ = input.readBool();
              break;
            }
            case 32: {

              debugPsfEstimator_ = input.readBool();
              break;
            }
            case 40: {

              iterate_ = input.readBool();
              break;
            }
            case 48: {

              showHistograms_ = input.readBool();
              break;
            }
            case 56: {

              histogramBins_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings.class, gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings.Builder.class);
    }

    public static final int NUMBER_OF_PEAKS_FIELD_NUMBER = 1;
    private int numberOfPeaks_;
    /**
     * <code>int32 number_of_peaks = 1;</code>
     */
    public int getNumberOfPeaks() {
      return numberOfPeaks_;
    }

    public static final int P_VALUE_FIELD_NUMBER = 2;
    private double pValue_;
    /**
     * <code>double p_value = 2;</code>
     */
    public double getPValue() {
      return pValue_;
    }

    public static final int UPDATE_PREFERENCES_FIELD_NUMBER = 3;
    private boolean updatePreferences_;
    /**
     * <code>bool update_preferences = 3;</code>
     */
    public boolean getUpdatePreferences() {
      return updatePreferences_;
    }

    public static final int DEBUG_PSF_ESTIMATOR_FIELD_NUMBER = 4;
    private boolean debugPsfEstimator_;
    /**
     * <code>bool debug_psf_estimator = 4;</code>
     */
    public boolean getDebugPsfEstimator() {
      return debugPsfEstimator_;
    }

    public static final int ITERATE_FIELD_NUMBER = 5;
    private boolean iterate_;
    /**
     * <code>bool iterate = 5;</code>
     */
    public boolean getIterate() {
      return iterate_;
    }

    public static final int SHOW_HISTOGRAMS_FIELD_NUMBER = 6;
    private boolean showHistograms_;
    /**
     * <code>bool show_histograms = 6;</code>
     */
    public boolean getShowHistograms() {
      return showHistograms_;
    }

    public static final int HISTOGRAM_BINS_FIELD_NUMBER = 7;
    private int histogramBins_;
    /**
     * <code>int32 histogram_bins = 7;</code>
     */
    public int getHistogramBins() {
      return histogramBins_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (numberOfPeaks_ != 0) {
        output.writeInt32(1, numberOfPeaks_);
      }
      if (pValue_ != 0D) {
        output.writeDouble(2, pValue_);
      }
      if (updatePreferences_ != false) {
        output.writeBool(3, updatePreferences_);
      }
      if (debugPsfEstimator_ != false) {
        output.writeBool(4, debugPsfEstimator_);
      }
      if (iterate_ != false) {
        output.writeBool(5, iterate_);
      }
      if (showHistograms_ != false) {
        output.writeBool(6, showHistograms_);
      }
      if (histogramBins_ != 0) {
        output.writeInt32(7, histogramBins_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numberOfPeaks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numberOfPeaks_);
      }
      if (pValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, pValue_);
      }
      if (updatePreferences_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, updatePreferences_);
      }
      if (debugPsfEstimator_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, debugPsfEstimator_);
      }
      if (iterate_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, iterate_);
      }
      if (showHistograms_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, showHistograms_);
      }
      if (histogramBins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, histogramBins_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings other = (gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings) obj;

      boolean result = true;
      result = result && (getNumberOfPeaks()
          == other.getNumberOfPeaks());
      result = result && (
          java.lang.Double.doubleToLongBits(getPValue())
          == java.lang.Double.doubleToLongBits(
              other.getPValue()));
      result = result && (getUpdatePreferences()
          == other.getUpdatePreferences());
      result = result && (getDebugPsfEstimator()
          == other.getDebugPsfEstimator());
      result = result && (getIterate()
          == other.getIterate());
      result = result && (getShowHistograms()
          == other.getShowHistograms());
      result = result && (getHistogramBins()
          == other.getHistogramBins());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUMBER_OF_PEAKS_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfPeaks();
      hash = (37 * hash) + P_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPValue()));
      hash = (37 * hash) + UPDATE_PREFERENCES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUpdatePreferences());
      hash = (37 * hash) + DEBUG_PSF_ESTIMATOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebugPsfEstimator());
      hash = (37 * hash) + ITERATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIterate());
      hash = (37 * hash) + SHOW_HISTOGRAMS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShowHistograms());
      hash = (37 * hash) + HISTOGRAM_BINS_FIELD_NUMBER;
      hash = (53 * hash) + getHistogramBins();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the PSF Estimator
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.PSFEstimatorSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.PSFEstimatorSettings)
        gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings.class, gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        numberOfPeaks_ = 0;

        pValue_ = 0D;

        updatePreferences_ = false;

        debugPsfEstimator_ = false;

        iterate_ = false;

        showHistograms_ = false;

        histogramBins_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings build() {
        gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings result = new gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings(this);
        result.numberOfPeaks_ = numberOfPeaks_;
        result.pValue_ = pValue_;
        result.updatePreferences_ = updatePreferences_;
        result.debugPsfEstimator_ = debugPsfEstimator_;
        result.iterate_ = iterate_;
        result.showHistograms_ = showHistograms_;
        result.histogramBins_ = histogramBins_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings.getDefaultInstance()) return this;
        if (other.getNumberOfPeaks() != 0) {
          setNumberOfPeaks(other.getNumberOfPeaks());
        }
        if (other.getPValue() != 0D) {
          setPValue(other.getPValue());
        }
        if (other.getUpdatePreferences() != false) {
          setUpdatePreferences(other.getUpdatePreferences());
        }
        if (other.getDebugPsfEstimator() != false) {
          setDebugPsfEstimator(other.getDebugPsfEstimator());
        }
        if (other.getIterate() != false) {
          setIterate(other.getIterate());
        }
        if (other.getShowHistograms() != false) {
          setShowHistograms(other.getShowHistograms());
        }
        if (other.getHistogramBins() != 0) {
          setHistogramBins(other.getHistogramBins());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int numberOfPeaks_ ;
      /**
       * <code>int32 number_of_peaks = 1;</code>
       */
      public int getNumberOfPeaks() {
        return numberOfPeaks_;
      }
      /**
       * <code>int32 number_of_peaks = 1;</code>
       */
      public Builder setNumberOfPeaks(int value) {
        
        numberOfPeaks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 number_of_peaks = 1;</code>
       */
      public Builder clearNumberOfPeaks() {
        
        numberOfPeaks_ = 0;
        onChanged();
        return this;
      }

      private double pValue_ ;
      /**
       * <code>double p_value = 2;</code>
       */
      public double getPValue() {
        return pValue_;
      }
      /**
       * <code>double p_value = 2;</code>
       */
      public Builder setPValue(double value) {
        
        pValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double p_value = 2;</code>
       */
      public Builder clearPValue() {
        
        pValue_ = 0D;
        onChanged();
        return this;
      }

      private boolean updatePreferences_ ;
      /**
       * <code>bool update_preferences = 3;</code>
       */
      public boolean getUpdatePreferences() {
        return updatePreferences_;
      }
      /**
       * <code>bool update_preferences = 3;</code>
       */
      public Builder setUpdatePreferences(boolean value) {
        
        updatePreferences_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool update_preferences = 3;</code>
       */
      public Builder clearUpdatePreferences() {
        
        updatePreferences_ = false;
        onChanged();
        return this;
      }

      private boolean debugPsfEstimator_ ;
      /**
       * <code>bool debug_psf_estimator = 4;</code>
       */
      public boolean getDebugPsfEstimator() {
        return debugPsfEstimator_;
      }
      /**
       * <code>bool debug_psf_estimator = 4;</code>
       */
      public Builder setDebugPsfEstimator(boolean value) {
        
        debugPsfEstimator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool debug_psf_estimator = 4;</code>
       */
      public Builder clearDebugPsfEstimator() {
        
        debugPsfEstimator_ = false;
        onChanged();
        return this;
      }

      private boolean iterate_ ;
      /**
       * <code>bool iterate = 5;</code>
       */
      public boolean getIterate() {
        return iterate_;
      }
      /**
       * <code>bool iterate = 5;</code>
       */
      public Builder setIterate(boolean value) {
        
        iterate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool iterate = 5;</code>
       */
      public Builder clearIterate() {
        
        iterate_ = false;
        onChanged();
        return this;
      }

      private boolean showHistograms_ ;
      /**
       * <code>bool show_histograms = 6;</code>
       */
      public boolean getShowHistograms() {
        return showHistograms_;
      }
      /**
       * <code>bool show_histograms = 6;</code>
       */
      public Builder setShowHistograms(boolean value) {
        
        showHistograms_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool show_histograms = 6;</code>
       */
      public Builder clearShowHistograms() {
        
        showHistograms_ = false;
        onChanged();
        return this;
      }

      private int histogramBins_ ;
      /**
       * <code>int32 histogram_bins = 7;</code>
       */
      public int getHistogramBins() {
        return histogramBins_;
      }
      /**
       * <code>int32 histogram_bins = 7;</code>
       */
      public Builder setHistogramBins(int value) {
        
        histogramBins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 histogram_bins = 7;</code>
       */
      public Builder clearHistogramBins() {
        
        histogramBins_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.PSFEstimatorSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.PSFEstimatorSettings)
    private static final gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSFEstimatorSettings>
        PARSER = new com.google.protobuf.AbstractParser<PSFEstimatorSettings>() {
      public PSFEstimatorSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PSFEstimatorSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSFEstimatorSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSFEstimatorSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.PSFEstimatorSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreateDataSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.CreateDataSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 size = 1;</code>
     */
    int getSize();

    /**
     * <code>double depth = 2;</code>
     */
    double getDepth();

    /**
     * <code>bool fixed_Depth = 3;</code>
     */
    boolean getFixedDepth();

    /**
     * <code>double seconds = 4;</code>
     */
    double getSeconds();

    /**
     * <code>double exposure_time = 5;</code>
     */
    double getExposureTime();

    /**
     * <code>double steps_per_second = 6;</code>
     */
    double getStepsPerSecond();

    /**
     * <code>string illumination = 7;</code>
     */
    java.lang.String getIllumination();
    /**
     * <code>string illumination = 7;</code>
     */
    com.google.protobuf.ByteString
        getIlluminationBytes();

    /**
     * <code>string background_image = 8;</code>
     */
    java.lang.String getBackgroundImage();
    /**
     * <code>string background_image = 8;</code>
     */
    com.google.protobuf.ByteString
        getBackgroundImageBytes();

    /**
     * <code>string distribution = 9;</code>
     */
    java.lang.String getDistribution();
    /**
     * <code>string distribution = 9;</code>
     */
    com.google.protobuf.ByteString
        getDistributionBytes();

    /**
     * <code>string distribution_mask = 10;</code>
     */
    java.lang.String getDistributionMask();
    /**
     * <code>string distribution_mask = 10;</code>
     */
    com.google.protobuf.ByteString
        getDistributionMaskBytes();

    /**
     * <code>double distribution_mask_slice_depth = 11;</code>
     */
    double getDistributionMaskSliceDepth();

    /**
     * <code>bool poisson_noise = 12;</code>
     */
    boolean getPoissonNoise();

    /**
     * <code>double background = 13;</code>
     */
    double getBackground();

    /**
     * <code>double em_gain = 14;</code>
     */
    double getEmGain();

    /**
     * <code>double camera_gain = 15;</code>
     */
    double getCameraGain();

    /**
     * <code>double quantum_efficiency = 16;</code>
     */
    double getQuantumEfficiency();

    /**
     * <pre>
     * The read noise (electrons).
     * </pre>
     *
     * <code>double read_noise = 17;</code>
     */
    double getReadNoise();

    /**
     * <code>int32 bias = 18;</code>
     */
    int getBias();

    /**
     * <code>int32 particles = 19;</code>
     */
    int getParticles();

    /**
     * <code>bool sample_per_frame = 20;</code>
     */
    boolean getSamplePerFrame();

    /**
     * <pre>
     * Photons are modelled using an emission rate (photon emission is constant when the fluorophore is on) sampled from
     * a distribution. The rate (average of the distribution) is correlated to the total on time. Observations on real
     * data indicate the correlation is around -0.35, i.e. shorter bursts are brighter.
     * </pre>
     *
     * <code>double photons_per_second = 21;</code>
     */
    double getPhotonsPerSecond();

    /**
     * <pre>
     * For a simple localisation model the photons are randomly selected between photonsPerSecond and
     * photonsPerSecondMaximum
     * </pre>
     *
     * <code>double photons_per_second_maximum = 22;</code>
     */
    double getPhotonsPerSecondMaximum();

    /**
     * <pre>
     * Define the distribution for the random photon emission. The default is to use a gamma
     * distribution with the defined shape parameter.
     * </pre>
     *
     * <code>string photon_distribution = 23;</code>
     */
    java.lang.String getPhotonDistribution();
    /**
     * <pre>
     * Define the distribution for the random photon emission. The default is to use a gamma
     * distribution with the defined shape parameter.
     * </pre>
     *
     * <code>string photon_distribution = 23;</code>
     */
    com.google.protobuf.ByteString
        getPhotonDistributionBytes();

    /**
     * <code>string photon_distribution_file = 24;</code>
     */
    java.lang.String getPhotonDistributionFile();
    /**
     * <code>string photon_distribution_file = 24;</code>
     */
    com.google.protobuf.ByteString
        getPhotonDistributionFileBytes();

    /**
     * <code>double photon_shape = 25;</code>
     */
    double getPhotonShape();

    /**
     * <code>double correlation = 26;</code>
     */
    double getCorrelation();

    /**
     * <code>string psf_model = 27;</code>
     */
    java.lang.String getPsfModel();
    /**
     * <code>string psf_model = 27;</code>
     */
    com.google.protobuf.ByteString
        getPsfModelBytes();

    /**
     * <code>string psf_image_name = 28;</code>
     */
    java.lang.String getPsfImageName();
    /**
     * <code>string psf_image_name = 28;</code>
     */
    com.google.protobuf.ByteString
        getPsfImageNameBytes();

    /**
     * <code>bool enter_width = 29;</code>
     */
    boolean getEnterWidth();

    /**
     * <code>double wavelength = 30;</code>
     */
    double getWavelength();

    /**
     * <code>double numerical_aperture = 31;</code>
     */
    double getNumericalAperture();

    /**
     * <code>double psf_sd = 32;</code>
     */
    double getPsfSd();

    /**
     * <code>double pixel_pitch = 33;</code>
     */
    double getPixelPitch();

    /**
     * <code>double density = 34;</code>
     */
    double getDensity();

    /**
     * <code>double diffusion_rate = 35;</code>
     */
    double getDiffusionRate();

    /**
     * <code>int32 diffusion_type = 36;</code>
     */
    int getDiffusionType();

    /**
     * <code>bool compound_molecules = 37;</code>
     */
    boolean getCompoundMolecules();

    /**
     * <code>string compound_text = 38;</code>
     */
    java.lang.String getCompoundText();
    /**
     * <code>string compound_text = 38;</code>
     */
    com.google.protobuf.ByteString
        getCompoundTextBytes();

    /**
     * <code>bool diffuse_2D = 39;</code>
     */
    boolean getDiffuse2D();

    /**
     * <code>bool rotate_initial_orientation = 40;</code>
     */
    boolean getRotateInitialOrientation();

    /**
     * <code>bool rotate_during_simulation = 41;</code>
     */
    boolean getRotateDuringSimulation();

    /**
     * <code>bool rotate_2D = 42;</code>
     */
    boolean getRotate2D();

    /**
     * <code>double fixedFraction = 43;</code>
     */
    double getFixedFraction();

    /**
     * <code>string confinement = 44;</code>
     */
    java.lang.String getConfinement();
    /**
     * <code>string confinement = 44;</code>
     */
    com.google.protobuf.ByteString
        getConfinementBytes();

    /**
     * <code>string confinement_mask = 45;</code>
     */
    java.lang.String getConfinementMask();
    /**
     * <code>string confinement_mask = 45;</code>
     */
    com.google.protobuf.ByteString
        getConfinementMaskBytes();

    /**
     * <code>double confinement_mask_slice_depth = 46;</code>
     */
    double getConfinementMaskSliceDepth();

    /**
     * <code>double confinement_radius = 47;</code>
     */
    double getConfinementRadius();

    /**
     * <code>int32 pulse_interval = 48;</code>
     */
    int getPulseInterval();

    /**
     * <code>double pulse_ratio = 49;</code>
     */
    double getPulseRatio();

    /**
     * <pre>
     * Average t-On in milliseconds
     * </pre>
     *
     * <code>double t_on = 50;</code>
     */
    double getTOn();

    /**
     * <pre>
     * Average t-Off for the short dark state in milliseconds
     * </pre>
     *
     * <code>double t_off_short = 51;</code>
     */
    double getTOffShort();

    /**
     * <pre>
     * Average t-Off for the long dark state in milliseconds
     * </pre>
     *
     * <code>double t_off_long = 52;</code>
     */
    double getTOffLong();

    /**
     * <pre>
     * Average number of short blinks, i.e. when transitioning from the on state to the short dark state
     * </pre>
     *
     * <code>double n_blinks_short = 53;</code>
     */
    double getNBlinksShort();

    /**
     * <pre>
     * Average number of long blinks, i.e. transitions to the long dark state
     * </pre>
     *
     * <code>double n_blinks_long = 54;</code>
     */
    double getNBlinksLong();

    /**
     * <pre>
     * Set to true to use a geometric distribution for the nBlinks. Default is to use a Poisson.
     * </pre>
     *
     * <code>bool n_blinks_geometric_distribution = 55;</code>
     */
    boolean getNBlinksGeometricDistribution();

    /**
     * <code>double min_photons = 56;</code>
     */
    double getMinPhotons();

    /**
     * <code>double min_snr_t1 = 57;</code>
     */
    double getMinSnrT1();

    /**
     * <code>double min_snr_tN = 58;</code>
     */
    double getMinSnrTN();

    /**
     * <code>bool raw_image = 59;</code>
     */
    boolean getRawImage();

    /**
     * <code>bool save_image = 60;</code>
     */
    boolean getSaveImage();

    /**
     * <code>bool save_image_results = 61;</code>
     */
    boolean getSaveImageResults();

    /**
     * <code>bool save_localisations = 62;</code>
     */
    boolean getSaveLocalisations();

    /**
     * <code>bool save_fluorophores = 63;</code>
     */
    boolean getSaveFluorophores();

    /**
     * <code>string image_filename = 64;</code>
     */
    java.lang.String getImageFilename();
    /**
     * <code>string image_filename = 64;</code>
     */
    com.google.protobuf.ByteString
        getImageFilenameBytes();

    /**
     * <code>string image_results_filename = 65;</code>
     */
    java.lang.String getImageResultsFilename();
    /**
     * <code>string image_results_filename = 65;</code>
     */
    com.google.protobuf.ByteString
        getImageResultsFilenameBytes();

    /**
     * <code>string fluorophoresFilename = 66;</code>
     */
    java.lang.String getFluorophoresFilename();
    /**
     * <code>string fluorophoresFilename = 66;</code>
     */
    com.google.protobuf.ByteString
        getFluorophoresFilenameBytes();

    /**
     * <code>int32 cell_size = 67;</code>
     */
    int getCellSize();

    /**
     * <code>double probability_binary = 68;</code>
     */
    double getProbabilityBinary();

    /**
     * <code>double min_binary_distance = 69;</code>
     */
    double getMinBinaryDistance();

    /**
     * <code>double max_binary_distance = 70;</code>
     */
    double getMaxBinaryDistance();

    /**
     * <code>bool show_histograms = 71;</code>
     */
    boolean getShowHistograms();

    /**
     * <code>bool choose_histograms = 72;</code>
     */
    boolean getChooseHistograms();

    /**
     * <code>int32 histogram_bins = 73;</code>
     */
    int getHistogramBins();

    /**
     * <code>bool remove_outliers = 74;</code>
     */
    boolean getRemoveOutliers();

    /**
     * <code>float density_radius = 75;</code>
     */
    float getDensityRadius();

    /**
     * <code>float depth_of_field = 76;</code>
     */
    float getDepthOfField();

    /**
     * <code>double x_position = 77;</code>
     */
    double getXPosition();

    /**
     * <code>double y_position = 78;</code>
     */
    double getYPosition();

    /**
     * <code>double z_position = 79;</code>
     */
    double getZPosition();

    /**
     * <pre>
     * The camera type.
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
     */
    int getCameraTypeValue();
    /**
     * <pre>
     * The camera type.
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
     */
    gdsc.smlm.data.config.CalibrationProtos.CameraType getCameraType();

    /**
     * <pre>
     * The camera model name. This should contain all the information required to 
     * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
     * </pre>
     *
     * <code>string camera_model_name = 81;</code>
     */
    java.lang.String getCameraModelName();
    /**
     * <pre>
     * The camera model name. This should contain all the information required to 
     * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
     * </pre>
     *
     * <code>string camera_model_name = 81;</code>
     */
    com.google.protobuf.ByteString
        getCameraModelNameBytes();

    /**
     * <code>bool random_crop = 82;</code>
     */
    boolean getRandomCrop();

    /**
     * <pre>
     * The origin x-coordinate used to crop the model
     * </pre>
     *
     * <code>int32 origin_x = 83;</code>
     */
    int getOriginX();

    /**
     * <pre>
     * The origin y-coordinate used to crop the model
     * </pre>
     *
     * <code>int32 origin_y = 84;</code>
     */
    int getOriginY();
  }
  /**
   * <pre>
   * Contain the settings for the Create Data plugin
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.CreateDataSettings}
   */
  public  static final class CreateDataSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.CreateDataSettings)
      CreateDataSettingsOrBuilder {
    // Use CreateDataSettings.newBuilder() to construct.
    private CreateDataSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateDataSettings() {
      size_ = 0;
      depth_ = 0D;
      fixedDepth_ = false;
      seconds_ = 0D;
      exposureTime_ = 0D;
      stepsPerSecond_ = 0D;
      illumination_ = "";
      backgroundImage_ = "";
      distribution_ = "";
      distributionMask_ = "";
      distributionMaskSliceDepth_ = 0D;
      poissonNoise_ = false;
      background_ = 0D;
      emGain_ = 0D;
      cameraGain_ = 0D;
      quantumEfficiency_ = 0D;
      readNoise_ = 0D;
      bias_ = 0;
      particles_ = 0;
      samplePerFrame_ = false;
      photonsPerSecond_ = 0D;
      photonsPerSecondMaximum_ = 0D;
      photonDistribution_ = "";
      photonDistributionFile_ = "";
      photonShape_ = 0D;
      correlation_ = 0D;
      psfModel_ = "";
      psfImageName_ = "";
      enterWidth_ = false;
      wavelength_ = 0D;
      numericalAperture_ = 0D;
      psfSd_ = 0D;
      pixelPitch_ = 0D;
      density_ = 0D;
      diffusionRate_ = 0D;
      diffusionType_ = 0;
      compoundMolecules_ = false;
      compoundText_ = "";
      diffuse2D_ = false;
      rotateInitialOrientation_ = false;
      rotateDuringSimulation_ = false;
      rotate2D_ = false;
      fixedFraction_ = 0D;
      confinement_ = "";
      confinementMask_ = "";
      confinementMaskSliceDepth_ = 0D;
      confinementRadius_ = 0D;
      pulseInterval_ = 0;
      pulseRatio_ = 0D;
      tOn_ = 0D;
      tOffShort_ = 0D;
      tOffLong_ = 0D;
      nBlinksShort_ = 0D;
      nBlinksLong_ = 0D;
      nBlinksGeometricDistribution_ = false;
      minPhotons_ = 0D;
      minSnrT1_ = 0D;
      minSnrTN_ = 0D;
      rawImage_ = false;
      saveImage_ = false;
      saveImageResults_ = false;
      saveLocalisations_ = false;
      saveFluorophores_ = false;
      imageFilename_ = "";
      imageResultsFilename_ = "";
      fluorophoresFilename_ = "";
      cellSize_ = 0;
      probabilityBinary_ = 0D;
      minBinaryDistance_ = 0D;
      maxBinaryDistance_ = 0D;
      showHistograms_ = false;
      chooseHistograms_ = false;
      histogramBins_ = 0;
      removeOutliers_ = false;
      densityRadius_ = 0F;
      depthOfField_ = 0F;
      xPosition_ = 0D;
      yPosition_ = 0D;
      zPosition_ = 0D;
      cameraType_ = 0;
      cameraModelName_ = "";
      randomCrop_ = false;
      originX_ = 0;
      originY_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CreateDataSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              size_ = input.readInt32();
              break;
            }
            case 17: {

              depth_ = input.readDouble();
              break;
            }
            case 24: {

              fixedDepth_ = input.readBool();
              break;
            }
            case 33: {

              seconds_ = input.readDouble();
              break;
            }
            case 41: {

              exposureTime_ = input.readDouble();
              break;
            }
            case 49: {

              stepsPerSecond_ = input.readDouble();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              illumination_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              backgroundImage_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              distribution_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              distributionMask_ = s;
              break;
            }
            case 89: {

              distributionMaskSliceDepth_ = input.readDouble();
              break;
            }
            case 96: {

              poissonNoise_ = input.readBool();
              break;
            }
            case 105: {

              background_ = input.readDouble();
              break;
            }
            case 113: {

              emGain_ = input.readDouble();
              break;
            }
            case 121: {

              cameraGain_ = input.readDouble();
              break;
            }
            case 129: {

              quantumEfficiency_ = input.readDouble();
              break;
            }
            case 137: {

              readNoise_ = input.readDouble();
              break;
            }
            case 144: {

              bias_ = input.readInt32();
              break;
            }
            case 152: {

              particles_ = input.readInt32();
              break;
            }
            case 160: {

              samplePerFrame_ = input.readBool();
              break;
            }
            case 169: {

              photonsPerSecond_ = input.readDouble();
              break;
            }
            case 177: {

              photonsPerSecondMaximum_ = input.readDouble();
              break;
            }
            case 186: {
              java.lang.String s = input.readStringRequireUtf8();

              photonDistribution_ = s;
              break;
            }
            case 194: {
              java.lang.String s = input.readStringRequireUtf8();

              photonDistributionFile_ = s;
              break;
            }
            case 201: {

              photonShape_ = input.readDouble();
              break;
            }
            case 209: {

              correlation_ = input.readDouble();
              break;
            }
            case 218: {
              java.lang.String s = input.readStringRequireUtf8();

              psfModel_ = s;
              break;
            }
            case 226: {
              java.lang.String s = input.readStringRequireUtf8();

              psfImageName_ = s;
              break;
            }
            case 232: {

              enterWidth_ = input.readBool();
              break;
            }
            case 241: {

              wavelength_ = input.readDouble();
              break;
            }
            case 249: {

              numericalAperture_ = input.readDouble();
              break;
            }
            case 257: {

              psfSd_ = input.readDouble();
              break;
            }
            case 265: {

              pixelPitch_ = input.readDouble();
              break;
            }
            case 273: {

              density_ = input.readDouble();
              break;
            }
            case 281: {

              diffusionRate_ = input.readDouble();
              break;
            }
            case 288: {

              diffusionType_ = input.readInt32();
              break;
            }
            case 296: {

              compoundMolecules_ = input.readBool();
              break;
            }
            case 306: {
              java.lang.String s = input.readStringRequireUtf8();

              compoundText_ = s;
              break;
            }
            case 312: {

              diffuse2D_ = input.readBool();
              break;
            }
            case 320: {

              rotateInitialOrientation_ = input.readBool();
              break;
            }
            case 328: {

              rotateDuringSimulation_ = input.readBool();
              break;
            }
            case 336: {

              rotate2D_ = input.readBool();
              break;
            }
            case 345: {

              fixedFraction_ = input.readDouble();
              break;
            }
            case 354: {
              java.lang.String s = input.readStringRequireUtf8();

              confinement_ = s;
              break;
            }
            case 362: {
              java.lang.String s = input.readStringRequireUtf8();

              confinementMask_ = s;
              break;
            }
            case 369: {

              confinementMaskSliceDepth_ = input.readDouble();
              break;
            }
            case 377: {

              confinementRadius_ = input.readDouble();
              break;
            }
            case 384: {

              pulseInterval_ = input.readInt32();
              break;
            }
            case 393: {

              pulseRatio_ = input.readDouble();
              break;
            }
            case 401: {

              tOn_ = input.readDouble();
              break;
            }
            case 409: {

              tOffShort_ = input.readDouble();
              break;
            }
            case 417: {

              tOffLong_ = input.readDouble();
              break;
            }
            case 425: {

              nBlinksShort_ = input.readDouble();
              break;
            }
            case 433: {

              nBlinksLong_ = input.readDouble();
              break;
            }
            case 440: {

              nBlinksGeometricDistribution_ = input.readBool();
              break;
            }
            case 449: {

              minPhotons_ = input.readDouble();
              break;
            }
            case 457: {

              minSnrT1_ = input.readDouble();
              break;
            }
            case 465: {

              minSnrTN_ = input.readDouble();
              break;
            }
            case 472: {

              rawImage_ = input.readBool();
              break;
            }
            case 480: {

              saveImage_ = input.readBool();
              break;
            }
            case 488: {

              saveImageResults_ = input.readBool();
              break;
            }
            case 496: {

              saveLocalisations_ = input.readBool();
              break;
            }
            case 504: {

              saveFluorophores_ = input.readBool();
              break;
            }
            case 514: {
              java.lang.String s = input.readStringRequireUtf8();

              imageFilename_ = s;
              break;
            }
            case 522: {
              java.lang.String s = input.readStringRequireUtf8();

              imageResultsFilename_ = s;
              break;
            }
            case 530: {
              java.lang.String s = input.readStringRequireUtf8();

              fluorophoresFilename_ = s;
              break;
            }
            case 536: {

              cellSize_ = input.readInt32();
              break;
            }
            case 545: {

              probabilityBinary_ = input.readDouble();
              break;
            }
            case 553: {

              minBinaryDistance_ = input.readDouble();
              break;
            }
            case 561: {

              maxBinaryDistance_ = input.readDouble();
              break;
            }
            case 568: {

              showHistograms_ = input.readBool();
              break;
            }
            case 576: {

              chooseHistograms_ = input.readBool();
              break;
            }
            case 584: {

              histogramBins_ = input.readInt32();
              break;
            }
            case 592: {

              removeOutliers_ = input.readBool();
              break;
            }
            case 605: {

              densityRadius_ = input.readFloat();
              break;
            }
            case 613: {

              depthOfField_ = input.readFloat();
              break;
            }
            case 617: {

              xPosition_ = input.readDouble();
              break;
            }
            case 625: {

              yPosition_ = input.readDouble();
              break;
            }
            case 633: {

              zPosition_ = input.readDouble();
              break;
            }
            case 640: {
              int rawValue = input.readEnum();

              cameraType_ = rawValue;
              break;
            }
            case 650: {
              java.lang.String s = input.readStringRequireUtf8();

              cameraModelName_ = s;
              break;
            }
            case 656: {

              randomCrop_ = input.readBool();
              break;
            }
            case 664: {

              originX_ = input.readInt32();
              break;
            }
            case 672: {

              originY_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CreateDataSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CreateDataSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.CreateDataSettings.class, gdsc.smlm.data.config.GUIProtos.CreateDataSettings.Builder.class);
    }

    public static final int SIZE_FIELD_NUMBER = 1;
    private int size_;
    /**
     * <code>int32 size = 1;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int DEPTH_FIELD_NUMBER = 2;
    private double depth_;
    /**
     * <code>double depth = 2;</code>
     */
    public double getDepth() {
      return depth_;
    }

    public static final int FIXED_DEPTH_FIELD_NUMBER = 3;
    private boolean fixedDepth_;
    /**
     * <code>bool fixed_Depth = 3;</code>
     */
    public boolean getFixedDepth() {
      return fixedDepth_;
    }

    public static final int SECONDS_FIELD_NUMBER = 4;
    private double seconds_;
    /**
     * <code>double seconds = 4;</code>
     */
    public double getSeconds() {
      return seconds_;
    }

    public static final int EXPOSURE_TIME_FIELD_NUMBER = 5;
    private double exposureTime_;
    /**
     * <code>double exposure_time = 5;</code>
     */
    public double getExposureTime() {
      return exposureTime_;
    }

    public static final int STEPS_PER_SECOND_FIELD_NUMBER = 6;
    private double stepsPerSecond_;
    /**
     * <code>double steps_per_second = 6;</code>
     */
    public double getStepsPerSecond() {
      return stepsPerSecond_;
    }

    public static final int ILLUMINATION_FIELD_NUMBER = 7;
    private volatile java.lang.Object illumination_;
    /**
     * <code>string illumination = 7;</code>
     */
    public java.lang.String getIllumination() {
      java.lang.Object ref = illumination_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        illumination_ = s;
        return s;
      }
    }
    /**
     * <code>string illumination = 7;</code>
     */
    public com.google.protobuf.ByteString
        getIlluminationBytes() {
      java.lang.Object ref = illumination_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        illumination_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BACKGROUND_IMAGE_FIELD_NUMBER = 8;
    private volatile java.lang.Object backgroundImage_;
    /**
     * <code>string background_image = 8;</code>
     */
    public java.lang.String getBackgroundImage() {
      java.lang.Object ref = backgroundImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        backgroundImage_ = s;
        return s;
      }
    }
    /**
     * <code>string background_image = 8;</code>
     */
    public com.google.protobuf.ByteString
        getBackgroundImageBytes() {
      java.lang.Object ref = backgroundImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        backgroundImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISTRIBUTION_FIELD_NUMBER = 9;
    private volatile java.lang.Object distribution_;
    /**
     * <code>string distribution = 9;</code>
     */
    public java.lang.String getDistribution() {
      java.lang.Object ref = distribution_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        distribution_ = s;
        return s;
      }
    }
    /**
     * <code>string distribution = 9;</code>
     */
    public com.google.protobuf.ByteString
        getDistributionBytes() {
      java.lang.Object ref = distribution_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        distribution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISTRIBUTION_MASK_FIELD_NUMBER = 10;
    private volatile java.lang.Object distributionMask_;
    /**
     * <code>string distribution_mask = 10;</code>
     */
    public java.lang.String getDistributionMask() {
      java.lang.Object ref = distributionMask_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        distributionMask_ = s;
        return s;
      }
    }
    /**
     * <code>string distribution_mask = 10;</code>
     */
    public com.google.protobuf.ByteString
        getDistributionMaskBytes() {
      java.lang.Object ref = distributionMask_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        distributionMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISTRIBUTION_MASK_SLICE_DEPTH_FIELD_NUMBER = 11;
    private double distributionMaskSliceDepth_;
    /**
     * <code>double distribution_mask_slice_depth = 11;</code>
     */
    public double getDistributionMaskSliceDepth() {
      return distributionMaskSliceDepth_;
    }

    public static final int POISSON_NOISE_FIELD_NUMBER = 12;
    private boolean poissonNoise_;
    /**
     * <code>bool poisson_noise = 12;</code>
     */
    public boolean getPoissonNoise() {
      return poissonNoise_;
    }

    public static final int BACKGROUND_FIELD_NUMBER = 13;
    private double background_;
    /**
     * <code>double background = 13;</code>
     */
    public double getBackground() {
      return background_;
    }

    public static final int EM_GAIN_FIELD_NUMBER = 14;
    private double emGain_;
    /**
     * <code>double em_gain = 14;</code>
     */
    public double getEmGain() {
      return emGain_;
    }

    public static final int CAMERA_GAIN_FIELD_NUMBER = 15;
    private double cameraGain_;
    /**
     * <code>double camera_gain = 15;</code>
     */
    public double getCameraGain() {
      return cameraGain_;
    }

    public static final int QUANTUM_EFFICIENCY_FIELD_NUMBER = 16;
    private double quantumEfficiency_;
    /**
     * <code>double quantum_efficiency = 16;</code>
     */
    public double getQuantumEfficiency() {
      return quantumEfficiency_;
    }

    public static final int READ_NOISE_FIELD_NUMBER = 17;
    private double readNoise_;
    /**
     * <pre>
     * The read noise (electrons).
     * </pre>
     *
     * <code>double read_noise = 17;</code>
     */
    public double getReadNoise() {
      return readNoise_;
    }

    public static final int BIAS_FIELD_NUMBER = 18;
    private int bias_;
    /**
     * <code>int32 bias = 18;</code>
     */
    public int getBias() {
      return bias_;
    }

    public static final int PARTICLES_FIELD_NUMBER = 19;
    private int particles_;
    /**
     * <code>int32 particles = 19;</code>
     */
    public int getParticles() {
      return particles_;
    }

    public static final int SAMPLE_PER_FRAME_FIELD_NUMBER = 20;
    private boolean samplePerFrame_;
    /**
     * <code>bool sample_per_frame = 20;</code>
     */
    public boolean getSamplePerFrame() {
      return samplePerFrame_;
    }

    public static final int PHOTONS_PER_SECOND_FIELD_NUMBER = 21;
    private double photonsPerSecond_;
    /**
     * <pre>
     * Photons are modelled using an emission rate (photon emission is constant when the fluorophore is on) sampled from
     * a distribution. The rate (average of the distribution) is correlated to the total on time. Observations on real
     * data indicate the correlation is around -0.35, i.e. shorter bursts are brighter.
     * </pre>
     *
     * <code>double photons_per_second = 21;</code>
     */
    public double getPhotonsPerSecond() {
      return photonsPerSecond_;
    }

    public static final int PHOTONS_PER_SECOND_MAXIMUM_FIELD_NUMBER = 22;
    private double photonsPerSecondMaximum_;
    /**
     * <pre>
     * For a simple localisation model the photons are randomly selected between photonsPerSecond and
     * photonsPerSecondMaximum
     * </pre>
     *
     * <code>double photons_per_second_maximum = 22;</code>
     */
    public double getPhotonsPerSecondMaximum() {
      return photonsPerSecondMaximum_;
    }

    public static final int PHOTON_DISTRIBUTION_FIELD_NUMBER = 23;
    private volatile java.lang.Object photonDistribution_;
    /**
     * <pre>
     * Define the distribution for the random photon emission. The default is to use a gamma
     * distribution with the defined shape parameter.
     * </pre>
     *
     * <code>string photon_distribution = 23;</code>
     */
    public java.lang.String getPhotonDistribution() {
      java.lang.Object ref = photonDistribution_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        photonDistribution_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Define the distribution for the random photon emission. The default is to use a gamma
     * distribution with the defined shape parameter.
     * </pre>
     *
     * <code>string photon_distribution = 23;</code>
     */
    public com.google.protobuf.ByteString
        getPhotonDistributionBytes() {
      java.lang.Object ref = photonDistribution_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        photonDistribution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PHOTON_DISTRIBUTION_FILE_FIELD_NUMBER = 24;
    private volatile java.lang.Object photonDistributionFile_;
    /**
     * <code>string photon_distribution_file = 24;</code>
     */
    public java.lang.String getPhotonDistributionFile() {
      java.lang.Object ref = photonDistributionFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        photonDistributionFile_ = s;
        return s;
      }
    }
    /**
     * <code>string photon_distribution_file = 24;</code>
     */
    public com.google.protobuf.ByteString
        getPhotonDistributionFileBytes() {
      java.lang.Object ref = photonDistributionFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        photonDistributionFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PHOTON_SHAPE_FIELD_NUMBER = 25;
    private double photonShape_;
    /**
     * <code>double photon_shape = 25;</code>
     */
    public double getPhotonShape() {
      return photonShape_;
    }

    public static final int CORRELATION_FIELD_NUMBER = 26;
    private double correlation_;
    /**
     * <code>double correlation = 26;</code>
     */
    public double getCorrelation() {
      return correlation_;
    }

    public static final int PSF_MODEL_FIELD_NUMBER = 27;
    private volatile java.lang.Object psfModel_;
    /**
     * <code>string psf_model = 27;</code>
     */
    public java.lang.String getPsfModel() {
      java.lang.Object ref = psfModel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        psfModel_ = s;
        return s;
      }
    }
    /**
     * <code>string psf_model = 27;</code>
     */
    public com.google.protobuf.ByteString
        getPsfModelBytes() {
      java.lang.Object ref = psfModel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        psfModel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PSF_IMAGE_NAME_FIELD_NUMBER = 28;
    private volatile java.lang.Object psfImageName_;
    /**
     * <code>string psf_image_name = 28;</code>
     */
    public java.lang.String getPsfImageName() {
      java.lang.Object ref = psfImageName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        psfImageName_ = s;
        return s;
      }
    }
    /**
     * <code>string psf_image_name = 28;</code>
     */
    public com.google.protobuf.ByteString
        getPsfImageNameBytes() {
      java.lang.Object ref = psfImageName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        psfImageName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENTER_WIDTH_FIELD_NUMBER = 29;
    private boolean enterWidth_;
    /**
     * <code>bool enter_width = 29;</code>
     */
    public boolean getEnterWidth() {
      return enterWidth_;
    }

    public static final int WAVELENGTH_FIELD_NUMBER = 30;
    private double wavelength_;
    /**
     * <code>double wavelength = 30;</code>
     */
    public double getWavelength() {
      return wavelength_;
    }

    public static final int NUMERICAL_APERTURE_FIELD_NUMBER = 31;
    private double numericalAperture_;
    /**
     * <code>double numerical_aperture = 31;</code>
     */
    public double getNumericalAperture() {
      return numericalAperture_;
    }

    public static final int PSF_SD_FIELD_NUMBER = 32;
    private double psfSd_;
    /**
     * <code>double psf_sd = 32;</code>
     */
    public double getPsfSd() {
      return psfSd_;
    }

    public static final int PIXEL_PITCH_FIELD_NUMBER = 33;
    private double pixelPitch_;
    /**
     * <code>double pixel_pitch = 33;</code>
     */
    public double getPixelPitch() {
      return pixelPitch_;
    }

    public static final int DENSITY_FIELD_NUMBER = 34;
    private double density_;
    /**
     * <code>double density = 34;</code>
     */
    public double getDensity() {
      return density_;
    }

    public static final int DIFFUSION_RATE_FIELD_NUMBER = 35;
    private double diffusionRate_;
    /**
     * <code>double diffusion_rate = 35;</code>
     */
    public double getDiffusionRate() {
      return diffusionRate_;
    }

    public static final int DIFFUSION_TYPE_FIELD_NUMBER = 36;
    private int diffusionType_;
    /**
     * <code>int32 diffusion_type = 36;</code>
     */
    public int getDiffusionType() {
      return diffusionType_;
    }

    public static final int COMPOUND_MOLECULES_FIELD_NUMBER = 37;
    private boolean compoundMolecules_;
    /**
     * <code>bool compound_molecules = 37;</code>
     */
    public boolean getCompoundMolecules() {
      return compoundMolecules_;
    }

    public static final int COMPOUND_TEXT_FIELD_NUMBER = 38;
    private volatile java.lang.Object compoundText_;
    /**
     * <code>string compound_text = 38;</code>
     */
    public java.lang.String getCompoundText() {
      java.lang.Object ref = compoundText_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        compoundText_ = s;
        return s;
      }
    }
    /**
     * <code>string compound_text = 38;</code>
     */
    public com.google.protobuf.ByteString
        getCompoundTextBytes() {
      java.lang.Object ref = compoundText_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        compoundText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIFFUSE_2D_FIELD_NUMBER = 39;
    private boolean diffuse2D_;
    /**
     * <code>bool diffuse_2D = 39;</code>
     */
    public boolean getDiffuse2D() {
      return diffuse2D_;
    }

    public static final int ROTATE_INITIAL_ORIENTATION_FIELD_NUMBER = 40;
    private boolean rotateInitialOrientation_;
    /**
     * <code>bool rotate_initial_orientation = 40;</code>
     */
    public boolean getRotateInitialOrientation() {
      return rotateInitialOrientation_;
    }

    public static final int ROTATE_DURING_SIMULATION_FIELD_NUMBER = 41;
    private boolean rotateDuringSimulation_;
    /**
     * <code>bool rotate_during_simulation = 41;</code>
     */
    public boolean getRotateDuringSimulation() {
      return rotateDuringSimulation_;
    }

    public static final int ROTATE_2D_FIELD_NUMBER = 42;
    private boolean rotate2D_;
    /**
     * <code>bool rotate_2D = 42;</code>
     */
    public boolean getRotate2D() {
      return rotate2D_;
    }

    public static final int FIXEDFRACTION_FIELD_NUMBER = 43;
    private double fixedFraction_;
    /**
     * <code>double fixedFraction = 43;</code>
     */
    public double getFixedFraction() {
      return fixedFraction_;
    }

    public static final int CONFINEMENT_FIELD_NUMBER = 44;
    private volatile java.lang.Object confinement_;
    /**
     * <code>string confinement = 44;</code>
     */
    public java.lang.String getConfinement() {
      java.lang.Object ref = confinement_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        confinement_ = s;
        return s;
      }
    }
    /**
     * <code>string confinement = 44;</code>
     */
    public com.google.protobuf.ByteString
        getConfinementBytes() {
      java.lang.Object ref = confinement_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        confinement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFINEMENT_MASK_FIELD_NUMBER = 45;
    private volatile java.lang.Object confinementMask_;
    /**
     * <code>string confinement_mask = 45;</code>
     */
    public java.lang.String getConfinementMask() {
      java.lang.Object ref = confinementMask_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        confinementMask_ = s;
        return s;
      }
    }
    /**
     * <code>string confinement_mask = 45;</code>
     */
    public com.google.protobuf.ByteString
        getConfinementMaskBytes() {
      java.lang.Object ref = confinementMask_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        confinementMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFINEMENT_MASK_SLICE_DEPTH_FIELD_NUMBER = 46;
    private double confinementMaskSliceDepth_;
    /**
     * <code>double confinement_mask_slice_depth = 46;</code>
     */
    public double getConfinementMaskSliceDepth() {
      return confinementMaskSliceDepth_;
    }

    public static final int CONFINEMENT_RADIUS_FIELD_NUMBER = 47;
    private double confinementRadius_;
    /**
     * <code>double confinement_radius = 47;</code>
     */
    public double getConfinementRadius() {
      return confinementRadius_;
    }

    public static final int PULSE_INTERVAL_FIELD_NUMBER = 48;
    private int pulseInterval_;
    /**
     * <code>int32 pulse_interval = 48;</code>
     */
    public int getPulseInterval() {
      return pulseInterval_;
    }

    public static final int PULSE_RATIO_FIELD_NUMBER = 49;
    private double pulseRatio_;
    /**
     * <code>double pulse_ratio = 49;</code>
     */
    public double getPulseRatio() {
      return pulseRatio_;
    }

    public static final int T_ON_FIELD_NUMBER = 50;
    private double tOn_;
    /**
     * <pre>
     * Average t-On in milliseconds
     * </pre>
     *
     * <code>double t_on = 50;</code>
     */
    public double getTOn() {
      return tOn_;
    }

    public static final int T_OFF_SHORT_FIELD_NUMBER = 51;
    private double tOffShort_;
    /**
     * <pre>
     * Average t-Off for the short dark state in milliseconds
     * </pre>
     *
     * <code>double t_off_short = 51;</code>
     */
    public double getTOffShort() {
      return tOffShort_;
    }

    public static final int T_OFF_LONG_FIELD_NUMBER = 52;
    private double tOffLong_;
    /**
     * <pre>
     * Average t-Off for the long dark state in milliseconds
     * </pre>
     *
     * <code>double t_off_long = 52;</code>
     */
    public double getTOffLong() {
      return tOffLong_;
    }

    public static final int N_BLINKS_SHORT_FIELD_NUMBER = 53;
    private double nBlinksShort_;
    /**
     * <pre>
     * Average number of short blinks, i.e. when transitioning from the on state to the short dark state
     * </pre>
     *
     * <code>double n_blinks_short = 53;</code>
     */
    public double getNBlinksShort() {
      return nBlinksShort_;
    }

    public static final int N_BLINKS_LONG_FIELD_NUMBER = 54;
    private double nBlinksLong_;
    /**
     * <pre>
     * Average number of long blinks, i.e. transitions to the long dark state
     * </pre>
     *
     * <code>double n_blinks_long = 54;</code>
     */
    public double getNBlinksLong() {
      return nBlinksLong_;
    }

    public static final int N_BLINKS_GEOMETRIC_DISTRIBUTION_FIELD_NUMBER = 55;
    private boolean nBlinksGeometricDistribution_;
    /**
     * <pre>
     * Set to true to use a geometric distribution for the nBlinks. Default is to use a Poisson.
     * </pre>
     *
     * <code>bool n_blinks_geometric_distribution = 55;</code>
     */
    public boolean getNBlinksGeometricDistribution() {
      return nBlinksGeometricDistribution_;
    }

    public static final int MIN_PHOTONS_FIELD_NUMBER = 56;
    private double minPhotons_;
    /**
     * <code>double min_photons = 56;</code>
     */
    public double getMinPhotons() {
      return minPhotons_;
    }

    public static final int MIN_SNR_T1_FIELD_NUMBER = 57;
    private double minSnrT1_;
    /**
     * <code>double min_snr_t1 = 57;</code>
     */
    public double getMinSnrT1() {
      return minSnrT1_;
    }

    public static final int MIN_SNR_TN_FIELD_NUMBER = 58;
    private double minSnrTN_;
    /**
     * <code>double min_snr_tN = 58;</code>
     */
    public double getMinSnrTN() {
      return minSnrTN_;
    }

    public static final int RAW_IMAGE_FIELD_NUMBER = 59;
    private boolean rawImage_;
    /**
     * <code>bool raw_image = 59;</code>
     */
    public boolean getRawImage() {
      return rawImage_;
    }

    public static final int SAVE_IMAGE_FIELD_NUMBER = 60;
    private boolean saveImage_;
    /**
     * <code>bool save_image = 60;</code>
     */
    public boolean getSaveImage() {
      return saveImage_;
    }

    public static final int SAVE_IMAGE_RESULTS_FIELD_NUMBER = 61;
    private boolean saveImageResults_;
    /**
     * <code>bool save_image_results = 61;</code>
     */
    public boolean getSaveImageResults() {
      return saveImageResults_;
    }

    public static final int SAVE_LOCALISATIONS_FIELD_NUMBER = 62;
    private boolean saveLocalisations_;
    /**
     * <code>bool save_localisations = 62;</code>
     */
    public boolean getSaveLocalisations() {
      return saveLocalisations_;
    }

    public static final int SAVE_FLUOROPHORES_FIELD_NUMBER = 63;
    private boolean saveFluorophores_;
    /**
     * <code>bool save_fluorophores = 63;</code>
     */
    public boolean getSaveFluorophores() {
      return saveFluorophores_;
    }

    public static final int IMAGE_FILENAME_FIELD_NUMBER = 64;
    private volatile java.lang.Object imageFilename_;
    /**
     * <code>string image_filename = 64;</code>
     */
    public java.lang.String getImageFilename() {
      java.lang.Object ref = imageFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        imageFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string image_filename = 64;</code>
     */
    public com.google.protobuf.ByteString
        getImageFilenameBytes() {
      java.lang.Object ref = imageFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imageFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMAGE_RESULTS_FILENAME_FIELD_NUMBER = 65;
    private volatile java.lang.Object imageResultsFilename_;
    /**
     * <code>string image_results_filename = 65;</code>
     */
    public java.lang.String getImageResultsFilename() {
      java.lang.Object ref = imageResultsFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        imageResultsFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string image_results_filename = 65;</code>
     */
    public com.google.protobuf.ByteString
        getImageResultsFilenameBytes() {
      java.lang.Object ref = imageResultsFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imageResultsFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLUOROPHORESFILENAME_FIELD_NUMBER = 66;
    private volatile java.lang.Object fluorophoresFilename_;
    /**
     * <code>string fluorophoresFilename = 66;</code>
     */
    public java.lang.String getFluorophoresFilename() {
      java.lang.Object ref = fluorophoresFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fluorophoresFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string fluorophoresFilename = 66;</code>
     */
    public com.google.protobuf.ByteString
        getFluorophoresFilenameBytes() {
      java.lang.Object ref = fluorophoresFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fluorophoresFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CELL_SIZE_FIELD_NUMBER = 67;
    private int cellSize_;
    /**
     * <code>int32 cell_size = 67;</code>
     */
    public int getCellSize() {
      return cellSize_;
    }

    public static final int PROBABILITY_BINARY_FIELD_NUMBER = 68;
    private double probabilityBinary_;
    /**
     * <code>double probability_binary = 68;</code>
     */
    public double getProbabilityBinary() {
      return probabilityBinary_;
    }

    public static final int MIN_BINARY_DISTANCE_FIELD_NUMBER = 69;
    private double minBinaryDistance_;
    /**
     * <code>double min_binary_distance = 69;</code>
     */
    public double getMinBinaryDistance() {
      return minBinaryDistance_;
    }

    public static final int MAX_BINARY_DISTANCE_FIELD_NUMBER = 70;
    private double maxBinaryDistance_;
    /**
     * <code>double max_binary_distance = 70;</code>
     */
    public double getMaxBinaryDistance() {
      return maxBinaryDistance_;
    }

    public static final int SHOW_HISTOGRAMS_FIELD_NUMBER = 71;
    private boolean showHistograms_;
    /**
     * <code>bool show_histograms = 71;</code>
     */
    public boolean getShowHistograms() {
      return showHistograms_;
    }

    public static final int CHOOSE_HISTOGRAMS_FIELD_NUMBER = 72;
    private boolean chooseHistograms_;
    /**
     * <code>bool choose_histograms = 72;</code>
     */
    public boolean getChooseHistograms() {
      return chooseHistograms_;
    }

    public static final int HISTOGRAM_BINS_FIELD_NUMBER = 73;
    private int histogramBins_;
    /**
     * <code>int32 histogram_bins = 73;</code>
     */
    public int getHistogramBins() {
      return histogramBins_;
    }

    public static final int REMOVE_OUTLIERS_FIELD_NUMBER = 74;
    private boolean removeOutliers_;
    /**
     * <code>bool remove_outliers = 74;</code>
     */
    public boolean getRemoveOutliers() {
      return removeOutliers_;
    }

    public static final int DENSITY_RADIUS_FIELD_NUMBER = 75;
    private float densityRadius_;
    /**
     * <code>float density_radius = 75;</code>
     */
    public float getDensityRadius() {
      return densityRadius_;
    }

    public static final int DEPTH_OF_FIELD_FIELD_NUMBER = 76;
    private float depthOfField_;
    /**
     * <code>float depth_of_field = 76;</code>
     */
    public float getDepthOfField() {
      return depthOfField_;
    }

    public static final int X_POSITION_FIELD_NUMBER = 77;
    private double xPosition_;
    /**
     * <code>double x_position = 77;</code>
     */
    public double getXPosition() {
      return xPosition_;
    }

    public static final int Y_POSITION_FIELD_NUMBER = 78;
    private double yPosition_;
    /**
     * <code>double y_position = 78;</code>
     */
    public double getYPosition() {
      return yPosition_;
    }

    public static final int Z_POSITION_FIELD_NUMBER = 79;
    private double zPosition_;
    /**
     * <code>double z_position = 79;</code>
     */
    public double getZPosition() {
      return zPosition_;
    }

    public static final int CAMERA_TYPE_FIELD_NUMBER = 80;
    private int cameraType_;
    /**
     * <pre>
     * The camera type.
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
     */
    public int getCameraTypeValue() {
      return cameraType_;
    }
    /**
     * <pre>
     * The camera type.
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
     */
    public gdsc.smlm.data.config.CalibrationProtos.CameraType getCameraType() {
      gdsc.smlm.data.config.CalibrationProtos.CameraType result = gdsc.smlm.data.config.CalibrationProtos.CameraType.valueOf(cameraType_);
      return result == null ? gdsc.smlm.data.config.CalibrationProtos.CameraType.UNRECOGNIZED : result;
    }

    public static final int CAMERA_MODEL_NAME_FIELD_NUMBER = 81;
    private volatile java.lang.Object cameraModelName_;
    /**
     * <pre>
     * The camera model name. This should contain all the information required to 
     * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
     * </pre>
     *
     * <code>string camera_model_name = 81;</code>
     */
    public java.lang.String getCameraModelName() {
      java.lang.Object ref = cameraModelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cameraModelName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The camera model name. This should contain all the information required to 
     * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
     * </pre>
     *
     * <code>string camera_model_name = 81;</code>
     */
    public com.google.protobuf.ByteString
        getCameraModelNameBytes() {
      java.lang.Object ref = cameraModelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cameraModelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RANDOM_CROP_FIELD_NUMBER = 82;
    private boolean randomCrop_;
    /**
     * <code>bool random_crop = 82;</code>
     */
    public boolean getRandomCrop() {
      return randomCrop_;
    }

    public static final int ORIGIN_X_FIELD_NUMBER = 83;
    private int originX_;
    /**
     * <pre>
     * The origin x-coordinate used to crop the model
     * </pre>
     *
     * <code>int32 origin_x = 83;</code>
     */
    public int getOriginX() {
      return originX_;
    }

    public static final int ORIGIN_Y_FIELD_NUMBER = 84;
    private int originY_;
    /**
     * <pre>
     * The origin y-coordinate used to crop the model
     * </pre>
     *
     * <code>int32 origin_y = 84;</code>
     */
    public int getOriginY() {
      return originY_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (size_ != 0) {
        output.writeInt32(1, size_);
      }
      if (depth_ != 0D) {
        output.writeDouble(2, depth_);
      }
      if (fixedDepth_ != false) {
        output.writeBool(3, fixedDepth_);
      }
      if (seconds_ != 0D) {
        output.writeDouble(4, seconds_);
      }
      if (exposureTime_ != 0D) {
        output.writeDouble(5, exposureTime_);
      }
      if (stepsPerSecond_ != 0D) {
        output.writeDouble(6, stepsPerSecond_);
      }
      if (!getIlluminationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, illumination_);
      }
      if (!getBackgroundImageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, backgroundImage_);
      }
      if (!getDistributionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, distribution_);
      }
      if (!getDistributionMaskBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, distributionMask_);
      }
      if (distributionMaskSliceDepth_ != 0D) {
        output.writeDouble(11, distributionMaskSliceDepth_);
      }
      if (poissonNoise_ != false) {
        output.writeBool(12, poissonNoise_);
      }
      if (background_ != 0D) {
        output.writeDouble(13, background_);
      }
      if (emGain_ != 0D) {
        output.writeDouble(14, emGain_);
      }
      if (cameraGain_ != 0D) {
        output.writeDouble(15, cameraGain_);
      }
      if (quantumEfficiency_ != 0D) {
        output.writeDouble(16, quantumEfficiency_);
      }
      if (readNoise_ != 0D) {
        output.writeDouble(17, readNoise_);
      }
      if (bias_ != 0) {
        output.writeInt32(18, bias_);
      }
      if (particles_ != 0) {
        output.writeInt32(19, particles_);
      }
      if (samplePerFrame_ != false) {
        output.writeBool(20, samplePerFrame_);
      }
      if (photonsPerSecond_ != 0D) {
        output.writeDouble(21, photonsPerSecond_);
      }
      if (photonsPerSecondMaximum_ != 0D) {
        output.writeDouble(22, photonsPerSecondMaximum_);
      }
      if (!getPhotonDistributionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, photonDistribution_);
      }
      if (!getPhotonDistributionFileBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, photonDistributionFile_);
      }
      if (photonShape_ != 0D) {
        output.writeDouble(25, photonShape_);
      }
      if (correlation_ != 0D) {
        output.writeDouble(26, correlation_);
      }
      if (!getPsfModelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 27, psfModel_);
      }
      if (!getPsfImageNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 28, psfImageName_);
      }
      if (enterWidth_ != false) {
        output.writeBool(29, enterWidth_);
      }
      if (wavelength_ != 0D) {
        output.writeDouble(30, wavelength_);
      }
      if (numericalAperture_ != 0D) {
        output.writeDouble(31, numericalAperture_);
      }
      if (psfSd_ != 0D) {
        output.writeDouble(32, psfSd_);
      }
      if (pixelPitch_ != 0D) {
        output.writeDouble(33, pixelPitch_);
      }
      if (density_ != 0D) {
        output.writeDouble(34, density_);
      }
      if (diffusionRate_ != 0D) {
        output.writeDouble(35, diffusionRate_);
      }
      if (diffusionType_ != 0) {
        output.writeInt32(36, diffusionType_);
      }
      if (compoundMolecules_ != false) {
        output.writeBool(37, compoundMolecules_);
      }
      if (!getCompoundTextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 38, compoundText_);
      }
      if (diffuse2D_ != false) {
        output.writeBool(39, diffuse2D_);
      }
      if (rotateInitialOrientation_ != false) {
        output.writeBool(40, rotateInitialOrientation_);
      }
      if (rotateDuringSimulation_ != false) {
        output.writeBool(41, rotateDuringSimulation_);
      }
      if (rotate2D_ != false) {
        output.writeBool(42, rotate2D_);
      }
      if (fixedFraction_ != 0D) {
        output.writeDouble(43, fixedFraction_);
      }
      if (!getConfinementBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 44, confinement_);
      }
      if (!getConfinementMaskBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 45, confinementMask_);
      }
      if (confinementMaskSliceDepth_ != 0D) {
        output.writeDouble(46, confinementMaskSliceDepth_);
      }
      if (confinementRadius_ != 0D) {
        output.writeDouble(47, confinementRadius_);
      }
      if (pulseInterval_ != 0) {
        output.writeInt32(48, pulseInterval_);
      }
      if (pulseRatio_ != 0D) {
        output.writeDouble(49, pulseRatio_);
      }
      if (tOn_ != 0D) {
        output.writeDouble(50, tOn_);
      }
      if (tOffShort_ != 0D) {
        output.writeDouble(51, tOffShort_);
      }
      if (tOffLong_ != 0D) {
        output.writeDouble(52, tOffLong_);
      }
      if (nBlinksShort_ != 0D) {
        output.writeDouble(53, nBlinksShort_);
      }
      if (nBlinksLong_ != 0D) {
        output.writeDouble(54, nBlinksLong_);
      }
      if (nBlinksGeometricDistribution_ != false) {
        output.writeBool(55, nBlinksGeometricDistribution_);
      }
      if (minPhotons_ != 0D) {
        output.writeDouble(56, minPhotons_);
      }
      if (minSnrT1_ != 0D) {
        output.writeDouble(57, minSnrT1_);
      }
      if (minSnrTN_ != 0D) {
        output.writeDouble(58, minSnrTN_);
      }
      if (rawImage_ != false) {
        output.writeBool(59, rawImage_);
      }
      if (saveImage_ != false) {
        output.writeBool(60, saveImage_);
      }
      if (saveImageResults_ != false) {
        output.writeBool(61, saveImageResults_);
      }
      if (saveLocalisations_ != false) {
        output.writeBool(62, saveLocalisations_);
      }
      if (saveFluorophores_ != false) {
        output.writeBool(63, saveFluorophores_);
      }
      if (!getImageFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 64, imageFilename_);
      }
      if (!getImageResultsFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 65, imageResultsFilename_);
      }
      if (!getFluorophoresFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 66, fluorophoresFilename_);
      }
      if (cellSize_ != 0) {
        output.writeInt32(67, cellSize_);
      }
      if (probabilityBinary_ != 0D) {
        output.writeDouble(68, probabilityBinary_);
      }
      if (minBinaryDistance_ != 0D) {
        output.writeDouble(69, minBinaryDistance_);
      }
      if (maxBinaryDistance_ != 0D) {
        output.writeDouble(70, maxBinaryDistance_);
      }
      if (showHistograms_ != false) {
        output.writeBool(71, showHistograms_);
      }
      if (chooseHistograms_ != false) {
        output.writeBool(72, chooseHistograms_);
      }
      if (histogramBins_ != 0) {
        output.writeInt32(73, histogramBins_);
      }
      if (removeOutliers_ != false) {
        output.writeBool(74, removeOutliers_);
      }
      if (densityRadius_ != 0F) {
        output.writeFloat(75, densityRadius_);
      }
      if (depthOfField_ != 0F) {
        output.writeFloat(76, depthOfField_);
      }
      if (xPosition_ != 0D) {
        output.writeDouble(77, xPosition_);
      }
      if (yPosition_ != 0D) {
        output.writeDouble(78, yPosition_);
      }
      if (zPosition_ != 0D) {
        output.writeDouble(79, zPosition_);
      }
      if (cameraType_ != gdsc.smlm.data.config.CalibrationProtos.CameraType.CAMERA_TYPE_NA.getNumber()) {
        output.writeEnum(80, cameraType_);
      }
      if (!getCameraModelNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 81, cameraModelName_);
      }
      if (randomCrop_ != false) {
        output.writeBool(82, randomCrop_);
      }
      if (originX_ != 0) {
        output.writeInt32(83, originX_);
      }
      if (originY_ != 0) {
        output.writeInt32(84, originY_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (size_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, size_);
      }
      if (depth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, depth_);
      }
      if (fixedDepth_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, fixedDepth_);
      }
      if (seconds_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, seconds_);
      }
      if (exposureTime_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, exposureTime_);
      }
      if (stepsPerSecond_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, stepsPerSecond_);
      }
      if (!getIlluminationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, illumination_);
      }
      if (!getBackgroundImageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, backgroundImage_);
      }
      if (!getDistributionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, distribution_);
      }
      if (!getDistributionMaskBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, distributionMask_);
      }
      if (distributionMaskSliceDepth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, distributionMaskSliceDepth_);
      }
      if (poissonNoise_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, poissonNoise_);
      }
      if (background_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, background_);
      }
      if (emGain_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, emGain_);
      }
      if (cameraGain_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, cameraGain_);
      }
      if (quantumEfficiency_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, quantumEfficiency_);
      }
      if (readNoise_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, readNoise_);
      }
      if (bias_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, bias_);
      }
      if (particles_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, particles_);
      }
      if (samplePerFrame_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, samplePerFrame_);
      }
      if (photonsPerSecond_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, photonsPerSecond_);
      }
      if (photonsPerSecondMaximum_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, photonsPerSecondMaximum_);
      }
      if (!getPhotonDistributionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, photonDistribution_);
      }
      if (!getPhotonDistributionFileBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, photonDistributionFile_);
      }
      if (photonShape_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, photonShape_);
      }
      if (correlation_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, correlation_);
      }
      if (!getPsfModelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(27, psfModel_);
      }
      if (!getPsfImageNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(28, psfImageName_);
      }
      if (enterWidth_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(29, enterWidth_);
      }
      if (wavelength_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(30, wavelength_);
      }
      if (numericalAperture_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(31, numericalAperture_);
      }
      if (psfSd_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(32, psfSd_);
      }
      if (pixelPitch_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(33, pixelPitch_);
      }
      if (density_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(34, density_);
      }
      if (diffusionRate_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(35, diffusionRate_);
      }
      if (diffusionType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, diffusionType_);
      }
      if (compoundMolecules_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, compoundMolecules_);
      }
      if (!getCompoundTextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(38, compoundText_);
      }
      if (diffuse2D_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(39, diffuse2D_);
      }
      if (rotateInitialOrientation_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(40, rotateInitialOrientation_);
      }
      if (rotateDuringSimulation_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(41, rotateDuringSimulation_);
      }
      if (rotate2D_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(42, rotate2D_);
      }
      if (fixedFraction_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(43, fixedFraction_);
      }
      if (!getConfinementBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(44, confinement_);
      }
      if (!getConfinementMaskBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(45, confinementMask_);
      }
      if (confinementMaskSliceDepth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(46, confinementMaskSliceDepth_);
      }
      if (confinementRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(47, confinementRadius_);
      }
      if (pulseInterval_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, pulseInterval_);
      }
      if (pulseRatio_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(49, pulseRatio_);
      }
      if (tOn_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(50, tOn_);
      }
      if (tOffShort_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(51, tOffShort_);
      }
      if (tOffLong_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(52, tOffLong_);
      }
      if (nBlinksShort_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(53, nBlinksShort_);
      }
      if (nBlinksLong_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(54, nBlinksLong_);
      }
      if (nBlinksGeometricDistribution_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(55, nBlinksGeometricDistribution_);
      }
      if (minPhotons_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(56, minPhotons_);
      }
      if (minSnrT1_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(57, minSnrT1_);
      }
      if (minSnrTN_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(58, minSnrTN_);
      }
      if (rawImage_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(59, rawImage_);
      }
      if (saveImage_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(60, saveImage_);
      }
      if (saveImageResults_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(61, saveImageResults_);
      }
      if (saveLocalisations_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(62, saveLocalisations_);
      }
      if (saveFluorophores_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(63, saveFluorophores_);
      }
      if (!getImageFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(64, imageFilename_);
      }
      if (!getImageResultsFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(65, imageResultsFilename_);
      }
      if (!getFluorophoresFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(66, fluorophoresFilename_);
      }
      if (cellSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(67, cellSize_);
      }
      if (probabilityBinary_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(68, probabilityBinary_);
      }
      if (minBinaryDistance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(69, minBinaryDistance_);
      }
      if (maxBinaryDistance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(70, maxBinaryDistance_);
      }
      if (showHistograms_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(71, showHistograms_);
      }
      if (chooseHistograms_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(72, chooseHistograms_);
      }
      if (histogramBins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(73, histogramBins_);
      }
      if (removeOutliers_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(74, removeOutliers_);
      }
      if (densityRadius_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(75, densityRadius_);
      }
      if (depthOfField_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(76, depthOfField_);
      }
      if (xPosition_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(77, xPosition_);
      }
      if (yPosition_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(78, yPosition_);
      }
      if (zPosition_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(79, zPosition_);
      }
      if (cameraType_ != gdsc.smlm.data.config.CalibrationProtos.CameraType.CAMERA_TYPE_NA.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(80, cameraType_);
      }
      if (!getCameraModelNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(81, cameraModelName_);
      }
      if (randomCrop_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(82, randomCrop_);
      }
      if (originX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(83, originX_);
      }
      if (originY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(84, originY_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.CreateDataSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.CreateDataSettings other = (gdsc.smlm.data.config.GUIProtos.CreateDataSettings) obj;

      boolean result = true;
      result = result && (getSize()
          == other.getSize());
      result = result && (
          java.lang.Double.doubleToLongBits(getDepth())
          == java.lang.Double.doubleToLongBits(
              other.getDepth()));
      result = result && (getFixedDepth()
          == other.getFixedDepth());
      result = result && (
          java.lang.Double.doubleToLongBits(getSeconds())
          == java.lang.Double.doubleToLongBits(
              other.getSeconds()));
      result = result && (
          java.lang.Double.doubleToLongBits(getExposureTime())
          == java.lang.Double.doubleToLongBits(
              other.getExposureTime()));
      result = result && (
          java.lang.Double.doubleToLongBits(getStepsPerSecond())
          == java.lang.Double.doubleToLongBits(
              other.getStepsPerSecond()));
      result = result && getIllumination()
          .equals(other.getIllumination());
      result = result && getBackgroundImage()
          .equals(other.getBackgroundImage());
      result = result && getDistribution()
          .equals(other.getDistribution());
      result = result && getDistributionMask()
          .equals(other.getDistributionMask());
      result = result && (
          java.lang.Double.doubleToLongBits(getDistributionMaskSliceDepth())
          == java.lang.Double.doubleToLongBits(
              other.getDistributionMaskSliceDepth()));
      result = result && (getPoissonNoise()
          == other.getPoissonNoise());
      result = result && (
          java.lang.Double.doubleToLongBits(getBackground())
          == java.lang.Double.doubleToLongBits(
              other.getBackground()));
      result = result && (
          java.lang.Double.doubleToLongBits(getEmGain())
          == java.lang.Double.doubleToLongBits(
              other.getEmGain()));
      result = result && (
          java.lang.Double.doubleToLongBits(getCameraGain())
          == java.lang.Double.doubleToLongBits(
              other.getCameraGain()));
      result = result && (
          java.lang.Double.doubleToLongBits(getQuantumEfficiency())
          == java.lang.Double.doubleToLongBits(
              other.getQuantumEfficiency()));
      result = result && (
          java.lang.Double.doubleToLongBits(getReadNoise())
          == java.lang.Double.doubleToLongBits(
              other.getReadNoise()));
      result = result && (getBias()
          == other.getBias());
      result = result && (getParticles()
          == other.getParticles());
      result = result && (getSamplePerFrame()
          == other.getSamplePerFrame());
      result = result && (
          java.lang.Double.doubleToLongBits(getPhotonsPerSecond())
          == java.lang.Double.doubleToLongBits(
              other.getPhotonsPerSecond()));
      result = result && (
          java.lang.Double.doubleToLongBits(getPhotonsPerSecondMaximum())
          == java.lang.Double.doubleToLongBits(
              other.getPhotonsPerSecondMaximum()));
      result = result && getPhotonDistribution()
          .equals(other.getPhotonDistribution());
      result = result && getPhotonDistributionFile()
          .equals(other.getPhotonDistributionFile());
      result = result && (
          java.lang.Double.doubleToLongBits(getPhotonShape())
          == java.lang.Double.doubleToLongBits(
              other.getPhotonShape()));
      result = result && (
          java.lang.Double.doubleToLongBits(getCorrelation())
          == java.lang.Double.doubleToLongBits(
              other.getCorrelation()));
      result = result && getPsfModel()
          .equals(other.getPsfModel());
      result = result && getPsfImageName()
          .equals(other.getPsfImageName());
      result = result && (getEnterWidth()
          == other.getEnterWidth());
      result = result && (
          java.lang.Double.doubleToLongBits(getWavelength())
          == java.lang.Double.doubleToLongBits(
              other.getWavelength()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNumericalAperture())
          == java.lang.Double.doubleToLongBits(
              other.getNumericalAperture()));
      result = result && (
          java.lang.Double.doubleToLongBits(getPsfSd())
          == java.lang.Double.doubleToLongBits(
              other.getPsfSd()));
      result = result && (
          java.lang.Double.doubleToLongBits(getPixelPitch())
          == java.lang.Double.doubleToLongBits(
              other.getPixelPitch()));
      result = result && (
          java.lang.Double.doubleToLongBits(getDensity())
          == java.lang.Double.doubleToLongBits(
              other.getDensity()));
      result = result && (
          java.lang.Double.doubleToLongBits(getDiffusionRate())
          == java.lang.Double.doubleToLongBits(
              other.getDiffusionRate()));
      result = result && (getDiffusionType()
          == other.getDiffusionType());
      result = result && (getCompoundMolecules()
          == other.getCompoundMolecules());
      result = result && getCompoundText()
          .equals(other.getCompoundText());
      result = result && (getDiffuse2D()
          == other.getDiffuse2D());
      result = result && (getRotateInitialOrientation()
          == other.getRotateInitialOrientation());
      result = result && (getRotateDuringSimulation()
          == other.getRotateDuringSimulation());
      result = result && (getRotate2D()
          == other.getRotate2D());
      result = result && (
          java.lang.Double.doubleToLongBits(getFixedFraction())
          == java.lang.Double.doubleToLongBits(
              other.getFixedFraction()));
      result = result && getConfinement()
          .equals(other.getConfinement());
      result = result && getConfinementMask()
          .equals(other.getConfinementMask());
      result = result && (
          java.lang.Double.doubleToLongBits(getConfinementMaskSliceDepth())
          == java.lang.Double.doubleToLongBits(
              other.getConfinementMaskSliceDepth()));
      result = result && (
          java.lang.Double.doubleToLongBits(getConfinementRadius())
          == java.lang.Double.doubleToLongBits(
              other.getConfinementRadius()));
      result = result && (getPulseInterval()
          == other.getPulseInterval());
      result = result && (
          java.lang.Double.doubleToLongBits(getPulseRatio())
          == java.lang.Double.doubleToLongBits(
              other.getPulseRatio()));
      result = result && (
          java.lang.Double.doubleToLongBits(getTOn())
          == java.lang.Double.doubleToLongBits(
              other.getTOn()));
      result = result && (
          java.lang.Double.doubleToLongBits(getTOffShort())
          == java.lang.Double.doubleToLongBits(
              other.getTOffShort()));
      result = result && (
          java.lang.Double.doubleToLongBits(getTOffLong())
          == java.lang.Double.doubleToLongBits(
              other.getTOffLong()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNBlinksShort())
          == java.lang.Double.doubleToLongBits(
              other.getNBlinksShort()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNBlinksLong())
          == java.lang.Double.doubleToLongBits(
              other.getNBlinksLong()));
      result = result && (getNBlinksGeometricDistribution()
          == other.getNBlinksGeometricDistribution());
      result = result && (
          java.lang.Double.doubleToLongBits(getMinPhotons())
          == java.lang.Double.doubleToLongBits(
              other.getMinPhotons()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMinSnrT1())
          == java.lang.Double.doubleToLongBits(
              other.getMinSnrT1()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMinSnrTN())
          == java.lang.Double.doubleToLongBits(
              other.getMinSnrTN()));
      result = result && (getRawImage()
          == other.getRawImage());
      result = result && (getSaveImage()
          == other.getSaveImage());
      result = result && (getSaveImageResults()
          == other.getSaveImageResults());
      result = result && (getSaveLocalisations()
          == other.getSaveLocalisations());
      result = result && (getSaveFluorophores()
          == other.getSaveFluorophores());
      result = result && getImageFilename()
          .equals(other.getImageFilename());
      result = result && getImageResultsFilename()
          .equals(other.getImageResultsFilename());
      result = result && getFluorophoresFilename()
          .equals(other.getFluorophoresFilename());
      result = result && (getCellSize()
          == other.getCellSize());
      result = result && (
          java.lang.Double.doubleToLongBits(getProbabilityBinary())
          == java.lang.Double.doubleToLongBits(
              other.getProbabilityBinary()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMinBinaryDistance())
          == java.lang.Double.doubleToLongBits(
              other.getMinBinaryDistance()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxBinaryDistance())
          == java.lang.Double.doubleToLongBits(
              other.getMaxBinaryDistance()));
      result = result && (getShowHistograms()
          == other.getShowHistograms());
      result = result && (getChooseHistograms()
          == other.getChooseHistograms());
      result = result && (getHistogramBins()
          == other.getHistogramBins());
      result = result && (getRemoveOutliers()
          == other.getRemoveOutliers());
      result = result && (
          java.lang.Float.floatToIntBits(getDensityRadius())
          == java.lang.Float.floatToIntBits(
              other.getDensityRadius()));
      result = result && (
          java.lang.Float.floatToIntBits(getDepthOfField())
          == java.lang.Float.floatToIntBits(
              other.getDepthOfField()));
      result = result && (
          java.lang.Double.doubleToLongBits(getXPosition())
          == java.lang.Double.doubleToLongBits(
              other.getXPosition()));
      result = result && (
          java.lang.Double.doubleToLongBits(getYPosition())
          == java.lang.Double.doubleToLongBits(
              other.getYPosition()));
      result = result && (
          java.lang.Double.doubleToLongBits(getZPosition())
          == java.lang.Double.doubleToLongBits(
              other.getZPosition()));
      result = result && cameraType_ == other.cameraType_;
      result = result && getCameraModelName()
          .equals(other.getCameraModelName());
      result = result && (getRandomCrop()
          == other.getRandomCrop());
      result = result && (getOriginX()
          == other.getOriginX());
      result = result && (getOriginY()
          == other.getOriginY());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getSize();
      hash = (37 * hash) + DEPTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDepth()));
      hash = (37 * hash) + FIXED_DEPTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFixedDepth());
      hash = (37 * hash) + SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSeconds()));
      hash = (37 * hash) + EXPOSURE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getExposureTime()));
      hash = (37 * hash) + STEPS_PER_SECOND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getStepsPerSecond()));
      hash = (37 * hash) + ILLUMINATION_FIELD_NUMBER;
      hash = (53 * hash) + getIllumination().hashCode();
      hash = (37 * hash) + BACKGROUND_IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getBackgroundImage().hashCode();
      hash = (37 * hash) + DISTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getDistribution().hashCode();
      hash = (37 * hash) + DISTRIBUTION_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getDistributionMask().hashCode();
      hash = (37 * hash) + DISTRIBUTION_MASK_SLICE_DEPTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDistributionMaskSliceDepth()));
      hash = (37 * hash) + POISSON_NOISE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPoissonNoise());
      hash = (37 * hash) + BACKGROUND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBackground()));
      hash = (37 * hash) + EM_GAIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getEmGain()));
      hash = (37 * hash) + CAMERA_GAIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCameraGain()));
      hash = (37 * hash) + QUANTUM_EFFICIENCY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getQuantumEfficiency()));
      hash = (37 * hash) + READ_NOISE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getReadNoise()));
      hash = (37 * hash) + BIAS_FIELD_NUMBER;
      hash = (53 * hash) + getBias();
      hash = (37 * hash) + PARTICLES_FIELD_NUMBER;
      hash = (53 * hash) + getParticles();
      hash = (37 * hash) + SAMPLE_PER_FRAME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSamplePerFrame());
      hash = (37 * hash) + PHOTONS_PER_SECOND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPhotonsPerSecond()));
      hash = (37 * hash) + PHOTONS_PER_SECOND_MAXIMUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPhotonsPerSecondMaximum()));
      hash = (37 * hash) + PHOTON_DISTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getPhotonDistribution().hashCode();
      hash = (37 * hash) + PHOTON_DISTRIBUTION_FILE_FIELD_NUMBER;
      hash = (53 * hash) + getPhotonDistributionFile().hashCode();
      hash = (37 * hash) + PHOTON_SHAPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPhotonShape()));
      hash = (37 * hash) + CORRELATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCorrelation()));
      hash = (37 * hash) + PSF_MODEL_FIELD_NUMBER;
      hash = (53 * hash) + getPsfModel().hashCode();
      hash = (37 * hash) + PSF_IMAGE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getPsfImageName().hashCode();
      hash = (37 * hash) + ENTER_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnterWidth());
      hash = (37 * hash) + WAVELENGTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWavelength()));
      hash = (37 * hash) + NUMERICAL_APERTURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNumericalAperture()));
      hash = (37 * hash) + PSF_SD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPsfSd()));
      hash = (37 * hash) + PIXEL_PITCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPixelPitch()));
      hash = (37 * hash) + DENSITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDensity()));
      hash = (37 * hash) + DIFFUSION_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDiffusionRate()));
      hash = (37 * hash) + DIFFUSION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDiffusionType();
      hash = (37 * hash) + COMPOUND_MOLECULES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCompoundMolecules());
      hash = (37 * hash) + COMPOUND_TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getCompoundText().hashCode();
      hash = (37 * hash) + DIFFUSE_2D_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDiffuse2D());
      hash = (37 * hash) + ROTATE_INITIAL_ORIENTATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRotateInitialOrientation());
      hash = (37 * hash) + ROTATE_DURING_SIMULATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRotateDuringSimulation());
      hash = (37 * hash) + ROTATE_2D_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRotate2D());
      hash = (37 * hash) + FIXEDFRACTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFixedFraction()));
      hash = (37 * hash) + CONFINEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getConfinement().hashCode();
      hash = (37 * hash) + CONFINEMENT_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getConfinementMask().hashCode();
      hash = (37 * hash) + CONFINEMENT_MASK_SLICE_DEPTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConfinementMaskSliceDepth()));
      hash = (37 * hash) + CONFINEMENT_RADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConfinementRadius()));
      hash = (37 * hash) + PULSE_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getPulseInterval();
      hash = (37 * hash) + PULSE_RATIO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPulseRatio()));
      hash = (37 * hash) + T_ON_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTOn()));
      hash = (37 * hash) + T_OFF_SHORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTOffShort()));
      hash = (37 * hash) + T_OFF_LONG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTOffLong()));
      hash = (37 * hash) + N_BLINKS_SHORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNBlinksShort()));
      hash = (37 * hash) + N_BLINKS_LONG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNBlinksLong()));
      hash = (37 * hash) + N_BLINKS_GEOMETRIC_DISTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNBlinksGeometricDistribution());
      hash = (37 * hash) + MIN_PHOTONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinPhotons()));
      hash = (37 * hash) + MIN_SNR_T1_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinSnrT1()));
      hash = (37 * hash) + MIN_SNR_TN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinSnrTN()));
      hash = (37 * hash) + RAW_IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRawImage());
      hash = (37 * hash) + SAVE_IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSaveImage());
      hash = (37 * hash) + SAVE_IMAGE_RESULTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSaveImageResults());
      hash = (37 * hash) + SAVE_LOCALISATIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSaveLocalisations());
      hash = (37 * hash) + SAVE_FLUOROPHORES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSaveFluorophores());
      hash = (37 * hash) + IMAGE_FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getImageFilename().hashCode();
      hash = (37 * hash) + IMAGE_RESULTS_FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getImageResultsFilename().hashCode();
      hash = (37 * hash) + FLUOROPHORESFILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFluorophoresFilename().hashCode();
      hash = (37 * hash) + CELL_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getCellSize();
      hash = (37 * hash) + PROBABILITY_BINARY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getProbabilityBinary()));
      hash = (37 * hash) + MIN_BINARY_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinBinaryDistance()));
      hash = (37 * hash) + MAX_BINARY_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxBinaryDistance()));
      hash = (37 * hash) + SHOW_HISTOGRAMS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShowHistograms());
      hash = (37 * hash) + CHOOSE_HISTOGRAMS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getChooseHistograms());
      hash = (37 * hash) + HISTOGRAM_BINS_FIELD_NUMBER;
      hash = (53 * hash) + getHistogramBins();
      hash = (37 * hash) + REMOVE_OUTLIERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRemoveOutliers());
      hash = (37 * hash) + DENSITY_RADIUS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDensityRadius());
      hash = (37 * hash) + DEPTH_OF_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDepthOfField());
      hash = (37 * hash) + X_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getXPosition()));
      hash = (37 * hash) + Y_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getYPosition()));
      hash = (37 * hash) + Z_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getZPosition()));
      hash = (37 * hash) + CAMERA_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + cameraType_;
      hash = (37 * hash) + CAMERA_MODEL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getCameraModelName().hashCode();
      hash = (37 * hash) + RANDOM_CROP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRandomCrop());
      hash = (37 * hash) + ORIGIN_X_FIELD_NUMBER;
      hash = (53 * hash) + getOriginX();
      hash = (37 * hash) + ORIGIN_Y_FIELD_NUMBER;
      hash = (53 * hash) + getOriginY();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.CreateDataSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the Create Data plugin
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.CreateDataSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.CreateDataSettings)
        gdsc.smlm.data.config.GUIProtos.CreateDataSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CreateDataSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CreateDataSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.CreateDataSettings.class, gdsc.smlm.data.config.GUIProtos.CreateDataSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.CreateDataSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        size_ = 0;

        depth_ = 0D;

        fixedDepth_ = false;

        seconds_ = 0D;

        exposureTime_ = 0D;

        stepsPerSecond_ = 0D;

        illumination_ = "";

        backgroundImage_ = "";

        distribution_ = "";

        distributionMask_ = "";

        distributionMaskSliceDepth_ = 0D;

        poissonNoise_ = false;

        background_ = 0D;

        emGain_ = 0D;

        cameraGain_ = 0D;

        quantumEfficiency_ = 0D;

        readNoise_ = 0D;

        bias_ = 0;

        particles_ = 0;

        samplePerFrame_ = false;

        photonsPerSecond_ = 0D;

        photonsPerSecondMaximum_ = 0D;

        photonDistribution_ = "";

        photonDistributionFile_ = "";

        photonShape_ = 0D;

        correlation_ = 0D;

        psfModel_ = "";

        psfImageName_ = "";

        enterWidth_ = false;

        wavelength_ = 0D;

        numericalAperture_ = 0D;

        psfSd_ = 0D;

        pixelPitch_ = 0D;

        density_ = 0D;

        diffusionRate_ = 0D;

        diffusionType_ = 0;

        compoundMolecules_ = false;

        compoundText_ = "";

        diffuse2D_ = false;

        rotateInitialOrientation_ = false;

        rotateDuringSimulation_ = false;

        rotate2D_ = false;

        fixedFraction_ = 0D;

        confinement_ = "";

        confinementMask_ = "";

        confinementMaskSliceDepth_ = 0D;

        confinementRadius_ = 0D;

        pulseInterval_ = 0;

        pulseRatio_ = 0D;

        tOn_ = 0D;

        tOffShort_ = 0D;

        tOffLong_ = 0D;

        nBlinksShort_ = 0D;

        nBlinksLong_ = 0D;

        nBlinksGeometricDistribution_ = false;

        minPhotons_ = 0D;

        minSnrT1_ = 0D;

        minSnrTN_ = 0D;

        rawImage_ = false;

        saveImage_ = false;

        saveImageResults_ = false;

        saveLocalisations_ = false;

        saveFluorophores_ = false;

        imageFilename_ = "";

        imageResultsFilename_ = "";

        fluorophoresFilename_ = "";

        cellSize_ = 0;

        probabilityBinary_ = 0D;

        minBinaryDistance_ = 0D;

        maxBinaryDistance_ = 0D;

        showHistograms_ = false;

        chooseHistograms_ = false;

        histogramBins_ = 0;

        removeOutliers_ = false;

        densityRadius_ = 0F;

        depthOfField_ = 0F;

        xPosition_ = 0D;

        yPosition_ = 0D;

        zPosition_ = 0D;

        cameraType_ = 0;

        cameraModelName_ = "";

        randomCrop_ = false;

        originX_ = 0;

        originY_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CreateDataSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.CreateDataSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.CreateDataSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.CreateDataSettings build() {
        gdsc.smlm.data.config.GUIProtos.CreateDataSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.CreateDataSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.CreateDataSettings result = new gdsc.smlm.data.config.GUIProtos.CreateDataSettings(this);
        result.size_ = size_;
        result.depth_ = depth_;
        result.fixedDepth_ = fixedDepth_;
        result.seconds_ = seconds_;
        result.exposureTime_ = exposureTime_;
        result.stepsPerSecond_ = stepsPerSecond_;
        result.illumination_ = illumination_;
        result.backgroundImage_ = backgroundImage_;
        result.distribution_ = distribution_;
        result.distributionMask_ = distributionMask_;
        result.distributionMaskSliceDepth_ = distributionMaskSliceDepth_;
        result.poissonNoise_ = poissonNoise_;
        result.background_ = background_;
        result.emGain_ = emGain_;
        result.cameraGain_ = cameraGain_;
        result.quantumEfficiency_ = quantumEfficiency_;
        result.readNoise_ = readNoise_;
        result.bias_ = bias_;
        result.particles_ = particles_;
        result.samplePerFrame_ = samplePerFrame_;
        result.photonsPerSecond_ = photonsPerSecond_;
        result.photonsPerSecondMaximum_ = photonsPerSecondMaximum_;
        result.photonDistribution_ = photonDistribution_;
        result.photonDistributionFile_ = photonDistributionFile_;
        result.photonShape_ = photonShape_;
        result.correlation_ = correlation_;
        result.psfModel_ = psfModel_;
        result.psfImageName_ = psfImageName_;
        result.enterWidth_ = enterWidth_;
        result.wavelength_ = wavelength_;
        result.numericalAperture_ = numericalAperture_;
        result.psfSd_ = psfSd_;
        result.pixelPitch_ = pixelPitch_;
        result.density_ = density_;
        result.diffusionRate_ = diffusionRate_;
        result.diffusionType_ = diffusionType_;
        result.compoundMolecules_ = compoundMolecules_;
        result.compoundText_ = compoundText_;
        result.diffuse2D_ = diffuse2D_;
        result.rotateInitialOrientation_ = rotateInitialOrientation_;
        result.rotateDuringSimulation_ = rotateDuringSimulation_;
        result.rotate2D_ = rotate2D_;
        result.fixedFraction_ = fixedFraction_;
        result.confinement_ = confinement_;
        result.confinementMask_ = confinementMask_;
        result.confinementMaskSliceDepth_ = confinementMaskSliceDepth_;
        result.confinementRadius_ = confinementRadius_;
        result.pulseInterval_ = pulseInterval_;
        result.pulseRatio_ = pulseRatio_;
        result.tOn_ = tOn_;
        result.tOffShort_ = tOffShort_;
        result.tOffLong_ = tOffLong_;
        result.nBlinksShort_ = nBlinksShort_;
        result.nBlinksLong_ = nBlinksLong_;
        result.nBlinksGeometricDistribution_ = nBlinksGeometricDistribution_;
        result.minPhotons_ = minPhotons_;
        result.minSnrT1_ = minSnrT1_;
        result.minSnrTN_ = minSnrTN_;
        result.rawImage_ = rawImage_;
        result.saveImage_ = saveImage_;
        result.saveImageResults_ = saveImageResults_;
        result.saveLocalisations_ = saveLocalisations_;
        result.saveFluorophores_ = saveFluorophores_;
        result.imageFilename_ = imageFilename_;
        result.imageResultsFilename_ = imageResultsFilename_;
        result.fluorophoresFilename_ = fluorophoresFilename_;
        result.cellSize_ = cellSize_;
        result.probabilityBinary_ = probabilityBinary_;
        result.minBinaryDistance_ = minBinaryDistance_;
        result.maxBinaryDistance_ = maxBinaryDistance_;
        result.showHistograms_ = showHistograms_;
        result.chooseHistograms_ = chooseHistograms_;
        result.histogramBins_ = histogramBins_;
        result.removeOutliers_ = removeOutliers_;
        result.densityRadius_ = densityRadius_;
        result.depthOfField_ = depthOfField_;
        result.xPosition_ = xPosition_;
        result.yPosition_ = yPosition_;
        result.zPosition_ = zPosition_;
        result.cameraType_ = cameraType_;
        result.cameraModelName_ = cameraModelName_;
        result.randomCrop_ = randomCrop_;
        result.originX_ = originX_;
        result.originY_ = originY_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.CreateDataSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.CreateDataSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.CreateDataSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.CreateDataSettings.getDefaultInstance()) return this;
        if (other.getSize() != 0) {
          setSize(other.getSize());
        }
        if (other.getDepth() != 0D) {
          setDepth(other.getDepth());
        }
        if (other.getFixedDepth() != false) {
          setFixedDepth(other.getFixedDepth());
        }
        if (other.getSeconds() != 0D) {
          setSeconds(other.getSeconds());
        }
        if (other.getExposureTime() != 0D) {
          setExposureTime(other.getExposureTime());
        }
        if (other.getStepsPerSecond() != 0D) {
          setStepsPerSecond(other.getStepsPerSecond());
        }
        if (!other.getIllumination().isEmpty()) {
          illumination_ = other.illumination_;
          onChanged();
        }
        if (!other.getBackgroundImage().isEmpty()) {
          backgroundImage_ = other.backgroundImage_;
          onChanged();
        }
        if (!other.getDistribution().isEmpty()) {
          distribution_ = other.distribution_;
          onChanged();
        }
        if (!other.getDistributionMask().isEmpty()) {
          distributionMask_ = other.distributionMask_;
          onChanged();
        }
        if (other.getDistributionMaskSliceDepth() != 0D) {
          setDistributionMaskSliceDepth(other.getDistributionMaskSliceDepth());
        }
        if (other.getPoissonNoise() != false) {
          setPoissonNoise(other.getPoissonNoise());
        }
        if (other.getBackground() != 0D) {
          setBackground(other.getBackground());
        }
        if (other.getEmGain() != 0D) {
          setEmGain(other.getEmGain());
        }
        if (other.getCameraGain() != 0D) {
          setCameraGain(other.getCameraGain());
        }
        if (other.getQuantumEfficiency() != 0D) {
          setQuantumEfficiency(other.getQuantumEfficiency());
        }
        if (other.getReadNoise() != 0D) {
          setReadNoise(other.getReadNoise());
        }
        if (other.getBias() != 0) {
          setBias(other.getBias());
        }
        if (other.getParticles() != 0) {
          setParticles(other.getParticles());
        }
        if (other.getSamplePerFrame() != false) {
          setSamplePerFrame(other.getSamplePerFrame());
        }
        if (other.getPhotonsPerSecond() != 0D) {
          setPhotonsPerSecond(other.getPhotonsPerSecond());
        }
        if (other.getPhotonsPerSecondMaximum() != 0D) {
          setPhotonsPerSecondMaximum(other.getPhotonsPerSecondMaximum());
        }
        if (!other.getPhotonDistribution().isEmpty()) {
          photonDistribution_ = other.photonDistribution_;
          onChanged();
        }
        if (!other.getPhotonDistributionFile().isEmpty()) {
          photonDistributionFile_ = other.photonDistributionFile_;
          onChanged();
        }
        if (other.getPhotonShape() != 0D) {
          setPhotonShape(other.getPhotonShape());
        }
        if (other.getCorrelation() != 0D) {
          setCorrelation(other.getCorrelation());
        }
        if (!other.getPsfModel().isEmpty()) {
          psfModel_ = other.psfModel_;
          onChanged();
        }
        if (!other.getPsfImageName().isEmpty()) {
          psfImageName_ = other.psfImageName_;
          onChanged();
        }
        if (other.getEnterWidth() != false) {
          setEnterWidth(other.getEnterWidth());
        }
        if (other.getWavelength() != 0D) {
          setWavelength(other.getWavelength());
        }
        if (other.getNumericalAperture() != 0D) {
          setNumericalAperture(other.getNumericalAperture());
        }
        if (other.getPsfSd() != 0D) {
          setPsfSd(other.getPsfSd());
        }
        if (other.getPixelPitch() != 0D) {
          setPixelPitch(other.getPixelPitch());
        }
        if (other.getDensity() != 0D) {
          setDensity(other.getDensity());
        }
        if (other.getDiffusionRate() != 0D) {
          setDiffusionRate(other.getDiffusionRate());
        }
        if (other.getDiffusionType() != 0) {
          setDiffusionType(other.getDiffusionType());
        }
        if (other.getCompoundMolecules() != false) {
          setCompoundMolecules(other.getCompoundMolecules());
        }
        if (!other.getCompoundText().isEmpty()) {
          compoundText_ = other.compoundText_;
          onChanged();
        }
        if (other.getDiffuse2D() != false) {
          setDiffuse2D(other.getDiffuse2D());
        }
        if (other.getRotateInitialOrientation() != false) {
          setRotateInitialOrientation(other.getRotateInitialOrientation());
        }
        if (other.getRotateDuringSimulation() != false) {
          setRotateDuringSimulation(other.getRotateDuringSimulation());
        }
        if (other.getRotate2D() != false) {
          setRotate2D(other.getRotate2D());
        }
        if (other.getFixedFraction() != 0D) {
          setFixedFraction(other.getFixedFraction());
        }
        if (!other.getConfinement().isEmpty()) {
          confinement_ = other.confinement_;
          onChanged();
        }
        if (!other.getConfinementMask().isEmpty()) {
          confinementMask_ = other.confinementMask_;
          onChanged();
        }
        if (other.getConfinementMaskSliceDepth() != 0D) {
          setConfinementMaskSliceDepth(other.getConfinementMaskSliceDepth());
        }
        if (other.getConfinementRadius() != 0D) {
          setConfinementRadius(other.getConfinementRadius());
        }
        if (other.getPulseInterval() != 0) {
          setPulseInterval(other.getPulseInterval());
        }
        if (other.getPulseRatio() != 0D) {
          setPulseRatio(other.getPulseRatio());
        }
        if (other.getTOn() != 0D) {
          setTOn(other.getTOn());
        }
        if (other.getTOffShort() != 0D) {
          setTOffShort(other.getTOffShort());
        }
        if (other.getTOffLong() != 0D) {
          setTOffLong(other.getTOffLong());
        }
        if (other.getNBlinksShort() != 0D) {
          setNBlinksShort(other.getNBlinksShort());
        }
        if (other.getNBlinksLong() != 0D) {
          setNBlinksLong(other.getNBlinksLong());
        }
        if (other.getNBlinksGeometricDistribution() != false) {
          setNBlinksGeometricDistribution(other.getNBlinksGeometricDistribution());
        }
        if (other.getMinPhotons() != 0D) {
          setMinPhotons(other.getMinPhotons());
        }
        if (other.getMinSnrT1() != 0D) {
          setMinSnrT1(other.getMinSnrT1());
        }
        if (other.getMinSnrTN() != 0D) {
          setMinSnrTN(other.getMinSnrTN());
        }
        if (other.getRawImage() != false) {
          setRawImage(other.getRawImage());
        }
        if (other.getSaveImage() != false) {
          setSaveImage(other.getSaveImage());
        }
        if (other.getSaveImageResults() != false) {
          setSaveImageResults(other.getSaveImageResults());
        }
        if (other.getSaveLocalisations() != false) {
          setSaveLocalisations(other.getSaveLocalisations());
        }
        if (other.getSaveFluorophores() != false) {
          setSaveFluorophores(other.getSaveFluorophores());
        }
        if (!other.getImageFilename().isEmpty()) {
          imageFilename_ = other.imageFilename_;
          onChanged();
        }
        if (!other.getImageResultsFilename().isEmpty()) {
          imageResultsFilename_ = other.imageResultsFilename_;
          onChanged();
        }
        if (!other.getFluorophoresFilename().isEmpty()) {
          fluorophoresFilename_ = other.fluorophoresFilename_;
          onChanged();
        }
        if (other.getCellSize() != 0) {
          setCellSize(other.getCellSize());
        }
        if (other.getProbabilityBinary() != 0D) {
          setProbabilityBinary(other.getProbabilityBinary());
        }
        if (other.getMinBinaryDistance() != 0D) {
          setMinBinaryDistance(other.getMinBinaryDistance());
        }
        if (other.getMaxBinaryDistance() != 0D) {
          setMaxBinaryDistance(other.getMaxBinaryDistance());
        }
        if (other.getShowHistograms() != false) {
          setShowHistograms(other.getShowHistograms());
        }
        if (other.getChooseHistograms() != false) {
          setChooseHistograms(other.getChooseHistograms());
        }
        if (other.getHistogramBins() != 0) {
          setHistogramBins(other.getHistogramBins());
        }
        if (other.getRemoveOutliers() != false) {
          setRemoveOutliers(other.getRemoveOutliers());
        }
        if (other.getDensityRadius() != 0F) {
          setDensityRadius(other.getDensityRadius());
        }
        if (other.getDepthOfField() != 0F) {
          setDepthOfField(other.getDepthOfField());
        }
        if (other.getXPosition() != 0D) {
          setXPosition(other.getXPosition());
        }
        if (other.getYPosition() != 0D) {
          setYPosition(other.getYPosition());
        }
        if (other.getZPosition() != 0D) {
          setZPosition(other.getZPosition());
        }
        if (other.cameraType_ != 0) {
          setCameraTypeValue(other.getCameraTypeValue());
        }
        if (!other.getCameraModelName().isEmpty()) {
          cameraModelName_ = other.cameraModelName_;
          onChanged();
        }
        if (other.getRandomCrop() != false) {
          setRandomCrop(other.getRandomCrop());
        }
        if (other.getOriginX() != 0) {
          setOriginX(other.getOriginX());
        }
        if (other.getOriginY() != 0) {
          setOriginY(other.getOriginY());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.CreateDataSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.CreateDataSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int size_ ;
      /**
       * <code>int32 size = 1;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>int32 size = 1;</code>
       */
      public Builder setSize(int value) {
        
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 size = 1;</code>
       */
      public Builder clearSize() {
        
        size_ = 0;
        onChanged();
        return this;
      }

      private double depth_ ;
      /**
       * <code>double depth = 2;</code>
       */
      public double getDepth() {
        return depth_;
      }
      /**
       * <code>double depth = 2;</code>
       */
      public Builder setDepth(double value) {
        
        depth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double depth = 2;</code>
       */
      public Builder clearDepth() {
        
        depth_ = 0D;
        onChanged();
        return this;
      }

      private boolean fixedDepth_ ;
      /**
       * <code>bool fixed_Depth = 3;</code>
       */
      public boolean getFixedDepth() {
        return fixedDepth_;
      }
      /**
       * <code>bool fixed_Depth = 3;</code>
       */
      public Builder setFixedDepth(boolean value) {
        
        fixedDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool fixed_Depth = 3;</code>
       */
      public Builder clearFixedDepth() {
        
        fixedDepth_ = false;
        onChanged();
        return this;
      }

      private double seconds_ ;
      /**
       * <code>double seconds = 4;</code>
       */
      public double getSeconds() {
        return seconds_;
      }
      /**
       * <code>double seconds = 4;</code>
       */
      public Builder setSeconds(double value) {
        
        seconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double seconds = 4;</code>
       */
      public Builder clearSeconds() {
        
        seconds_ = 0D;
        onChanged();
        return this;
      }

      private double exposureTime_ ;
      /**
       * <code>double exposure_time = 5;</code>
       */
      public double getExposureTime() {
        return exposureTime_;
      }
      /**
       * <code>double exposure_time = 5;</code>
       */
      public Builder setExposureTime(double value) {
        
        exposureTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double exposure_time = 5;</code>
       */
      public Builder clearExposureTime() {
        
        exposureTime_ = 0D;
        onChanged();
        return this;
      }

      private double stepsPerSecond_ ;
      /**
       * <code>double steps_per_second = 6;</code>
       */
      public double getStepsPerSecond() {
        return stepsPerSecond_;
      }
      /**
       * <code>double steps_per_second = 6;</code>
       */
      public Builder setStepsPerSecond(double value) {
        
        stepsPerSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double steps_per_second = 6;</code>
       */
      public Builder clearStepsPerSecond() {
        
        stepsPerSecond_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object illumination_ = "";
      /**
       * <code>string illumination = 7;</code>
       */
      public java.lang.String getIllumination() {
        java.lang.Object ref = illumination_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          illumination_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string illumination = 7;</code>
       */
      public com.google.protobuf.ByteString
          getIlluminationBytes() {
        java.lang.Object ref = illumination_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          illumination_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string illumination = 7;</code>
       */
      public Builder setIllumination(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        illumination_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string illumination = 7;</code>
       */
      public Builder clearIllumination() {
        
        illumination_ = getDefaultInstance().getIllumination();
        onChanged();
        return this;
      }
      /**
       * <code>string illumination = 7;</code>
       */
      public Builder setIlluminationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        illumination_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object backgroundImage_ = "";
      /**
       * <code>string background_image = 8;</code>
       */
      public java.lang.String getBackgroundImage() {
        java.lang.Object ref = backgroundImage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          backgroundImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string background_image = 8;</code>
       */
      public com.google.protobuf.ByteString
          getBackgroundImageBytes() {
        java.lang.Object ref = backgroundImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          backgroundImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string background_image = 8;</code>
       */
      public Builder setBackgroundImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        backgroundImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string background_image = 8;</code>
       */
      public Builder clearBackgroundImage() {
        
        backgroundImage_ = getDefaultInstance().getBackgroundImage();
        onChanged();
        return this;
      }
      /**
       * <code>string background_image = 8;</code>
       */
      public Builder setBackgroundImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        backgroundImage_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object distribution_ = "";
      /**
       * <code>string distribution = 9;</code>
       */
      public java.lang.String getDistribution() {
        java.lang.Object ref = distribution_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          distribution_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string distribution = 9;</code>
       */
      public com.google.protobuf.ByteString
          getDistributionBytes() {
        java.lang.Object ref = distribution_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          distribution_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string distribution = 9;</code>
       */
      public Builder setDistribution(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        distribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string distribution = 9;</code>
       */
      public Builder clearDistribution() {
        
        distribution_ = getDefaultInstance().getDistribution();
        onChanged();
        return this;
      }
      /**
       * <code>string distribution = 9;</code>
       */
      public Builder setDistributionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        distribution_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object distributionMask_ = "";
      /**
       * <code>string distribution_mask = 10;</code>
       */
      public java.lang.String getDistributionMask() {
        java.lang.Object ref = distributionMask_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          distributionMask_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string distribution_mask = 10;</code>
       */
      public com.google.protobuf.ByteString
          getDistributionMaskBytes() {
        java.lang.Object ref = distributionMask_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          distributionMask_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string distribution_mask = 10;</code>
       */
      public Builder setDistributionMask(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        distributionMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string distribution_mask = 10;</code>
       */
      public Builder clearDistributionMask() {
        
        distributionMask_ = getDefaultInstance().getDistributionMask();
        onChanged();
        return this;
      }
      /**
       * <code>string distribution_mask = 10;</code>
       */
      public Builder setDistributionMaskBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        distributionMask_ = value;
        onChanged();
        return this;
      }

      private double distributionMaskSliceDepth_ ;
      /**
       * <code>double distribution_mask_slice_depth = 11;</code>
       */
      public double getDistributionMaskSliceDepth() {
        return distributionMaskSliceDepth_;
      }
      /**
       * <code>double distribution_mask_slice_depth = 11;</code>
       */
      public Builder setDistributionMaskSliceDepth(double value) {
        
        distributionMaskSliceDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double distribution_mask_slice_depth = 11;</code>
       */
      public Builder clearDistributionMaskSliceDepth() {
        
        distributionMaskSliceDepth_ = 0D;
        onChanged();
        return this;
      }

      private boolean poissonNoise_ ;
      /**
       * <code>bool poisson_noise = 12;</code>
       */
      public boolean getPoissonNoise() {
        return poissonNoise_;
      }
      /**
       * <code>bool poisson_noise = 12;</code>
       */
      public Builder setPoissonNoise(boolean value) {
        
        poissonNoise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool poisson_noise = 12;</code>
       */
      public Builder clearPoissonNoise() {
        
        poissonNoise_ = false;
        onChanged();
        return this;
      }

      private double background_ ;
      /**
       * <code>double background = 13;</code>
       */
      public double getBackground() {
        return background_;
      }
      /**
       * <code>double background = 13;</code>
       */
      public Builder setBackground(double value) {
        
        background_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double background = 13;</code>
       */
      public Builder clearBackground() {
        
        background_ = 0D;
        onChanged();
        return this;
      }

      private double emGain_ ;
      /**
       * <code>double em_gain = 14;</code>
       */
      public double getEmGain() {
        return emGain_;
      }
      /**
       * <code>double em_gain = 14;</code>
       */
      public Builder setEmGain(double value) {
        
        emGain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double em_gain = 14;</code>
       */
      public Builder clearEmGain() {
        
        emGain_ = 0D;
        onChanged();
        return this;
      }

      private double cameraGain_ ;
      /**
       * <code>double camera_gain = 15;</code>
       */
      public double getCameraGain() {
        return cameraGain_;
      }
      /**
       * <code>double camera_gain = 15;</code>
       */
      public Builder setCameraGain(double value) {
        
        cameraGain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double camera_gain = 15;</code>
       */
      public Builder clearCameraGain() {
        
        cameraGain_ = 0D;
        onChanged();
        return this;
      }

      private double quantumEfficiency_ ;
      /**
       * <code>double quantum_efficiency = 16;</code>
       */
      public double getQuantumEfficiency() {
        return quantumEfficiency_;
      }
      /**
       * <code>double quantum_efficiency = 16;</code>
       */
      public Builder setQuantumEfficiency(double value) {
        
        quantumEfficiency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double quantum_efficiency = 16;</code>
       */
      public Builder clearQuantumEfficiency() {
        
        quantumEfficiency_ = 0D;
        onChanged();
        return this;
      }

      private double readNoise_ ;
      /**
       * <pre>
       * The read noise (electrons).
       * </pre>
       *
       * <code>double read_noise = 17;</code>
       */
      public double getReadNoise() {
        return readNoise_;
      }
      /**
       * <pre>
       * The read noise (electrons).
       * </pre>
       *
       * <code>double read_noise = 17;</code>
       */
      public Builder setReadNoise(double value) {
        
        readNoise_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The read noise (electrons).
       * </pre>
       *
       * <code>double read_noise = 17;</code>
       */
      public Builder clearReadNoise() {
        
        readNoise_ = 0D;
        onChanged();
        return this;
      }

      private int bias_ ;
      /**
       * <code>int32 bias = 18;</code>
       */
      public int getBias() {
        return bias_;
      }
      /**
       * <code>int32 bias = 18;</code>
       */
      public Builder setBias(int value) {
        
        bias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bias = 18;</code>
       */
      public Builder clearBias() {
        
        bias_ = 0;
        onChanged();
        return this;
      }

      private int particles_ ;
      /**
       * <code>int32 particles = 19;</code>
       */
      public int getParticles() {
        return particles_;
      }
      /**
       * <code>int32 particles = 19;</code>
       */
      public Builder setParticles(int value) {
        
        particles_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 particles = 19;</code>
       */
      public Builder clearParticles() {
        
        particles_ = 0;
        onChanged();
        return this;
      }

      private boolean samplePerFrame_ ;
      /**
       * <code>bool sample_per_frame = 20;</code>
       */
      public boolean getSamplePerFrame() {
        return samplePerFrame_;
      }
      /**
       * <code>bool sample_per_frame = 20;</code>
       */
      public Builder setSamplePerFrame(boolean value) {
        
        samplePerFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool sample_per_frame = 20;</code>
       */
      public Builder clearSamplePerFrame() {
        
        samplePerFrame_ = false;
        onChanged();
        return this;
      }

      private double photonsPerSecond_ ;
      /**
       * <pre>
       * Photons are modelled using an emission rate (photon emission is constant when the fluorophore is on) sampled from
       * a distribution. The rate (average of the distribution) is correlated to the total on time. Observations on real
       * data indicate the correlation is around -0.35, i.e. shorter bursts are brighter.
       * </pre>
       *
       * <code>double photons_per_second = 21;</code>
       */
      public double getPhotonsPerSecond() {
        return photonsPerSecond_;
      }
      /**
       * <pre>
       * Photons are modelled using an emission rate (photon emission is constant when the fluorophore is on) sampled from
       * a distribution. The rate (average of the distribution) is correlated to the total on time. Observations on real
       * data indicate the correlation is around -0.35, i.e. shorter bursts are brighter.
       * </pre>
       *
       * <code>double photons_per_second = 21;</code>
       */
      public Builder setPhotonsPerSecond(double value) {
        
        photonsPerSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Photons are modelled using an emission rate (photon emission is constant when the fluorophore is on) sampled from
       * a distribution. The rate (average of the distribution) is correlated to the total on time. Observations on real
       * data indicate the correlation is around -0.35, i.e. shorter bursts are brighter.
       * </pre>
       *
       * <code>double photons_per_second = 21;</code>
       */
      public Builder clearPhotonsPerSecond() {
        
        photonsPerSecond_ = 0D;
        onChanged();
        return this;
      }

      private double photonsPerSecondMaximum_ ;
      /**
       * <pre>
       * For a simple localisation model the photons are randomly selected between photonsPerSecond and
       * photonsPerSecondMaximum
       * </pre>
       *
       * <code>double photons_per_second_maximum = 22;</code>
       */
      public double getPhotonsPerSecondMaximum() {
        return photonsPerSecondMaximum_;
      }
      /**
       * <pre>
       * For a simple localisation model the photons are randomly selected between photonsPerSecond and
       * photonsPerSecondMaximum
       * </pre>
       *
       * <code>double photons_per_second_maximum = 22;</code>
       */
      public Builder setPhotonsPerSecondMaximum(double value) {
        
        photonsPerSecondMaximum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For a simple localisation model the photons are randomly selected between photonsPerSecond and
       * photonsPerSecondMaximum
       * </pre>
       *
       * <code>double photons_per_second_maximum = 22;</code>
       */
      public Builder clearPhotonsPerSecondMaximum() {
        
        photonsPerSecondMaximum_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object photonDistribution_ = "";
      /**
       * <pre>
       * Define the distribution for the random photon emission. The default is to use a gamma
       * distribution with the defined shape parameter.
       * </pre>
       *
       * <code>string photon_distribution = 23;</code>
       */
      public java.lang.String getPhotonDistribution() {
        java.lang.Object ref = photonDistribution_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          photonDistribution_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Define the distribution for the random photon emission. The default is to use a gamma
       * distribution with the defined shape parameter.
       * </pre>
       *
       * <code>string photon_distribution = 23;</code>
       */
      public com.google.protobuf.ByteString
          getPhotonDistributionBytes() {
        java.lang.Object ref = photonDistribution_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          photonDistribution_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Define the distribution for the random photon emission. The default is to use a gamma
       * distribution with the defined shape parameter.
       * </pre>
       *
       * <code>string photon_distribution = 23;</code>
       */
      public Builder setPhotonDistribution(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        photonDistribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the distribution for the random photon emission. The default is to use a gamma
       * distribution with the defined shape parameter.
       * </pre>
       *
       * <code>string photon_distribution = 23;</code>
       */
      public Builder clearPhotonDistribution() {
        
        photonDistribution_ = getDefaultInstance().getPhotonDistribution();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the distribution for the random photon emission. The default is to use a gamma
       * distribution with the defined shape parameter.
       * </pre>
       *
       * <code>string photon_distribution = 23;</code>
       */
      public Builder setPhotonDistributionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        photonDistribution_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object photonDistributionFile_ = "";
      /**
       * <code>string photon_distribution_file = 24;</code>
       */
      public java.lang.String getPhotonDistributionFile() {
        java.lang.Object ref = photonDistributionFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          photonDistributionFile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string photon_distribution_file = 24;</code>
       */
      public com.google.protobuf.ByteString
          getPhotonDistributionFileBytes() {
        java.lang.Object ref = photonDistributionFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          photonDistributionFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string photon_distribution_file = 24;</code>
       */
      public Builder setPhotonDistributionFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        photonDistributionFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string photon_distribution_file = 24;</code>
       */
      public Builder clearPhotonDistributionFile() {
        
        photonDistributionFile_ = getDefaultInstance().getPhotonDistributionFile();
        onChanged();
        return this;
      }
      /**
       * <code>string photon_distribution_file = 24;</code>
       */
      public Builder setPhotonDistributionFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        photonDistributionFile_ = value;
        onChanged();
        return this;
      }

      private double photonShape_ ;
      /**
       * <code>double photon_shape = 25;</code>
       */
      public double getPhotonShape() {
        return photonShape_;
      }
      /**
       * <code>double photon_shape = 25;</code>
       */
      public Builder setPhotonShape(double value) {
        
        photonShape_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double photon_shape = 25;</code>
       */
      public Builder clearPhotonShape() {
        
        photonShape_ = 0D;
        onChanged();
        return this;
      }

      private double correlation_ ;
      /**
       * <code>double correlation = 26;</code>
       */
      public double getCorrelation() {
        return correlation_;
      }
      /**
       * <code>double correlation = 26;</code>
       */
      public Builder setCorrelation(double value) {
        
        correlation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double correlation = 26;</code>
       */
      public Builder clearCorrelation() {
        
        correlation_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object psfModel_ = "";
      /**
       * <code>string psf_model = 27;</code>
       */
      public java.lang.String getPsfModel() {
        java.lang.Object ref = psfModel_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          psfModel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string psf_model = 27;</code>
       */
      public com.google.protobuf.ByteString
          getPsfModelBytes() {
        java.lang.Object ref = psfModel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          psfModel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string psf_model = 27;</code>
       */
      public Builder setPsfModel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        psfModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string psf_model = 27;</code>
       */
      public Builder clearPsfModel() {
        
        psfModel_ = getDefaultInstance().getPsfModel();
        onChanged();
        return this;
      }
      /**
       * <code>string psf_model = 27;</code>
       */
      public Builder setPsfModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        psfModel_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object psfImageName_ = "";
      /**
       * <code>string psf_image_name = 28;</code>
       */
      public java.lang.String getPsfImageName() {
        java.lang.Object ref = psfImageName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          psfImageName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string psf_image_name = 28;</code>
       */
      public com.google.protobuf.ByteString
          getPsfImageNameBytes() {
        java.lang.Object ref = psfImageName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          psfImageName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string psf_image_name = 28;</code>
       */
      public Builder setPsfImageName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        psfImageName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string psf_image_name = 28;</code>
       */
      public Builder clearPsfImageName() {
        
        psfImageName_ = getDefaultInstance().getPsfImageName();
        onChanged();
        return this;
      }
      /**
       * <code>string psf_image_name = 28;</code>
       */
      public Builder setPsfImageNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        psfImageName_ = value;
        onChanged();
        return this;
      }

      private boolean enterWidth_ ;
      /**
       * <code>bool enter_width = 29;</code>
       */
      public boolean getEnterWidth() {
        return enterWidth_;
      }
      /**
       * <code>bool enter_width = 29;</code>
       */
      public Builder setEnterWidth(boolean value) {
        
        enterWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enter_width = 29;</code>
       */
      public Builder clearEnterWidth() {
        
        enterWidth_ = false;
        onChanged();
        return this;
      }

      private double wavelength_ ;
      /**
       * <code>double wavelength = 30;</code>
       */
      public double getWavelength() {
        return wavelength_;
      }
      /**
       * <code>double wavelength = 30;</code>
       */
      public Builder setWavelength(double value) {
        
        wavelength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wavelength = 30;</code>
       */
      public Builder clearWavelength() {
        
        wavelength_ = 0D;
        onChanged();
        return this;
      }

      private double numericalAperture_ ;
      /**
       * <code>double numerical_aperture = 31;</code>
       */
      public double getNumericalAperture() {
        return numericalAperture_;
      }
      /**
       * <code>double numerical_aperture = 31;</code>
       */
      public Builder setNumericalAperture(double value) {
        
        numericalAperture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double numerical_aperture = 31;</code>
       */
      public Builder clearNumericalAperture() {
        
        numericalAperture_ = 0D;
        onChanged();
        return this;
      }

      private double psfSd_ ;
      /**
       * <code>double psf_sd = 32;</code>
       */
      public double getPsfSd() {
        return psfSd_;
      }
      /**
       * <code>double psf_sd = 32;</code>
       */
      public Builder setPsfSd(double value) {
        
        psfSd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double psf_sd = 32;</code>
       */
      public Builder clearPsfSd() {
        
        psfSd_ = 0D;
        onChanged();
        return this;
      }

      private double pixelPitch_ ;
      /**
       * <code>double pixel_pitch = 33;</code>
       */
      public double getPixelPitch() {
        return pixelPitch_;
      }
      /**
       * <code>double pixel_pitch = 33;</code>
       */
      public Builder setPixelPitch(double value) {
        
        pixelPitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pixel_pitch = 33;</code>
       */
      public Builder clearPixelPitch() {
        
        pixelPitch_ = 0D;
        onChanged();
        return this;
      }

      private double density_ ;
      /**
       * <code>double density = 34;</code>
       */
      public double getDensity() {
        return density_;
      }
      /**
       * <code>double density = 34;</code>
       */
      public Builder setDensity(double value) {
        
        density_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double density = 34;</code>
       */
      public Builder clearDensity() {
        
        density_ = 0D;
        onChanged();
        return this;
      }

      private double diffusionRate_ ;
      /**
       * <code>double diffusion_rate = 35;</code>
       */
      public double getDiffusionRate() {
        return diffusionRate_;
      }
      /**
       * <code>double diffusion_rate = 35;</code>
       */
      public Builder setDiffusionRate(double value) {
        
        diffusionRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double diffusion_rate = 35;</code>
       */
      public Builder clearDiffusionRate() {
        
        diffusionRate_ = 0D;
        onChanged();
        return this;
      }

      private int diffusionType_ ;
      /**
       * <code>int32 diffusion_type = 36;</code>
       */
      public int getDiffusionType() {
        return diffusionType_;
      }
      /**
       * <code>int32 diffusion_type = 36;</code>
       */
      public Builder setDiffusionType(int value) {
        
        diffusionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 diffusion_type = 36;</code>
       */
      public Builder clearDiffusionType() {
        
        diffusionType_ = 0;
        onChanged();
        return this;
      }

      private boolean compoundMolecules_ ;
      /**
       * <code>bool compound_molecules = 37;</code>
       */
      public boolean getCompoundMolecules() {
        return compoundMolecules_;
      }
      /**
       * <code>bool compound_molecules = 37;</code>
       */
      public Builder setCompoundMolecules(boolean value) {
        
        compoundMolecules_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool compound_molecules = 37;</code>
       */
      public Builder clearCompoundMolecules() {
        
        compoundMolecules_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object compoundText_ = "";
      /**
       * <code>string compound_text = 38;</code>
       */
      public java.lang.String getCompoundText() {
        java.lang.Object ref = compoundText_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          compoundText_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string compound_text = 38;</code>
       */
      public com.google.protobuf.ByteString
          getCompoundTextBytes() {
        java.lang.Object ref = compoundText_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          compoundText_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string compound_text = 38;</code>
       */
      public Builder setCompoundText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        compoundText_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string compound_text = 38;</code>
       */
      public Builder clearCompoundText() {
        
        compoundText_ = getDefaultInstance().getCompoundText();
        onChanged();
        return this;
      }
      /**
       * <code>string compound_text = 38;</code>
       */
      public Builder setCompoundTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        compoundText_ = value;
        onChanged();
        return this;
      }

      private boolean diffuse2D_ ;
      /**
       * <code>bool diffuse_2D = 39;</code>
       */
      public boolean getDiffuse2D() {
        return diffuse2D_;
      }
      /**
       * <code>bool diffuse_2D = 39;</code>
       */
      public Builder setDiffuse2D(boolean value) {
        
        diffuse2D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool diffuse_2D = 39;</code>
       */
      public Builder clearDiffuse2D() {
        
        diffuse2D_ = false;
        onChanged();
        return this;
      }

      private boolean rotateInitialOrientation_ ;
      /**
       * <code>bool rotate_initial_orientation = 40;</code>
       */
      public boolean getRotateInitialOrientation() {
        return rotateInitialOrientation_;
      }
      /**
       * <code>bool rotate_initial_orientation = 40;</code>
       */
      public Builder setRotateInitialOrientation(boolean value) {
        
        rotateInitialOrientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool rotate_initial_orientation = 40;</code>
       */
      public Builder clearRotateInitialOrientation() {
        
        rotateInitialOrientation_ = false;
        onChanged();
        return this;
      }

      private boolean rotateDuringSimulation_ ;
      /**
       * <code>bool rotate_during_simulation = 41;</code>
       */
      public boolean getRotateDuringSimulation() {
        return rotateDuringSimulation_;
      }
      /**
       * <code>bool rotate_during_simulation = 41;</code>
       */
      public Builder setRotateDuringSimulation(boolean value) {
        
        rotateDuringSimulation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool rotate_during_simulation = 41;</code>
       */
      public Builder clearRotateDuringSimulation() {
        
        rotateDuringSimulation_ = false;
        onChanged();
        return this;
      }

      private boolean rotate2D_ ;
      /**
       * <code>bool rotate_2D = 42;</code>
       */
      public boolean getRotate2D() {
        return rotate2D_;
      }
      /**
       * <code>bool rotate_2D = 42;</code>
       */
      public Builder setRotate2D(boolean value) {
        
        rotate2D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool rotate_2D = 42;</code>
       */
      public Builder clearRotate2D() {
        
        rotate2D_ = false;
        onChanged();
        return this;
      }

      private double fixedFraction_ ;
      /**
       * <code>double fixedFraction = 43;</code>
       */
      public double getFixedFraction() {
        return fixedFraction_;
      }
      /**
       * <code>double fixedFraction = 43;</code>
       */
      public Builder setFixedFraction(double value) {
        
        fixedFraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double fixedFraction = 43;</code>
       */
      public Builder clearFixedFraction() {
        
        fixedFraction_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object confinement_ = "";
      /**
       * <code>string confinement = 44;</code>
       */
      public java.lang.String getConfinement() {
        java.lang.Object ref = confinement_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          confinement_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string confinement = 44;</code>
       */
      public com.google.protobuf.ByteString
          getConfinementBytes() {
        java.lang.Object ref = confinement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          confinement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string confinement = 44;</code>
       */
      public Builder setConfinement(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        confinement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string confinement = 44;</code>
       */
      public Builder clearConfinement() {
        
        confinement_ = getDefaultInstance().getConfinement();
        onChanged();
        return this;
      }
      /**
       * <code>string confinement = 44;</code>
       */
      public Builder setConfinementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        confinement_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object confinementMask_ = "";
      /**
       * <code>string confinement_mask = 45;</code>
       */
      public java.lang.String getConfinementMask() {
        java.lang.Object ref = confinementMask_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          confinementMask_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string confinement_mask = 45;</code>
       */
      public com.google.protobuf.ByteString
          getConfinementMaskBytes() {
        java.lang.Object ref = confinementMask_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          confinementMask_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string confinement_mask = 45;</code>
       */
      public Builder setConfinementMask(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        confinementMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string confinement_mask = 45;</code>
       */
      public Builder clearConfinementMask() {
        
        confinementMask_ = getDefaultInstance().getConfinementMask();
        onChanged();
        return this;
      }
      /**
       * <code>string confinement_mask = 45;</code>
       */
      public Builder setConfinementMaskBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        confinementMask_ = value;
        onChanged();
        return this;
      }

      private double confinementMaskSliceDepth_ ;
      /**
       * <code>double confinement_mask_slice_depth = 46;</code>
       */
      public double getConfinementMaskSliceDepth() {
        return confinementMaskSliceDepth_;
      }
      /**
       * <code>double confinement_mask_slice_depth = 46;</code>
       */
      public Builder setConfinementMaskSliceDepth(double value) {
        
        confinementMaskSliceDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double confinement_mask_slice_depth = 46;</code>
       */
      public Builder clearConfinementMaskSliceDepth() {
        
        confinementMaskSliceDepth_ = 0D;
        onChanged();
        return this;
      }

      private double confinementRadius_ ;
      /**
       * <code>double confinement_radius = 47;</code>
       */
      public double getConfinementRadius() {
        return confinementRadius_;
      }
      /**
       * <code>double confinement_radius = 47;</code>
       */
      public Builder setConfinementRadius(double value) {
        
        confinementRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double confinement_radius = 47;</code>
       */
      public Builder clearConfinementRadius() {
        
        confinementRadius_ = 0D;
        onChanged();
        return this;
      }

      private int pulseInterval_ ;
      /**
       * <code>int32 pulse_interval = 48;</code>
       */
      public int getPulseInterval() {
        return pulseInterval_;
      }
      /**
       * <code>int32 pulse_interval = 48;</code>
       */
      public Builder setPulseInterval(int value) {
        
        pulseInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 pulse_interval = 48;</code>
       */
      public Builder clearPulseInterval() {
        
        pulseInterval_ = 0;
        onChanged();
        return this;
      }

      private double pulseRatio_ ;
      /**
       * <code>double pulse_ratio = 49;</code>
       */
      public double getPulseRatio() {
        return pulseRatio_;
      }
      /**
       * <code>double pulse_ratio = 49;</code>
       */
      public Builder setPulseRatio(double value) {
        
        pulseRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pulse_ratio = 49;</code>
       */
      public Builder clearPulseRatio() {
        
        pulseRatio_ = 0D;
        onChanged();
        return this;
      }

      private double tOn_ ;
      /**
       * <pre>
       * Average t-On in milliseconds
       * </pre>
       *
       * <code>double t_on = 50;</code>
       */
      public double getTOn() {
        return tOn_;
      }
      /**
       * <pre>
       * Average t-On in milliseconds
       * </pre>
       *
       * <code>double t_on = 50;</code>
       */
      public Builder setTOn(double value) {
        
        tOn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average t-On in milliseconds
       * </pre>
       *
       * <code>double t_on = 50;</code>
       */
      public Builder clearTOn() {
        
        tOn_ = 0D;
        onChanged();
        return this;
      }

      private double tOffShort_ ;
      /**
       * <pre>
       * Average t-Off for the short dark state in milliseconds
       * </pre>
       *
       * <code>double t_off_short = 51;</code>
       */
      public double getTOffShort() {
        return tOffShort_;
      }
      /**
       * <pre>
       * Average t-Off for the short dark state in milliseconds
       * </pre>
       *
       * <code>double t_off_short = 51;</code>
       */
      public Builder setTOffShort(double value) {
        
        tOffShort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average t-Off for the short dark state in milliseconds
       * </pre>
       *
       * <code>double t_off_short = 51;</code>
       */
      public Builder clearTOffShort() {
        
        tOffShort_ = 0D;
        onChanged();
        return this;
      }

      private double tOffLong_ ;
      /**
       * <pre>
       * Average t-Off for the long dark state in milliseconds
       * </pre>
       *
       * <code>double t_off_long = 52;</code>
       */
      public double getTOffLong() {
        return tOffLong_;
      }
      /**
       * <pre>
       * Average t-Off for the long dark state in milliseconds
       * </pre>
       *
       * <code>double t_off_long = 52;</code>
       */
      public Builder setTOffLong(double value) {
        
        tOffLong_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average t-Off for the long dark state in milliseconds
       * </pre>
       *
       * <code>double t_off_long = 52;</code>
       */
      public Builder clearTOffLong() {
        
        tOffLong_ = 0D;
        onChanged();
        return this;
      }

      private double nBlinksShort_ ;
      /**
       * <pre>
       * Average number of short blinks, i.e. when transitioning from the on state to the short dark state
       * </pre>
       *
       * <code>double n_blinks_short = 53;</code>
       */
      public double getNBlinksShort() {
        return nBlinksShort_;
      }
      /**
       * <pre>
       * Average number of short blinks, i.e. when transitioning from the on state to the short dark state
       * </pre>
       *
       * <code>double n_blinks_short = 53;</code>
       */
      public Builder setNBlinksShort(double value) {
        
        nBlinksShort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average number of short blinks, i.e. when transitioning from the on state to the short dark state
       * </pre>
       *
       * <code>double n_blinks_short = 53;</code>
       */
      public Builder clearNBlinksShort() {
        
        nBlinksShort_ = 0D;
        onChanged();
        return this;
      }

      private double nBlinksLong_ ;
      /**
       * <pre>
       * Average number of long blinks, i.e. transitions to the long dark state
       * </pre>
       *
       * <code>double n_blinks_long = 54;</code>
       */
      public double getNBlinksLong() {
        return nBlinksLong_;
      }
      /**
       * <pre>
       * Average number of long blinks, i.e. transitions to the long dark state
       * </pre>
       *
       * <code>double n_blinks_long = 54;</code>
       */
      public Builder setNBlinksLong(double value) {
        
        nBlinksLong_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average number of long blinks, i.e. transitions to the long dark state
       * </pre>
       *
       * <code>double n_blinks_long = 54;</code>
       */
      public Builder clearNBlinksLong() {
        
        nBlinksLong_ = 0D;
        onChanged();
        return this;
      }

      private boolean nBlinksGeometricDistribution_ ;
      /**
       * <pre>
       * Set to true to use a geometric distribution for the nBlinks. Default is to use a Poisson.
       * </pre>
       *
       * <code>bool n_blinks_geometric_distribution = 55;</code>
       */
      public boolean getNBlinksGeometricDistribution() {
        return nBlinksGeometricDistribution_;
      }
      /**
       * <pre>
       * Set to true to use a geometric distribution for the nBlinks. Default is to use a Poisson.
       * </pre>
       *
       * <code>bool n_blinks_geometric_distribution = 55;</code>
       */
      public Builder setNBlinksGeometricDistribution(boolean value) {
        
        nBlinksGeometricDistribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to use a geometric distribution for the nBlinks. Default is to use a Poisson.
       * </pre>
       *
       * <code>bool n_blinks_geometric_distribution = 55;</code>
       */
      public Builder clearNBlinksGeometricDistribution() {
        
        nBlinksGeometricDistribution_ = false;
        onChanged();
        return this;
      }

      private double minPhotons_ ;
      /**
       * <code>double min_photons = 56;</code>
       */
      public double getMinPhotons() {
        return minPhotons_;
      }
      /**
       * <code>double min_photons = 56;</code>
       */
      public Builder setMinPhotons(double value) {
        
        minPhotons_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double min_photons = 56;</code>
       */
      public Builder clearMinPhotons() {
        
        minPhotons_ = 0D;
        onChanged();
        return this;
      }

      private double minSnrT1_ ;
      /**
       * <code>double min_snr_t1 = 57;</code>
       */
      public double getMinSnrT1() {
        return minSnrT1_;
      }
      /**
       * <code>double min_snr_t1 = 57;</code>
       */
      public Builder setMinSnrT1(double value) {
        
        minSnrT1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double min_snr_t1 = 57;</code>
       */
      public Builder clearMinSnrT1() {
        
        minSnrT1_ = 0D;
        onChanged();
        return this;
      }

      private double minSnrTN_ ;
      /**
       * <code>double min_snr_tN = 58;</code>
       */
      public double getMinSnrTN() {
        return minSnrTN_;
      }
      /**
       * <code>double min_snr_tN = 58;</code>
       */
      public Builder setMinSnrTN(double value) {
        
        minSnrTN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double min_snr_tN = 58;</code>
       */
      public Builder clearMinSnrTN() {
        
        minSnrTN_ = 0D;
        onChanged();
        return this;
      }

      private boolean rawImage_ ;
      /**
       * <code>bool raw_image = 59;</code>
       */
      public boolean getRawImage() {
        return rawImage_;
      }
      /**
       * <code>bool raw_image = 59;</code>
       */
      public Builder setRawImage(boolean value) {
        
        rawImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool raw_image = 59;</code>
       */
      public Builder clearRawImage() {
        
        rawImage_ = false;
        onChanged();
        return this;
      }

      private boolean saveImage_ ;
      /**
       * <code>bool save_image = 60;</code>
       */
      public boolean getSaveImage() {
        return saveImage_;
      }
      /**
       * <code>bool save_image = 60;</code>
       */
      public Builder setSaveImage(boolean value) {
        
        saveImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool save_image = 60;</code>
       */
      public Builder clearSaveImage() {
        
        saveImage_ = false;
        onChanged();
        return this;
      }

      private boolean saveImageResults_ ;
      /**
       * <code>bool save_image_results = 61;</code>
       */
      public boolean getSaveImageResults() {
        return saveImageResults_;
      }
      /**
       * <code>bool save_image_results = 61;</code>
       */
      public Builder setSaveImageResults(boolean value) {
        
        saveImageResults_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool save_image_results = 61;</code>
       */
      public Builder clearSaveImageResults() {
        
        saveImageResults_ = false;
        onChanged();
        return this;
      }

      private boolean saveLocalisations_ ;
      /**
       * <code>bool save_localisations = 62;</code>
       */
      public boolean getSaveLocalisations() {
        return saveLocalisations_;
      }
      /**
       * <code>bool save_localisations = 62;</code>
       */
      public Builder setSaveLocalisations(boolean value) {
        
        saveLocalisations_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool save_localisations = 62;</code>
       */
      public Builder clearSaveLocalisations() {
        
        saveLocalisations_ = false;
        onChanged();
        return this;
      }

      private boolean saveFluorophores_ ;
      /**
       * <code>bool save_fluorophores = 63;</code>
       */
      public boolean getSaveFluorophores() {
        return saveFluorophores_;
      }
      /**
       * <code>bool save_fluorophores = 63;</code>
       */
      public Builder setSaveFluorophores(boolean value) {
        
        saveFluorophores_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool save_fluorophores = 63;</code>
       */
      public Builder clearSaveFluorophores() {
        
        saveFluorophores_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object imageFilename_ = "";
      /**
       * <code>string image_filename = 64;</code>
       */
      public java.lang.String getImageFilename() {
        java.lang.Object ref = imageFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          imageFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string image_filename = 64;</code>
       */
      public com.google.protobuf.ByteString
          getImageFilenameBytes() {
        java.lang.Object ref = imageFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imageFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string image_filename = 64;</code>
       */
      public Builder setImageFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imageFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string image_filename = 64;</code>
       */
      public Builder clearImageFilename() {
        
        imageFilename_ = getDefaultInstance().getImageFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string image_filename = 64;</code>
       */
      public Builder setImageFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imageFilename_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object imageResultsFilename_ = "";
      /**
       * <code>string image_results_filename = 65;</code>
       */
      public java.lang.String getImageResultsFilename() {
        java.lang.Object ref = imageResultsFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          imageResultsFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string image_results_filename = 65;</code>
       */
      public com.google.protobuf.ByteString
          getImageResultsFilenameBytes() {
        java.lang.Object ref = imageResultsFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imageResultsFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string image_results_filename = 65;</code>
       */
      public Builder setImageResultsFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imageResultsFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string image_results_filename = 65;</code>
       */
      public Builder clearImageResultsFilename() {
        
        imageResultsFilename_ = getDefaultInstance().getImageResultsFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string image_results_filename = 65;</code>
       */
      public Builder setImageResultsFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imageResultsFilename_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fluorophoresFilename_ = "";
      /**
       * <code>string fluorophoresFilename = 66;</code>
       */
      public java.lang.String getFluorophoresFilename() {
        java.lang.Object ref = fluorophoresFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fluorophoresFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fluorophoresFilename = 66;</code>
       */
      public com.google.protobuf.ByteString
          getFluorophoresFilenameBytes() {
        java.lang.Object ref = fluorophoresFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fluorophoresFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fluorophoresFilename = 66;</code>
       */
      public Builder setFluorophoresFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fluorophoresFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fluorophoresFilename = 66;</code>
       */
      public Builder clearFluorophoresFilename() {
        
        fluorophoresFilename_ = getDefaultInstance().getFluorophoresFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string fluorophoresFilename = 66;</code>
       */
      public Builder setFluorophoresFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fluorophoresFilename_ = value;
        onChanged();
        return this;
      }

      private int cellSize_ ;
      /**
       * <code>int32 cell_size = 67;</code>
       */
      public int getCellSize() {
        return cellSize_;
      }
      /**
       * <code>int32 cell_size = 67;</code>
       */
      public Builder setCellSize(int value) {
        
        cellSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 cell_size = 67;</code>
       */
      public Builder clearCellSize() {
        
        cellSize_ = 0;
        onChanged();
        return this;
      }

      private double probabilityBinary_ ;
      /**
       * <code>double probability_binary = 68;</code>
       */
      public double getProbabilityBinary() {
        return probabilityBinary_;
      }
      /**
       * <code>double probability_binary = 68;</code>
       */
      public Builder setProbabilityBinary(double value) {
        
        probabilityBinary_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double probability_binary = 68;</code>
       */
      public Builder clearProbabilityBinary() {
        
        probabilityBinary_ = 0D;
        onChanged();
        return this;
      }

      private double minBinaryDistance_ ;
      /**
       * <code>double min_binary_distance = 69;</code>
       */
      public double getMinBinaryDistance() {
        return minBinaryDistance_;
      }
      /**
       * <code>double min_binary_distance = 69;</code>
       */
      public Builder setMinBinaryDistance(double value) {
        
        minBinaryDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double min_binary_distance = 69;</code>
       */
      public Builder clearMinBinaryDistance() {
        
        minBinaryDistance_ = 0D;
        onChanged();
        return this;
      }

      private double maxBinaryDistance_ ;
      /**
       * <code>double max_binary_distance = 70;</code>
       */
      public double getMaxBinaryDistance() {
        return maxBinaryDistance_;
      }
      /**
       * <code>double max_binary_distance = 70;</code>
       */
      public Builder setMaxBinaryDistance(double value) {
        
        maxBinaryDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double max_binary_distance = 70;</code>
       */
      public Builder clearMaxBinaryDistance() {
        
        maxBinaryDistance_ = 0D;
        onChanged();
        return this;
      }

      private boolean showHistograms_ ;
      /**
       * <code>bool show_histograms = 71;</code>
       */
      public boolean getShowHistograms() {
        return showHistograms_;
      }
      /**
       * <code>bool show_histograms = 71;</code>
       */
      public Builder setShowHistograms(boolean value) {
        
        showHistograms_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool show_histograms = 71;</code>
       */
      public Builder clearShowHistograms() {
        
        showHistograms_ = false;
        onChanged();
        return this;
      }

      private boolean chooseHistograms_ ;
      /**
       * <code>bool choose_histograms = 72;</code>
       */
      public boolean getChooseHistograms() {
        return chooseHistograms_;
      }
      /**
       * <code>bool choose_histograms = 72;</code>
       */
      public Builder setChooseHistograms(boolean value) {
        
        chooseHistograms_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool choose_histograms = 72;</code>
       */
      public Builder clearChooseHistograms() {
        
        chooseHistograms_ = false;
        onChanged();
        return this;
      }

      private int histogramBins_ ;
      /**
       * <code>int32 histogram_bins = 73;</code>
       */
      public int getHistogramBins() {
        return histogramBins_;
      }
      /**
       * <code>int32 histogram_bins = 73;</code>
       */
      public Builder setHistogramBins(int value) {
        
        histogramBins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 histogram_bins = 73;</code>
       */
      public Builder clearHistogramBins() {
        
        histogramBins_ = 0;
        onChanged();
        return this;
      }

      private boolean removeOutliers_ ;
      /**
       * <code>bool remove_outliers = 74;</code>
       */
      public boolean getRemoveOutliers() {
        return removeOutliers_;
      }
      /**
       * <code>bool remove_outliers = 74;</code>
       */
      public Builder setRemoveOutliers(boolean value) {
        
        removeOutliers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool remove_outliers = 74;</code>
       */
      public Builder clearRemoveOutliers() {
        
        removeOutliers_ = false;
        onChanged();
        return this;
      }

      private float densityRadius_ ;
      /**
       * <code>float density_radius = 75;</code>
       */
      public float getDensityRadius() {
        return densityRadius_;
      }
      /**
       * <code>float density_radius = 75;</code>
       */
      public Builder setDensityRadius(float value) {
        
        densityRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float density_radius = 75;</code>
       */
      public Builder clearDensityRadius() {
        
        densityRadius_ = 0F;
        onChanged();
        return this;
      }

      private float depthOfField_ ;
      /**
       * <code>float depth_of_field = 76;</code>
       */
      public float getDepthOfField() {
        return depthOfField_;
      }
      /**
       * <code>float depth_of_field = 76;</code>
       */
      public Builder setDepthOfField(float value) {
        
        depthOfField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float depth_of_field = 76;</code>
       */
      public Builder clearDepthOfField() {
        
        depthOfField_ = 0F;
        onChanged();
        return this;
      }

      private double xPosition_ ;
      /**
       * <code>double x_position = 77;</code>
       */
      public double getXPosition() {
        return xPosition_;
      }
      /**
       * <code>double x_position = 77;</code>
       */
      public Builder setXPosition(double value) {
        
        xPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double x_position = 77;</code>
       */
      public Builder clearXPosition() {
        
        xPosition_ = 0D;
        onChanged();
        return this;
      }

      private double yPosition_ ;
      /**
       * <code>double y_position = 78;</code>
       */
      public double getYPosition() {
        return yPosition_;
      }
      /**
       * <code>double y_position = 78;</code>
       */
      public Builder setYPosition(double value) {
        
        yPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double y_position = 78;</code>
       */
      public Builder clearYPosition() {
        
        yPosition_ = 0D;
        onChanged();
        return this;
      }

      private double zPosition_ ;
      /**
       * <code>double z_position = 79;</code>
       */
      public double getZPosition() {
        return zPosition_;
      }
      /**
       * <code>double z_position = 79;</code>
       */
      public Builder setZPosition(double value) {
        
        zPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double z_position = 79;</code>
       */
      public Builder clearZPosition() {
        
        zPosition_ = 0D;
        onChanged();
        return this;
      }

      private int cameraType_ = 0;
      /**
       * <pre>
       * The camera type.
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
       */
      public int getCameraTypeValue() {
        return cameraType_;
      }
      /**
       * <pre>
       * The camera type.
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
       */
      public Builder setCameraTypeValue(int value) {
        cameraType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The camera type.
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
       */
      public gdsc.smlm.data.config.CalibrationProtos.CameraType getCameraType() {
        gdsc.smlm.data.config.CalibrationProtos.CameraType result = gdsc.smlm.data.config.CalibrationProtos.CameraType.valueOf(cameraType_);
        return result == null ? gdsc.smlm.data.config.CalibrationProtos.CameraType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The camera type.
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
       */
      public Builder setCameraType(gdsc.smlm.data.config.CalibrationProtos.CameraType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cameraType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The camera type.
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.CameraType camera_type = 80;</code>
       */
      public Builder clearCameraType() {
        
        cameraType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object cameraModelName_ = "";
      /**
       * <pre>
       * The camera model name. This should contain all the information required to 
       * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
       * </pre>
       *
       * <code>string camera_model_name = 81;</code>
       */
      public java.lang.String getCameraModelName() {
        java.lang.Object ref = cameraModelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cameraModelName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The camera model name. This should contain all the information required to 
       * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
       * </pre>
       *
       * <code>string camera_model_name = 81;</code>
       */
      public com.google.protobuf.ByteString
          getCameraModelNameBytes() {
        java.lang.Object ref = cameraModelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cameraModelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The camera model name. This should contain all the information required to 
       * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
       * </pre>
       *
       * <code>string camera_model_name = 81;</code>
       */
      public Builder setCameraModelName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cameraModelName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The camera model name. This should contain all the information required to 
       * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
       * </pre>
       *
       * <code>string camera_model_name = 81;</code>
       */
      public Builder clearCameraModelName() {
        
        cameraModelName_ = getDefaultInstance().getCameraModelName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The camera model name. This should contain all the information required to 
       * load the camera model, e.g. in the case of a per-pixel camera model for sCMOS cameras.
       * </pre>
       *
       * <code>string camera_model_name = 81;</code>
       */
      public Builder setCameraModelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cameraModelName_ = value;
        onChanged();
        return this;
      }

      private boolean randomCrop_ ;
      /**
       * <code>bool random_crop = 82;</code>
       */
      public boolean getRandomCrop() {
        return randomCrop_;
      }
      /**
       * <code>bool random_crop = 82;</code>
       */
      public Builder setRandomCrop(boolean value) {
        
        randomCrop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool random_crop = 82;</code>
       */
      public Builder clearRandomCrop() {
        
        randomCrop_ = false;
        onChanged();
        return this;
      }

      private int originX_ ;
      /**
       * <pre>
       * The origin x-coordinate used to crop the model
       * </pre>
       *
       * <code>int32 origin_x = 83;</code>
       */
      public int getOriginX() {
        return originX_;
      }
      /**
       * <pre>
       * The origin x-coordinate used to crop the model
       * </pre>
       *
       * <code>int32 origin_x = 83;</code>
       */
      public Builder setOriginX(int value) {
        
        originX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The origin x-coordinate used to crop the model
       * </pre>
       *
       * <code>int32 origin_x = 83;</code>
       */
      public Builder clearOriginX() {
        
        originX_ = 0;
        onChanged();
        return this;
      }

      private int originY_ ;
      /**
       * <pre>
       * The origin y-coordinate used to crop the model
       * </pre>
       *
       * <code>int32 origin_y = 84;</code>
       */
      public int getOriginY() {
        return originY_;
      }
      /**
       * <pre>
       * The origin y-coordinate used to crop the model
       * </pre>
       *
       * <code>int32 origin_y = 84;</code>
       */
      public Builder setOriginY(int value) {
        
        originY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The origin y-coordinate used to crop the model
       * </pre>
       *
       * <code>int32 origin_y = 84;</code>
       */
      public Builder clearOriginY() {
        
        originY_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.CreateDataSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.CreateDataSettings)
    private static final gdsc.smlm.data.config.GUIProtos.CreateDataSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.CreateDataSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.CreateDataSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateDataSettings>
        PARSER = new com.google.protobuf.AbstractParser<CreateDataSettings>() {
      public CreateDataSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CreateDataSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreateDataSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateDataSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.CreateDataSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LoadLocalisationsSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.LoadLocalisationsSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string localisationsFilename = 1;</code>
     */
    java.lang.String getLocalisationsFilename();
    /**
     * <code>string localisationsFilename = 1;</code>
     */
    com.google.protobuf.ByteString
        getLocalisationsFilenameBytes();
  }
  /**
   * <pre>
   * Settings for the Load Localisations plugin
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.LoadLocalisationsSettings}
   */
  public  static final class LoadLocalisationsSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.LoadLocalisationsSettings)
      LoadLocalisationsSettingsOrBuilder {
    // Use LoadLocalisationsSettings.newBuilder() to construct.
    private LoadLocalisationsSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LoadLocalisationsSettings() {
      localisationsFilename_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LoadLocalisationsSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              localisationsFilename_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings.class, gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings.Builder.class);
    }

    public static final int LOCALISATIONSFILENAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object localisationsFilename_;
    /**
     * <code>string localisationsFilename = 1;</code>
     */
    public java.lang.String getLocalisationsFilename() {
      java.lang.Object ref = localisationsFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        localisationsFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string localisationsFilename = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLocalisationsFilenameBytes() {
      java.lang.Object ref = localisationsFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        localisationsFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLocalisationsFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, localisationsFilename_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLocalisationsFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, localisationsFilename_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings other = (gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings) obj;

      boolean result = true;
      result = result && getLocalisationsFilename()
          .equals(other.getLocalisationsFilename());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOCALISATIONSFILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getLocalisationsFilename().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Settings for the Load Localisations plugin
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.LoadLocalisationsSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.LoadLocalisationsSettings)
        gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings.class, gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        localisationsFilename_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings build() {
        gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings result = new gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings(this);
        result.localisationsFilename_ = localisationsFilename_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings.getDefaultInstance()) return this;
        if (!other.getLocalisationsFilename().isEmpty()) {
          localisationsFilename_ = other.localisationsFilename_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object localisationsFilename_ = "";
      /**
       * <code>string localisationsFilename = 1;</code>
       */
      public java.lang.String getLocalisationsFilename() {
        java.lang.Object ref = localisationsFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          localisationsFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string localisationsFilename = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLocalisationsFilenameBytes() {
        java.lang.Object ref = localisationsFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localisationsFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string localisationsFilename = 1;</code>
       */
      public Builder setLocalisationsFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        localisationsFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string localisationsFilename = 1;</code>
       */
      public Builder clearLocalisationsFilename() {
        
        localisationsFilename_ = getDefaultInstance().getLocalisationsFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string localisationsFilename = 1;</code>
       */
      public Builder setLocalisationsFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        localisationsFilename_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.LoadLocalisationsSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.LoadLocalisationsSettings)
    private static final gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LoadLocalisationsSettings>
        PARSER = new com.google.protobuf.AbstractParser<LoadLocalisationsSettings>() {
      public LoadLocalisationsSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LoadLocalisationsSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LoadLocalisationsSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LoadLocalisationsSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.LoadLocalisationsSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClusteringSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.ClusteringSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double distance_threshold = 1;</code>
     */
    double getDistanceThreshold();

    /**
     * <code>double distance_exclusion = 2;</code>
     */
    double getDistanceExclusion();

    /**
     * <code>double time_threshold = 3;</code>
     */
    double getTimeThreshold();

    /**
     * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
     */
    int getTimeUnitValue();
    /**
     * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
     */
    gdsc.smlm.data.config.UnitProtos.TimeUnit getTimeUnit();

    /**
     * <code>int32 trace_mode = 5;</code>
     */
    int getTraceMode();

    /**
     * <code>int32 clustering_algorithm = 6;</code>
     */
    int getClusteringAlgorithm();

    /**
     * <code>int32 pulse_interval = 7;</code>
     */
    int getPulseInterval();

    /**
     * <code>int32 pulse_window = 8;</code>
     */
    int getPulseWindow();

    /**
     * <code>bool split_pulses = 9;</code>
     */
    boolean getSplitPulses();

    /**
     * <code>double blinking_rate = 10;</code>
     */
    double getBlinkingRate();

    /**
     * <code>bool optimise = 11;</code>
     */
    boolean getOptimise();

    /**
     * <code>double min_distance_threshold = 12;</code>
     */
    double getMinDistanceThreshold();

    /**
     * <code>double max_distance_threshold = 13;</code>
     */
    double getMaxDistanceThreshold();

    /**
     * <pre>
     * The min time threshold for optimisation (time is in frames).
     * </pre>
     *
     * <code>int32 min_time_threshold = 14;</code>
     */
    int getMinTimeThreshold();

    /**
     * <pre>
     * The max time threshold for optimisation (time is in frames).
     * </pre>
     *
     * <code>int32 max_time_threshold = 15;</code>
     */
    int getMaxTimeThreshold();

    /**
     * <code>int32 optimiser_steps = 16;</code>
     */
    int getOptimiserSteps();

    /**
     * <code>int32 optimiser_plot = 17;</code>
     */
    int getOptimiserPlot();

    /**
     * <code>bool save_traces = 18;</code>
     */
    boolean getSaveTraces();

    /**
     * <code>bool show_histograms = 19;</code>
     */
    boolean getShowHistograms();

    /**
     * <code>bool save_trace_data = 20;</code>
     */
    boolean getSaveTraceData();

    /**
     * <code>string trace_data_directory = 21;</code>
     */
    java.lang.String getTraceDataDirectory();
    /**
     * <code>string trace_data_directory = 21;</code>
     */
    com.google.protobuf.ByteString
        getTraceDataDirectoryBytes();

    /**
     * <code>int32 histogram_bins = 22;</code>
     */
    int getHistogramBins();

    /**
     * <code>bool remove_outliers = 23;</code>
     */
    boolean getRemoveOutliers();

    /**
     * <code>bool refit_option = 24;</code>
     */
    boolean getRefitOption();

    /**
     * <pre>
     * Options for tracing diffusion
     * </pre>
     *
     * <code>int32 minimum_trace_length = 25;</code>
     */
    int getMinimumTraceLength();

    /**
     * <code>bool truncate = 26;</code>
     */
    boolean getTruncate();

    /**
     * <code>bool internal_distances = 27;</code>
     */
    boolean getInternalDistances();

    /**
     * <code>bool sub_sampled_distances = 28;</code>
     */
    boolean getSubSampledDistances();

    /**
     * <code>bool ignore_ends = 29;</code>
     */
    boolean getIgnoreEnds();

    /**
     * <code>bool precision_correction = 30;</code>
     */
    boolean getPrecisionCorrection();

    /**
     * <code>bool msd_correction = 31;</code>
     */
    boolean getMsdCorrection();

    /**
     * <code>bool mle = 32;</code>
     */
    boolean getMle();

    /**
     * <code>int32 fit_length = 33;</code>
     */
    int getFitLength();

    /**
     * <code>int32 fit_restarts = 34;</code>
     */
    int getFitRestarts();

    /**
     * <code>int32 jump_distance = 35;</code>
     */
    int getJumpDistance();
  }
  /**
   * <pre>
   * Contain the settings for the clustering algorithm
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.ClusteringSettings}
   */
  public  static final class ClusteringSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.ClusteringSettings)
      ClusteringSettingsOrBuilder {
    // Use ClusteringSettings.newBuilder() to construct.
    private ClusteringSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClusteringSettings() {
      distanceThreshold_ = 0D;
      distanceExclusion_ = 0D;
      timeThreshold_ = 0D;
      timeUnit_ = 0;
      traceMode_ = 0;
      clusteringAlgorithm_ = 0;
      pulseInterval_ = 0;
      pulseWindow_ = 0;
      splitPulses_ = false;
      blinkingRate_ = 0D;
      optimise_ = false;
      minDistanceThreshold_ = 0D;
      maxDistanceThreshold_ = 0D;
      minTimeThreshold_ = 0;
      maxTimeThreshold_ = 0;
      optimiserSteps_ = 0;
      optimiserPlot_ = 0;
      saveTraces_ = false;
      showHistograms_ = false;
      saveTraceData_ = false;
      traceDataDirectory_ = "";
      histogramBins_ = 0;
      removeOutliers_ = false;
      refitOption_ = false;
      minimumTraceLength_ = 0;
      truncate_ = false;
      internalDistances_ = false;
      subSampledDistances_ = false;
      ignoreEnds_ = false;
      precisionCorrection_ = false;
      msdCorrection_ = false;
      mle_ = false;
      fitLength_ = 0;
      fitRestarts_ = 0;
      jumpDistance_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ClusteringSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              distanceThreshold_ = input.readDouble();
              break;
            }
            case 17: {

              distanceExclusion_ = input.readDouble();
              break;
            }
            case 25: {

              timeThreshold_ = input.readDouble();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              timeUnit_ = rawValue;
              break;
            }
            case 40: {

              traceMode_ = input.readInt32();
              break;
            }
            case 48: {

              clusteringAlgorithm_ = input.readInt32();
              break;
            }
            case 56: {

              pulseInterval_ = input.readInt32();
              break;
            }
            case 64: {

              pulseWindow_ = input.readInt32();
              break;
            }
            case 72: {

              splitPulses_ = input.readBool();
              break;
            }
            case 81: {

              blinkingRate_ = input.readDouble();
              break;
            }
            case 88: {

              optimise_ = input.readBool();
              break;
            }
            case 97: {

              minDistanceThreshold_ = input.readDouble();
              break;
            }
            case 105: {

              maxDistanceThreshold_ = input.readDouble();
              break;
            }
            case 112: {

              minTimeThreshold_ = input.readInt32();
              break;
            }
            case 120: {

              maxTimeThreshold_ = input.readInt32();
              break;
            }
            case 128: {

              optimiserSteps_ = input.readInt32();
              break;
            }
            case 136: {

              optimiserPlot_ = input.readInt32();
              break;
            }
            case 144: {

              saveTraces_ = input.readBool();
              break;
            }
            case 152: {

              showHistograms_ = input.readBool();
              break;
            }
            case 160: {

              saveTraceData_ = input.readBool();
              break;
            }
            case 170: {
              java.lang.String s = input.readStringRequireUtf8();

              traceDataDirectory_ = s;
              break;
            }
            case 176: {

              histogramBins_ = input.readInt32();
              break;
            }
            case 184: {

              removeOutliers_ = input.readBool();
              break;
            }
            case 192: {

              refitOption_ = input.readBool();
              break;
            }
            case 200: {

              minimumTraceLength_ = input.readInt32();
              break;
            }
            case 208: {

              truncate_ = input.readBool();
              break;
            }
            case 216: {

              internalDistances_ = input.readBool();
              break;
            }
            case 224: {

              subSampledDistances_ = input.readBool();
              break;
            }
            case 232: {

              ignoreEnds_ = input.readBool();
              break;
            }
            case 240: {

              precisionCorrection_ = input.readBool();
              break;
            }
            case 248: {

              msdCorrection_ = input.readBool();
              break;
            }
            case 256: {

              mle_ = input.readBool();
              break;
            }
            case 264: {

              fitLength_ = input.readInt32();
              break;
            }
            case 272: {

              fitRestarts_ = input.readInt32();
              break;
            }
            case 280: {

              jumpDistance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ClusteringSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ClusteringSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.ClusteringSettings.class, gdsc.smlm.data.config.GUIProtos.ClusteringSettings.Builder.class);
    }

    public static final int DISTANCE_THRESHOLD_FIELD_NUMBER = 1;
    private double distanceThreshold_;
    /**
     * <code>double distance_threshold = 1;</code>
     */
    public double getDistanceThreshold() {
      return distanceThreshold_;
    }

    public static final int DISTANCE_EXCLUSION_FIELD_NUMBER = 2;
    private double distanceExclusion_;
    /**
     * <code>double distance_exclusion = 2;</code>
     */
    public double getDistanceExclusion() {
      return distanceExclusion_;
    }

    public static final int TIME_THRESHOLD_FIELD_NUMBER = 3;
    private double timeThreshold_;
    /**
     * <code>double time_threshold = 3;</code>
     */
    public double getTimeThreshold() {
      return timeThreshold_;
    }

    public static final int TIME_UNIT_FIELD_NUMBER = 4;
    private int timeUnit_;
    /**
     * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
     */
    public int getTimeUnitValue() {
      return timeUnit_;
    }
    /**
     * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
     */
    public gdsc.smlm.data.config.UnitProtos.TimeUnit getTimeUnit() {
      gdsc.smlm.data.config.UnitProtos.TimeUnit result = gdsc.smlm.data.config.UnitProtos.TimeUnit.valueOf(timeUnit_);
      return result == null ? gdsc.smlm.data.config.UnitProtos.TimeUnit.UNRECOGNIZED : result;
    }

    public static final int TRACE_MODE_FIELD_NUMBER = 5;
    private int traceMode_;
    /**
     * <code>int32 trace_mode = 5;</code>
     */
    public int getTraceMode() {
      return traceMode_;
    }

    public static final int CLUSTERING_ALGORITHM_FIELD_NUMBER = 6;
    private int clusteringAlgorithm_;
    /**
     * <code>int32 clustering_algorithm = 6;</code>
     */
    public int getClusteringAlgorithm() {
      return clusteringAlgorithm_;
    }

    public static final int PULSE_INTERVAL_FIELD_NUMBER = 7;
    private int pulseInterval_;
    /**
     * <code>int32 pulse_interval = 7;</code>
     */
    public int getPulseInterval() {
      return pulseInterval_;
    }

    public static final int PULSE_WINDOW_FIELD_NUMBER = 8;
    private int pulseWindow_;
    /**
     * <code>int32 pulse_window = 8;</code>
     */
    public int getPulseWindow() {
      return pulseWindow_;
    }

    public static final int SPLIT_PULSES_FIELD_NUMBER = 9;
    private boolean splitPulses_;
    /**
     * <code>bool split_pulses = 9;</code>
     */
    public boolean getSplitPulses() {
      return splitPulses_;
    }

    public static final int BLINKING_RATE_FIELD_NUMBER = 10;
    private double blinkingRate_;
    /**
     * <code>double blinking_rate = 10;</code>
     */
    public double getBlinkingRate() {
      return blinkingRate_;
    }

    public static final int OPTIMISE_FIELD_NUMBER = 11;
    private boolean optimise_;
    /**
     * <code>bool optimise = 11;</code>
     */
    public boolean getOptimise() {
      return optimise_;
    }

    public static final int MIN_DISTANCE_THRESHOLD_FIELD_NUMBER = 12;
    private double minDistanceThreshold_;
    /**
     * <code>double min_distance_threshold = 12;</code>
     */
    public double getMinDistanceThreshold() {
      return minDistanceThreshold_;
    }

    public static final int MAX_DISTANCE_THRESHOLD_FIELD_NUMBER = 13;
    private double maxDistanceThreshold_;
    /**
     * <code>double max_distance_threshold = 13;</code>
     */
    public double getMaxDistanceThreshold() {
      return maxDistanceThreshold_;
    }

    public static final int MIN_TIME_THRESHOLD_FIELD_NUMBER = 14;
    private int minTimeThreshold_;
    /**
     * <pre>
     * The min time threshold for optimisation (time is in frames).
     * </pre>
     *
     * <code>int32 min_time_threshold = 14;</code>
     */
    public int getMinTimeThreshold() {
      return minTimeThreshold_;
    }

    public static final int MAX_TIME_THRESHOLD_FIELD_NUMBER = 15;
    private int maxTimeThreshold_;
    /**
     * <pre>
     * The max time threshold for optimisation (time is in frames).
     * </pre>
     *
     * <code>int32 max_time_threshold = 15;</code>
     */
    public int getMaxTimeThreshold() {
      return maxTimeThreshold_;
    }

    public static final int OPTIMISER_STEPS_FIELD_NUMBER = 16;
    private int optimiserSteps_;
    /**
     * <code>int32 optimiser_steps = 16;</code>
     */
    public int getOptimiserSteps() {
      return optimiserSteps_;
    }

    public static final int OPTIMISER_PLOT_FIELD_NUMBER = 17;
    private int optimiserPlot_;
    /**
     * <code>int32 optimiser_plot = 17;</code>
     */
    public int getOptimiserPlot() {
      return optimiserPlot_;
    }

    public static final int SAVE_TRACES_FIELD_NUMBER = 18;
    private boolean saveTraces_;
    /**
     * <code>bool save_traces = 18;</code>
     */
    public boolean getSaveTraces() {
      return saveTraces_;
    }

    public static final int SHOW_HISTOGRAMS_FIELD_NUMBER = 19;
    private boolean showHistograms_;
    /**
     * <code>bool show_histograms = 19;</code>
     */
    public boolean getShowHistograms() {
      return showHistograms_;
    }

    public static final int SAVE_TRACE_DATA_FIELD_NUMBER = 20;
    private boolean saveTraceData_;
    /**
     * <code>bool save_trace_data = 20;</code>
     */
    public boolean getSaveTraceData() {
      return saveTraceData_;
    }

    public static final int TRACE_DATA_DIRECTORY_FIELD_NUMBER = 21;
    private volatile java.lang.Object traceDataDirectory_;
    /**
     * <code>string trace_data_directory = 21;</code>
     */
    public java.lang.String getTraceDataDirectory() {
      java.lang.Object ref = traceDataDirectory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceDataDirectory_ = s;
        return s;
      }
    }
    /**
     * <code>string trace_data_directory = 21;</code>
     */
    public com.google.protobuf.ByteString
        getTraceDataDirectoryBytes() {
      java.lang.Object ref = traceDataDirectory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceDataDirectory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HISTOGRAM_BINS_FIELD_NUMBER = 22;
    private int histogramBins_;
    /**
     * <code>int32 histogram_bins = 22;</code>
     */
    public int getHistogramBins() {
      return histogramBins_;
    }

    public static final int REMOVE_OUTLIERS_FIELD_NUMBER = 23;
    private boolean removeOutliers_;
    /**
     * <code>bool remove_outliers = 23;</code>
     */
    public boolean getRemoveOutliers() {
      return removeOutliers_;
    }

    public static final int REFIT_OPTION_FIELD_NUMBER = 24;
    private boolean refitOption_;
    /**
     * <code>bool refit_option = 24;</code>
     */
    public boolean getRefitOption() {
      return refitOption_;
    }

    public static final int MINIMUM_TRACE_LENGTH_FIELD_NUMBER = 25;
    private int minimumTraceLength_;
    /**
     * <pre>
     * Options for tracing diffusion
     * </pre>
     *
     * <code>int32 minimum_trace_length = 25;</code>
     */
    public int getMinimumTraceLength() {
      return minimumTraceLength_;
    }

    public static final int TRUNCATE_FIELD_NUMBER = 26;
    private boolean truncate_;
    /**
     * <code>bool truncate = 26;</code>
     */
    public boolean getTruncate() {
      return truncate_;
    }

    public static final int INTERNAL_DISTANCES_FIELD_NUMBER = 27;
    private boolean internalDistances_;
    /**
     * <code>bool internal_distances = 27;</code>
     */
    public boolean getInternalDistances() {
      return internalDistances_;
    }

    public static final int SUB_SAMPLED_DISTANCES_FIELD_NUMBER = 28;
    private boolean subSampledDistances_;
    /**
     * <code>bool sub_sampled_distances = 28;</code>
     */
    public boolean getSubSampledDistances() {
      return subSampledDistances_;
    }

    public static final int IGNORE_ENDS_FIELD_NUMBER = 29;
    private boolean ignoreEnds_;
    /**
     * <code>bool ignore_ends = 29;</code>
     */
    public boolean getIgnoreEnds() {
      return ignoreEnds_;
    }

    public static final int PRECISION_CORRECTION_FIELD_NUMBER = 30;
    private boolean precisionCorrection_;
    /**
     * <code>bool precision_correction = 30;</code>
     */
    public boolean getPrecisionCorrection() {
      return precisionCorrection_;
    }

    public static final int MSD_CORRECTION_FIELD_NUMBER = 31;
    private boolean msdCorrection_;
    /**
     * <code>bool msd_correction = 31;</code>
     */
    public boolean getMsdCorrection() {
      return msdCorrection_;
    }

    public static final int MLE_FIELD_NUMBER = 32;
    private boolean mle_;
    /**
     * <code>bool mle = 32;</code>
     */
    public boolean getMle() {
      return mle_;
    }

    public static final int FIT_LENGTH_FIELD_NUMBER = 33;
    private int fitLength_;
    /**
     * <code>int32 fit_length = 33;</code>
     */
    public int getFitLength() {
      return fitLength_;
    }

    public static final int FIT_RESTARTS_FIELD_NUMBER = 34;
    private int fitRestarts_;
    /**
     * <code>int32 fit_restarts = 34;</code>
     */
    public int getFitRestarts() {
      return fitRestarts_;
    }

    public static final int JUMP_DISTANCE_FIELD_NUMBER = 35;
    private int jumpDistance_;
    /**
     * <code>int32 jump_distance = 35;</code>
     */
    public int getJumpDistance() {
      return jumpDistance_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (distanceThreshold_ != 0D) {
        output.writeDouble(1, distanceThreshold_);
      }
      if (distanceExclusion_ != 0D) {
        output.writeDouble(2, distanceExclusion_);
      }
      if (timeThreshold_ != 0D) {
        output.writeDouble(3, timeThreshold_);
      }
      if (timeUnit_ != gdsc.smlm.data.config.UnitProtos.TimeUnit.TIME_UNIT_NA.getNumber()) {
        output.writeEnum(4, timeUnit_);
      }
      if (traceMode_ != 0) {
        output.writeInt32(5, traceMode_);
      }
      if (clusteringAlgorithm_ != 0) {
        output.writeInt32(6, clusteringAlgorithm_);
      }
      if (pulseInterval_ != 0) {
        output.writeInt32(7, pulseInterval_);
      }
      if (pulseWindow_ != 0) {
        output.writeInt32(8, pulseWindow_);
      }
      if (splitPulses_ != false) {
        output.writeBool(9, splitPulses_);
      }
      if (blinkingRate_ != 0D) {
        output.writeDouble(10, blinkingRate_);
      }
      if (optimise_ != false) {
        output.writeBool(11, optimise_);
      }
      if (minDistanceThreshold_ != 0D) {
        output.writeDouble(12, minDistanceThreshold_);
      }
      if (maxDistanceThreshold_ != 0D) {
        output.writeDouble(13, maxDistanceThreshold_);
      }
      if (minTimeThreshold_ != 0) {
        output.writeInt32(14, minTimeThreshold_);
      }
      if (maxTimeThreshold_ != 0) {
        output.writeInt32(15, maxTimeThreshold_);
      }
      if (optimiserSteps_ != 0) {
        output.writeInt32(16, optimiserSteps_);
      }
      if (optimiserPlot_ != 0) {
        output.writeInt32(17, optimiserPlot_);
      }
      if (saveTraces_ != false) {
        output.writeBool(18, saveTraces_);
      }
      if (showHistograms_ != false) {
        output.writeBool(19, showHistograms_);
      }
      if (saveTraceData_ != false) {
        output.writeBool(20, saveTraceData_);
      }
      if (!getTraceDataDirectoryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, traceDataDirectory_);
      }
      if (histogramBins_ != 0) {
        output.writeInt32(22, histogramBins_);
      }
      if (removeOutliers_ != false) {
        output.writeBool(23, removeOutliers_);
      }
      if (refitOption_ != false) {
        output.writeBool(24, refitOption_);
      }
      if (minimumTraceLength_ != 0) {
        output.writeInt32(25, minimumTraceLength_);
      }
      if (truncate_ != false) {
        output.writeBool(26, truncate_);
      }
      if (internalDistances_ != false) {
        output.writeBool(27, internalDistances_);
      }
      if (subSampledDistances_ != false) {
        output.writeBool(28, subSampledDistances_);
      }
      if (ignoreEnds_ != false) {
        output.writeBool(29, ignoreEnds_);
      }
      if (precisionCorrection_ != false) {
        output.writeBool(30, precisionCorrection_);
      }
      if (msdCorrection_ != false) {
        output.writeBool(31, msdCorrection_);
      }
      if (mle_ != false) {
        output.writeBool(32, mle_);
      }
      if (fitLength_ != 0) {
        output.writeInt32(33, fitLength_);
      }
      if (fitRestarts_ != 0) {
        output.writeInt32(34, fitRestarts_);
      }
      if (jumpDistance_ != 0) {
        output.writeInt32(35, jumpDistance_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (distanceThreshold_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, distanceThreshold_);
      }
      if (distanceExclusion_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, distanceExclusion_);
      }
      if (timeThreshold_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, timeThreshold_);
      }
      if (timeUnit_ != gdsc.smlm.data.config.UnitProtos.TimeUnit.TIME_UNIT_NA.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, timeUnit_);
      }
      if (traceMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, traceMode_);
      }
      if (clusteringAlgorithm_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, clusteringAlgorithm_);
      }
      if (pulseInterval_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pulseInterval_);
      }
      if (pulseWindow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, pulseWindow_);
      }
      if (splitPulses_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, splitPulses_);
      }
      if (blinkingRate_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, blinkingRate_);
      }
      if (optimise_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, optimise_);
      }
      if (minDistanceThreshold_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, minDistanceThreshold_);
      }
      if (maxDistanceThreshold_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, maxDistanceThreshold_);
      }
      if (minTimeThreshold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, minTimeThreshold_);
      }
      if (maxTimeThreshold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, maxTimeThreshold_);
      }
      if (optimiserSteps_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, optimiserSteps_);
      }
      if (optimiserPlot_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, optimiserPlot_);
      }
      if (saveTraces_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, saveTraces_);
      }
      if (showHistograms_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, showHistograms_);
      }
      if (saveTraceData_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, saveTraceData_);
      }
      if (!getTraceDataDirectoryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, traceDataDirectory_);
      }
      if (histogramBins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, histogramBins_);
      }
      if (removeOutliers_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, removeOutliers_);
      }
      if (refitOption_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, refitOption_);
      }
      if (minimumTraceLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, minimumTraceLength_);
      }
      if (truncate_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, truncate_);
      }
      if (internalDistances_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, internalDistances_);
      }
      if (subSampledDistances_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(28, subSampledDistances_);
      }
      if (ignoreEnds_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(29, ignoreEnds_);
      }
      if (precisionCorrection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(30, precisionCorrection_);
      }
      if (msdCorrection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(31, msdCorrection_);
      }
      if (mle_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(32, mle_);
      }
      if (fitLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, fitLength_);
      }
      if (fitRestarts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, fitRestarts_);
      }
      if (jumpDistance_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, jumpDistance_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.ClusteringSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.ClusteringSettings other = (gdsc.smlm.data.config.GUIProtos.ClusteringSettings) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getDistanceThreshold())
          == java.lang.Double.doubleToLongBits(
              other.getDistanceThreshold()));
      result = result && (
          java.lang.Double.doubleToLongBits(getDistanceExclusion())
          == java.lang.Double.doubleToLongBits(
              other.getDistanceExclusion()));
      result = result && (
          java.lang.Double.doubleToLongBits(getTimeThreshold())
          == java.lang.Double.doubleToLongBits(
              other.getTimeThreshold()));
      result = result && timeUnit_ == other.timeUnit_;
      result = result && (getTraceMode()
          == other.getTraceMode());
      result = result && (getClusteringAlgorithm()
          == other.getClusteringAlgorithm());
      result = result && (getPulseInterval()
          == other.getPulseInterval());
      result = result && (getPulseWindow()
          == other.getPulseWindow());
      result = result && (getSplitPulses()
          == other.getSplitPulses());
      result = result && (
          java.lang.Double.doubleToLongBits(getBlinkingRate())
          == java.lang.Double.doubleToLongBits(
              other.getBlinkingRate()));
      result = result && (getOptimise()
          == other.getOptimise());
      result = result && (
          java.lang.Double.doubleToLongBits(getMinDistanceThreshold())
          == java.lang.Double.doubleToLongBits(
              other.getMinDistanceThreshold()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxDistanceThreshold())
          == java.lang.Double.doubleToLongBits(
              other.getMaxDistanceThreshold()));
      result = result && (getMinTimeThreshold()
          == other.getMinTimeThreshold());
      result = result && (getMaxTimeThreshold()
          == other.getMaxTimeThreshold());
      result = result && (getOptimiserSteps()
          == other.getOptimiserSteps());
      result = result && (getOptimiserPlot()
          == other.getOptimiserPlot());
      result = result && (getSaveTraces()
          == other.getSaveTraces());
      result = result && (getShowHistograms()
          == other.getShowHistograms());
      result = result && (getSaveTraceData()
          == other.getSaveTraceData());
      result = result && getTraceDataDirectory()
          .equals(other.getTraceDataDirectory());
      result = result && (getHistogramBins()
          == other.getHistogramBins());
      result = result && (getRemoveOutliers()
          == other.getRemoveOutliers());
      result = result && (getRefitOption()
          == other.getRefitOption());
      result = result && (getMinimumTraceLength()
          == other.getMinimumTraceLength());
      result = result && (getTruncate()
          == other.getTruncate());
      result = result && (getInternalDistances()
          == other.getInternalDistances());
      result = result && (getSubSampledDistances()
          == other.getSubSampledDistances());
      result = result && (getIgnoreEnds()
          == other.getIgnoreEnds());
      result = result && (getPrecisionCorrection()
          == other.getPrecisionCorrection());
      result = result && (getMsdCorrection()
          == other.getMsdCorrection());
      result = result && (getMle()
          == other.getMle());
      result = result && (getFitLength()
          == other.getFitLength());
      result = result && (getFitRestarts()
          == other.getFitRestarts());
      result = result && (getJumpDistance()
          == other.getJumpDistance());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DISTANCE_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDistanceThreshold()));
      hash = (37 * hash) + DISTANCE_EXCLUSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDistanceExclusion()));
      hash = (37 * hash) + TIME_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTimeThreshold()));
      hash = (37 * hash) + TIME_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + timeUnit_;
      hash = (37 * hash) + TRACE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getTraceMode();
      hash = (37 * hash) + CLUSTERING_ALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + getClusteringAlgorithm();
      hash = (37 * hash) + PULSE_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getPulseInterval();
      hash = (37 * hash) + PULSE_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getPulseWindow();
      hash = (37 * hash) + SPLIT_PULSES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSplitPulses());
      hash = (37 * hash) + BLINKING_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBlinkingRate()));
      hash = (37 * hash) + OPTIMISE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOptimise());
      hash = (37 * hash) + MIN_DISTANCE_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinDistanceThreshold()));
      hash = (37 * hash) + MAX_DISTANCE_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxDistanceThreshold()));
      hash = (37 * hash) + MIN_TIME_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getMinTimeThreshold();
      hash = (37 * hash) + MAX_TIME_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getMaxTimeThreshold();
      hash = (37 * hash) + OPTIMISER_STEPS_FIELD_NUMBER;
      hash = (53 * hash) + getOptimiserSteps();
      hash = (37 * hash) + OPTIMISER_PLOT_FIELD_NUMBER;
      hash = (53 * hash) + getOptimiserPlot();
      hash = (37 * hash) + SAVE_TRACES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSaveTraces());
      hash = (37 * hash) + SHOW_HISTOGRAMS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShowHistograms());
      hash = (37 * hash) + SAVE_TRACE_DATA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSaveTraceData());
      hash = (37 * hash) + TRACE_DATA_DIRECTORY_FIELD_NUMBER;
      hash = (53 * hash) + getTraceDataDirectory().hashCode();
      hash = (37 * hash) + HISTOGRAM_BINS_FIELD_NUMBER;
      hash = (53 * hash) + getHistogramBins();
      hash = (37 * hash) + REMOVE_OUTLIERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRemoveOutliers());
      hash = (37 * hash) + REFIT_OPTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRefitOption());
      hash = (37 * hash) + MINIMUM_TRACE_LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getMinimumTraceLength();
      hash = (37 * hash) + TRUNCATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTruncate());
      hash = (37 * hash) + INTERNAL_DISTANCES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInternalDistances());
      hash = (37 * hash) + SUB_SAMPLED_DISTANCES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSubSampledDistances());
      hash = (37 * hash) + IGNORE_ENDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIgnoreEnds());
      hash = (37 * hash) + PRECISION_CORRECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPrecisionCorrection());
      hash = (37 * hash) + MSD_CORRECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMsdCorrection());
      hash = (37 * hash) + MLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMle());
      hash = (37 * hash) + FIT_LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getFitLength();
      hash = (37 * hash) + FIT_RESTARTS_FIELD_NUMBER;
      hash = (53 * hash) + getFitRestarts();
      hash = (37 * hash) + JUMP_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getJumpDistance();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.ClusteringSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the clustering algorithm
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.ClusteringSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.ClusteringSettings)
        gdsc.smlm.data.config.GUIProtos.ClusteringSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ClusteringSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ClusteringSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.ClusteringSettings.class, gdsc.smlm.data.config.GUIProtos.ClusteringSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.ClusteringSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        distanceThreshold_ = 0D;

        distanceExclusion_ = 0D;

        timeThreshold_ = 0D;

        timeUnit_ = 0;

        traceMode_ = 0;

        clusteringAlgorithm_ = 0;

        pulseInterval_ = 0;

        pulseWindow_ = 0;

        splitPulses_ = false;

        blinkingRate_ = 0D;

        optimise_ = false;

        minDistanceThreshold_ = 0D;

        maxDistanceThreshold_ = 0D;

        minTimeThreshold_ = 0;

        maxTimeThreshold_ = 0;

        optimiserSteps_ = 0;

        optimiserPlot_ = 0;

        saveTraces_ = false;

        showHistograms_ = false;

        saveTraceData_ = false;

        traceDataDirectory_ = "";

        histogramBins_ = 0;

        removeOutliers_ = false;

        refitOption_ = false;

        minimumTraceLength_ = 0;

        truncate_ = false;

        internalDistances_ = false;

        subSampledDistances_ = false;

        ignoreEnds_ = false;

        precisionCorrection_ = false;

        msdCorrection_ = false;

        mle_ = false;

        fitLength_ = 0;

        fitRestarts_ = 0;

        jumpDistance_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ClusteringSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.ClusteringSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.ClusteringSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.ClusteringSettings build() {
        gdsc.smlm.data.config.GUIProtos.ClusteringSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.ClusteringSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.ClusteringSettings result = new gdsc.smlm.data.config.GUIProtos.ClusteringSettings(this);
        result.distanceThreshold_ = distanceThreshold_;
        result.distanceExclusion_ = distanceExclusion_;
        result.timeThreshold_ = timeThreshold_;
        result.timeUnit_ = timeUnit_;
        result.traceMode_ = traceMode_;
        result.clusteringAlgorithm_ = clusteringAlgorithm_;
        result.pulseInterval_ = pulseInterval_;
        result.pulseWindow_ = pulseWindow_;
        result.splitPulses_ = splitPulses_;
        result.blinkingRate_ = blinkingRate_;
        result.optimise_ = optimise_;
        result.minDistanceThreshold_ = minDistanceThreshold_;
        result.maxDistanceThreshold_ = maxDistanceThreshold_;
        result.minTimeThreshold_ = minTimeThreshold_;
        result.maxTimeThreshold_ = maxTimeThreshold_;
        result.optimiserSteps_ = optimiserSteps_;
        result.optimiserPlot_ = optimiserPlot_;
        result.saveTraces_ = saveTraces_;
        result.showHistograms_ = showHistograms_;
        result.saveTraceData_ = saveTraceData_;
        result.traceDataDirectory_ = traceDataDirectory_;
        result.histogramBins_ = histogramBins_;
        result.removeOutliers_ = removeOutliers_;
        result.refitOption_ = refitOption_;
        result.minimumTraceLength_ = minimumTraceLength_;
        result.truncate_ = truncate_;
        result.internalDistances_ = internalDistances_;
        result.subSampledDistances_ = subSampledDistances_;
        result.ignoreEnds_ = ignoreEnds_;
        result.precisionCorrection_ = precisionCorrection_;
        result.msdCorrection_ = msdCorrection_;
        result.mle_ = mle_;
        result.fitLength_ = fitLength_;
        result.fitRestarts_ = fitRestarts_;
        result.jumpDistance_ = jumpDistance_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.ClusteringSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.ClusteringSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.ClusteringSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.ClusteringSettings.getDefaultInstance()) return this;
        if (other.getDistanceThreshold() != 0D) {
          setDistanceThreshold(other.getDistanceThreshold());
        }
        if (other.getDistanceExclusion() != 0D) {
          setDistanceExclusion(other.getDistanceExclusion());
        }
        if (other.getTimeThreshold() != 0D) {
          setTimeThreshold(other.getTimeThreshold());
        }
        if (other.timeUnit_ != 0) {
          setTimeUnitValue(other.getTimeUnitValue());
        }
        if (other.getTraceMode() != 0) {
          setTraceMode(other.getTraceMode());
        }
        if (other.getClusteringAlgorithm() != 0) {
          setClusteringAlgorithm(other.getClusteringAlgorithm());
        }
        if (other.getPulseInterval() != 0) {
          setPulseInterval(other.getPulseInterval());
        }
        if (other.getPulseWindow() != 0) {
          setPulseWindow(other.getPulseWindow());
        }
        if (other.getSplitPulses() != false) {
          setSplitPulses(other.getSplitPulses());
        }
        if (other.getBlinkingRate() != 0D) {
          setBlinkingRate(other.getBlinkingRate());
        }
        if (other.getOptimise() != false) {
          setOptimise(other.getOptimise());
        }
        if (other.getMinDistanceThreshold() != 0D) {
          setMinDistanceThreshold(other.getMinDistanceThreshold());
        }
        if (other.getMaxDistanceThreshold() != 0D) {
          setMaxDistanceThreshold(other.getMaxDistanceThreshold());
        }
        if (other.getMinTimeThreshold() != 0) {
          setMinTimeThreshold(other.getMinTimeThreshold());
        }
        if (other.getMaxTimeThreshold() != 0) {
          setMaxTimeThreshold(other.getMaxTimeThreshold());
        }
        if (other.getOptimiserSteps() != 0) {
          setOptimiserSteps(other.getOptimiserSteps());
        }
        if (other.getOptimiserPlot() != 0) {
          setOptimiserPlot(other.getOptimiserPlot());
        }
        if (other.getSaveTraces() != false) {
          setSaveTraces(other.getSaveTraces());
        }
        if (other.getShowHistograms() != false) {
          setShowHistograms(other.getShowHistograms());
        }
        if (other.getSaveTraceData() != false) {
          setSaveTraceData(other.getSaveTraceData());
        }
        if (!other.getTraceDataDirectory().isEmpty()) {
          traceDataDirectory_ = other.traceDataDirectory_;
          onChanged();
        }
        if (other.getHistogramBins() != 0) {
          setHistogramBins(other.getHistogramBins());
        }
        if (other.getRemoveOutliers() != false) {
          setRemoveOutliers(other.getRemoveOutliers());
        }
        if (other.getRefitOption() != false) {
          setRefitOption(other.getRefitOption());
        }
        if (other.getMinimumTraceLength() != 0) {
          setMinimumTraceLength(other.getMinimumTraceLength());
        }
        if (other.getTruncate() != false) {
          setTruncate(other.getTruncate());
        }
        if (other.getInternalDistances() != false) {
          setInternalDistances(other.getInternalDistances());
        }
        if (other.getSubSampledDistances() != false) {
          setSubSampledDistances(other.getSubSampledDistances());
        }
        if (other.getIgnoreEnds() != false) {
          setIgnoreEnds(other.getIgnoreEnds());
        }
        if (other.getPrecisionCorrection() != false) {
          setPrecisionCorrection(other.getPrecisionCorrection());
        }
        if (other.getMsdCorrection() != false) {
          setMsdCorrection(other.getMsdCorrection());
        }
        if (other.getMle() != false) {
          setMle(other.getMle());
        }
        if (other.getFitLength() != 0) {
          setFitLength(other.getFitLength());
        }
        if (other.getFitRestarts() != 0) {
          setFitRestarts(other.getFitRestarts());
        }
        if (other.getJumpDistance() != 0) {
          setJumpDistance(other.getJumpDistance());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.ClusteringSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.ClusteringSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double distanceThreshold_ ;
      /**
       * <code>double distance_threshold = 1;</code>
       */
      public double getDistanceThreshold() {
        return distanceThreshold_;
      }
      /**
       * <code>double distance_threshold = 1;</code>
       */
      public Builder setDistanceThreshold(double value) {
        
        distanceThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double distance_threshold = 1;</code>
       */
      public Builder clearDistanceThreshold() {
        
        distanceThreshold_ = 0D;
        onChanged();
        return this;
      }

      private double distanceExclusion_ ;
      /**
       * <code>double distance_exclusion = 2;</code>
       */
      public double getDistanceExclusion() {
        return distanceExclusion_;
      }
      /**
       * <code>double distance_exclusion = 2;</code>
       */
      public Builder setDistanceExclusion(double value) {
        
        distanceExclusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double distance_exclusion = 2;</code>
       */
      public Builder clearDistanceExclusion() {
        
        distanceExclusion_ = 0D;
        onChanged();
        return this;
      }

      private double timeThreshold_ ;
      /**
       * <code>double time_threshold = 3;</code>
       */
      public double getTimeThreshold() {
        return timeThreshold_;
      }
      /**
       * <code>double time_threshold = 3;</code>
       */
      public Builder setTimeThreshold(double value) {
        
        timeThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double time_threshold = 3;</code>
       */
      public Builder clearTimeThreshold() {
        
        timeThreshold_ = 0D;
        onChanged();
        return this;
      }

      private int timeUnit_ = 0;
      /**
       * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
       */
      public int getTimeUnitValue() {
        return timeUnit_;
      }
      /**
       * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
       */
      public Builder setTimeUnitValue(int value) {
        timeUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
       */
      public gdsc.smlm.data.config.UnitProtos.TimeUnit getTimeUnit() {
        gdsc.smlm.data.config.UnitProtos.TimeUnit result = gdsc.smlm.data.config.UnitProtos.TimeUnit.valueOf(timeUnit_);
        return result == null ? gdsc.smlm.data.config.UnitProtos.TimeUnit.UNRECOGNIZED : result;
      }
      /**
       * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
       */
      public Builder setTimeUnit(gdsc.smlm.data.config.UnitProtos.TimeUnit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        timeUnit_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.TimeUnit time_unit = 4;</code>
       */
      public Builder clearTimeUnit() {
        
        timeUnit_ = 0;
        onChanged();
        return this;
      }

      private int traceMode_ ;
      /**
       * <code>int32 trace_mode = 5;</code>
       */
      public int getTraceMode() {
        return traceMode_;
      }
      /**
       * <code>int32 trace_mode = 5;</code>
       */
      public Builder setTraceMode(int value) {
        
        traceMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 trace_mode = 5;</code>
       */
      public Builder clearTraceMode() {
        
        traceMode_ = 0;
        onChanged();
        return this;
      }

      private int clusteringAlgorithm_ ;
      /**
       * <code>int32 clustering_algorithm = 6;</code>
       */
      public int getClusteringAlgorithm() {
        return clusteringAlgorithm_;
      }
      /**
       * <code>int32 clustering_algorithm = 6;</code>
       */
      public Builder setClusteringAlgorithm(int value) {
        
        clusteringAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 clustering_algorithm = 6;</code>
       */
      public Builder clearClusteringAlgorithm() {
        
        clusteringAlgorithm_ = 0;
        onChanged();
        return this;
      }

      private int pulseInterval_ ;
      /**
       * <code>int32 pulse_interval = 7;</code>
       */
      public int getPulseInterval() {
        return pulseInterval_;
      }
      /**
       * <code>int32 pulse_interval = 7;</code>
       */
      public Builder setPulseInterval(int value) {
        
        pulseInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 pulse_interval = 7;</code>
       */
      public Builder clearPulseInterval() {
        
        pulseInterval_ = 0;
        onChanged();
        return this;
      }

      private int pulseWindow_ ;
      /**
       * <code>int32 pulse_window = 8;</code>
       */
      public int getPulseWindow() {
        return pulseWindow_;
      }
      /**
       * <code>int32 pulse_window = 8;</code>
       */
      public Builder setPulseWindow(int value) {
        
        pulseWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 pulse_window = 8;</code>
       */
      public Builder clearPulseWindow() {
        
        pulseWindow_ = 0;
        onChanged();
        return this;
      }

      private boolean splitPulses_ ;
      /**
       * <code>bool split_pulses = 9;</code>
       */
      public boolean getSplitPulses() {
        return splitPulses_;
      }
      /**
       * <code>bool split_pulses = 9;</code>
       */
      public Builder setSplitPulses(boolean value) {
        
        splitPulses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool split_pulses = 9;</code>
       */
      public Builder clearSplitPulses() {
        
        splitPulses_ = false;
        onChanged();
        return this;
      }

      private double blinkingRate_ ;
      /**
       * <code>double blinking_rate = 10;</code>
       */
      public double getBlinkingRate() {
        return blinkingRate_;
      }
      /**
       * <code>double blinking_rate = 10;</code>
       */
      public Builder setBlinkingRate(double value) {
        
        blinkingRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double blinking_rate = 10;</code>
       */
      public Builder clearBlinkingRate() {
        
        blinkingRate_ = 0D;
        onChanged();
        return this;
      }

      private boolean optimise_ ;
      /**
       * <code>bool optimise = 11;</code>
       */
      public boolean getOptimise() {
        return optimise_;
      }
      /**
       * <code>bool optimise = 11;</code>
       */
      public Builder setOptimise(boolean value) {
        
        optimise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool optimise = 11;</code>
       */
      public Builder clearOptimise() {
        
        optimise_ = false;
        onChanged();
        return this;
      }

      private double minDistanceThreshold_ ;
      /**
       * <code>double min_distance_threshold = 12;</code>
       */
      public double getMinDistanceThreshold() {
        return minDistanceThreshold_;
      }
      /**
       * <code>double min_distance_threshold = 12;</code>
       */
      public Builder setMinDistanceThreshold(double value) {
        
        minDistanceThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double min_distance_threshold = 12;</code>
       */
      public Builder clearMinDistanceThreshold() {
        
        minDistanceThreshold_ = 0D;
        onChanged();
        return this;
      }

      private double maxDistanceThreshold_ ;
      /**
       * <code>double max_distance_threshold = 13;</code>
       */
      public double getMaxDistanceThreshold() {
        return maxDistanceThreshold_;
      }
      /**
       * <code>double max_distance_threshold = 13;</code>
       */
      public Builder setMaxDistanceThreshold(double value) {
        
        maxDistanceThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double max_distance_threshold = 13;</code>
       */
      public Builder clearMaxDistanceThreshold() {
        
        maxDistanceThreshold_ = 0D;
        onChanged();
        return this;
      }

      private int minTimeThreshold_ ;
      /**
       * <pre>
       * The min time threshold for optimisation (time is in frames).
       * </pre>
       *
       * <code>int32 min_time_threshold = 14;</code>
       */
      public int getMinTimeThreshold() {
        return minTimeThreshold_;
      }
      /**
       * <pre>
       * The min time threshold for optimisation (time is in frames).
       * </pre>
       *
       * <code>int32 min_time_threshold = 14;</code>
       */
      public Builder setMinTimeThreshold(int value) {
        
        minTimeThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The min time threshold for optimisation (time is in frames).
       * </pre>
       *
       * <code>int32 min_time_threshold = 14;</code>
       */
      public Builder clearMinTimeThreshold() {
        
        minTimeThreshold_ = 0;
        onChanged();
        return this;
      }

      private int maxTimeThreshold_ ;
      /**
       * <pre>
       * The max time threshold for optimisation (time is in frames).
       * </pre>
       *
       * <code>int32 max_time_threshold = 15;</code>
       */
      public int getMaxTimeThreshold() {
        return maxTimeThreshold_;
      }
      /**
       * <pre>
       * The max time threshold for optimisation (time is in frames).
       * </pre>
       *
       * <code>int32 max_time_threshold = 15;</code>
       */
      public Builder setMaxTimeThreshold(int value) {
        
        maxTimeThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The max time threshold for optimisation (time is in frames).
       * </pre>
       *
       * <code>int32 max_time_threshold = 15;</code>
       */
      public Builder clearMaxTimeThreshold() {
        
        maxTimeThreshold_ = 0;
        onChanged();
        return this;
      }

      private int optimiserSteps_ ;
      /**
       * <code>int32 optimiser_steps = 16;</code>
       */
      public int getOptimiserSteps() {
        return optimiserSteps_;
      }
      /**
       * <code>int32 optimiser_steps = 16;</code>
       */
      public Builder setOptimiserSteps(int value) {
        
        optimiserSteps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 optimiser_steps = 16;</code>
       */
      public Builder clearOptimiserSteps() {
        
        optimiserSteps_ = 0;
        onChanged();
        return this;
      }

      private int optimiserPlot_ ;
      /**
       * <code>int32 optimiser_plot = 17;</code>
       */
      public int getOptimiserPlot() {
        return optimiserPlot_;
      }
      /**
       * <code>int32 optimiser_plot = 17;</code>
       */
      public Builder setOptimiserPlot(int value) {
        
        optimiserPlot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 optimiser_plot = 17;</code>
       */
      public Builder clearOptimiserPlot() {
        
        optimiserPlot_ = 0;
        onChanged();
        return this;
      }

      private boolean saveTraces_ ;
      /**
       * <code>bool save_traces = 18;</code>
       */
      public boolean getSaveTraces() {
        return saveTraces_;
      }
      /**
       * <code>bool save_traces = 18;</code>
       */
      public Builder setSaveTraces(boolean value) {
        
        saveTraces_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool save_traces = 18;</code>
       */
      public Builder clearSaveTraces() {
        
        saveTraces_ = false;
        onChanged();
        return this;
      }

      private boolean showHistograms_ ;
      /**
       * <code>bool show_histograms = 19;</code>
       */
      public boolean getShowHistograms() {
        return showHistograms_;
      }
      /**
       * <code>bool show_histograms = 19;</code>
       */
      public Builder setShowHistograms(boolean value) {
        
        showHistograms_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool show_histograms = 19;</code>
       */
      public Builder clearShowHistograms() {
        
        showHistograms_ = false;
        onChanged();
        return this;
      }

      private boolean saveTraceData_ ;
      /**
       * <code>bool save_trace_data = 20;</code>
       */
      public boolean getSaveTraceData() {
        return saveTraceData_;
      }
      /**
       * <code>bool save_trace_data = 20;</code>
       */
      public Builder setSaveTraceData(boolean value) {
        
        saveTraceData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool save_trace_data = 20;</code>
       */
      public Builder clearSaveTraceData() {
        
        saveTraceData_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object traceDataDirectory_ = "";
      /**
       * <code>string trace_data_directory = 21;</code>
       */
      public java.lang.String getTraceDataDirectory() {
        java.lang.Object ref = traceDataDirectory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          traceDataDirectory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string trace_data_directory = 21;</code>
       */
      public com.google.protobuf.ByteString
          getTraceDataDirectoryBytes() {
        java.lang.Object ref = traceDataDirectory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          traceDataDirectory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string trace_data_directory = 21;</code>
       */
      public Builder setTraceDataDirectory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        traceDataDirectory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string trace_data_directory = 21;</code>
       */
      public Builder clearTraceDataDirectory() {
        
        traceDataDirectory_ = getDefaultInstance().getTraceDataDirectory();
        onChanged();
        return this;
      }
      /**
       * <code>string trace_data_directory = 21;</code>
       */
      public Builder setTraceDataDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        traceDataDirectory_ = value;
        onChanged();
        return this;
      }

      private int histogramBins_ ;
      /**
       * <code>int32 histogram_bins = 22;</code>
       */
      public int getHistogramBins() {
        return histogramBins_;
      }
      /**
       * <code>int32 histogram_bins = 22;</code>
       */
      public Builder setHistogramBins(int value) {
        
        histogramBins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 histogram_bins = 22;</code>
       */
      public Builder clearHistogramBins() {
        
        histogramBins_ = 0;
        onChanged();
        return this;
      }

      private boolean removeOutliers_ ;
      /**
       * <code>bool remove_outliers = 23;</code>
       */
      public boolean getRemoveOutliers() {
        return removeOutliers_;
      }
      /**
       * <code>bool remove_outliers = 23;</code>
       */
      public Builder setRemoveOutliers(boolean value) {
        
        removeOutliers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool remove_outliers = 23;</code>
       */
      public Builder clearRemoveOutliers() {
        
        removeOutliers_ = false;
        onChanged();
        return this;
      }

      private boolean refitOption_ ;
      /**
       * <code>bool refit_option = 24;</code>
       */
      public boolean getRefitOption() {
        return refitOption_;
      }
      /**
       * <code>bool refit_option = 24;</code>
       */
      public Builder setRefitOption(boolean value) {
        
        refitOption_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool refit_option = 24;</code>
       */
      public Builder clearRefitOption() {
        
        refitOption_ = false;
        onChanged();
        return this;
      }

      private int minimumTraceLength_ ;
      /**
       * <pre>
       * Options for tracing diffusion
       * </pre>
       *
       * <code>int32 minimum_trace_length = 25;</code>
       */
      public int getMinimumTraceLength() {
        return minimumTraceLength_;
      }
      /**
       * <pre>
       * Options for tracing diffusion
       * </pre>
       *
       * <code>int32 minimum_trace_length = 25;</code>
       */
      public Builder setMinimumTraceLength(int value) {
        
        minimumTraceLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Options for tracing diffusion
       * </pre>
       *
       * <code>int32 minimum_trace_length = 25;</code>
       */
      public Builder clearMinimumTraceLength() {
        
        minimumTraceLength_ = 0;
        onChanged();
        return this;
      }

      private boolean truncate_ ;
      /**
       * <code>bool truncate = 26;</code>
       */
      public boolean getTruncate() {
        return truncate_;
      }
      /**
       * <code>bool truncate = 26;</code>
       */
      public Builder setTruncate(boolean value) {
        
        truncate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool truncate = 26;</code>
       */
      public Builder clearTruncate() {
        
        truncate_ = false;
        onChanged();
        return this;
      }

      private boolean internalDistances_ ;
      /**
       * <code>bool internal_distances = 27;</code>
       */
      public boolean getInternalDistances() {
        return internalDistances_;
      }
      /**
       * <code>bool internal_distances = 27;</code>
       */
      public Builder setInternalDistances(boolean value) {
        
        internalDistances_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool internal_distances = 27;</code>
       */
      public Builder clearInternalDistances() {
        
        internalDistances_ = false;
        onChanged();
        return this;
      }

      private boolean subSampledDistances_ ;
      /**
       * <code>bool sub_sampled_distances = 28;</code>
       */
      public boolean getSubSampledDistances() {
        return subSampledDistances_;
      }
      /**
       * <code>bool sub_sampled_distances = 28;</code>
       */
      public Builder setSubSampledDistances(boolean value) {
        
        subSampledDistances_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool sub_sampled_distances = 28;</code>
       */
      public Builder clearSubSampledDistances() {
        
        subSampledDistances_ = false;
        onChanged();
        return this;
      }

      private boolean ignoreEnds_ ;
      /**
       * <code>bool ignore_ends = 29;</code>
       */
      public boolean getIgnoreEnds() {
        return ignoreEnds_;
      }
      /**
       * <code>bool ignore_ends = 29;</code>
       */
      public Builder setIgnoreEnds(boolean value) {
        
        ignoreEnds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool ignore_ends = 29;</code>
       */
      public Builder clearIgnoreEnds() {
        
        ignoreEnds_ = false;
        onChanged();
        return this;
      }

      private boolean precisionCorrection_ ;
      /**
       * <code>bool precision_correction = 30;</code>
       */
      public boolean getPrecisionCorrection() {
        return precisionCorrection_;
      }
      /**
       * <code>bool precision_correction = 30;</code>
       */
      public Builder setPrecisionCorrection(boolean value) {
        
        precisionCorrection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool precision_correction = 30;</code>
       */
      public Builder clearPrecisionCorrection() {
        
        precisionCorrection_ = false;
        onChanged();
        return this;
      }

      private boolean msdCorrection_ ;
      /**
       * <code>bool msd_correction = 31;</code>
       */
      public boolean getMsdCorrection() {
        return msdCorrection_;
      }
      /**
       * <code>bool msd_correction = 31;</code>
       */
      public Builder setMsdCorrection(boolean value) {
        
        msdCorrection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool msd_correction = 31;</code>
       */
      public Builder clearMsdCorrection() {
        
        msdCorrection_ = false;
        onChanged();
        return this;
      }

      private boolean mle_ ;
      /**
       * <code>bool mle = 32;</code>
       */
      public boolean getMle() {
        return mle_;
      }
      /**
       * <code>bool mle = 32;</code>
       */
      public Builder setMle(boolean value) {
        
        mle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool mle = 32;</code>
       */
      public Builder clearMle() {
        
        mle_ = false;
        onChanged();
        return this;
      }

      private int fitLength_ ;
      /**
       * <code>int32 fit_length = 33;</code>
       */
      public int getFitLength() {
        return fitLength_;
      }
      /**
       * <code>int32 fit_length = 33;</code>
       */
      public Builder setFitLength(int value) {
        
        fitLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fit_length = 33;</code>
       */
      public Builder clearFitLength() {
        
        fitLength_ = 0;
        onChanged();
        return this;
      }

      private int fitRestarts_ ;
      /**
       * <code>int32 fit_restarts = 34;</code>
       */
      public int getFitRestarts() {
        return fitRestarts_;
      }
      /**
       * <code>int32 fit_restarts = 34;</code>
       */
      public Builder setFitRestarts(int value) {
        
        fitRestarts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fit_restarts = 34;</code>
       */
      public Builder clearFitRestarts() {
        
        fitRestarts_ = 0;
        onChanged();
        return this;
      }

      private int jumpDistance_ ;
      /**
       * <code>int32 jump_distance = 35;</code>
       */
      public int getJumpDistance() {
        return jumpDistance_;
      }
      /**
       * <code>int32 jump_distance = 35;</code>
       */
      public Builder setJumpDistance(int value) {
        
        jumpDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 jump_distance = 35;</code>
       */
      public Builder clearJumpDistance() {
        
        jumpDistance_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.ClusteringSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.ClusteringSettings)
    private static final gdsc.smlm.data.config.GUIProtos.ClusteringSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.ClusteringSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.ClusteringSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClusteringSettings>
        PARSER = new com.google.protobuf.AbstractParser<ClusteringSettings>() {
      public ClusteringSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ClusteringSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClusteringSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClusteringSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.ClusteringSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OpticsEventSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.OpticsEventSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool show_selection_table = 1;</code>
     */
    boolean getShowSelectionTable();

    /**
     * <code>bool table_create_selection = 2;</code>
     */
    boolean getTableCreateSelection();

    /**
     * <code>bool image_create_selection = 3;</code>
     */
    boolean getImageCreateSelection();

    /**
     * <code>bool plot_create_selection = 4;</code>
     */
    boolean getPlotCreateSelection();

    /**
     * <code>bool table_show_selection = 5;</code>
     */
    boolean getTableShowSelection();

    /**
     * <code>bool image_show_selection = 6;</code>
     */
    boolean getImageShowSelection();

    /**
     * <code>bool plot_show_selection = 7;</code>
     */
    boolean getPlotShowSelection();
  }
  /**
   * <pre>
   * Contains the settings for the events in the OPTICS GUI
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.OpticsEventSettings}
   */
  public  static final class OpticsEventSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.OpticsEventSettings)
      OpticsEventSettingsOrBuilder {
    // Use OpticsEventSettings.newBuilder() to construct.
    private OpticsEventSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OpticsEventSettings() {
      showSelectionTable_ = false;
      tableCreateSelection_ = false;
      imageCreateSelection_ = false;
      plotCreateSelection_ = false;
      tableShowSelection_ = false;
      imageShowSelection_ = false;
      plotShowSelection_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private OpticsEventSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              showSelectionTable_ = input.readBool();
              break;
            }
            case 16: {

              tableCreateSelection_ = input.readBool();
              break;
            }
            case 24: {

              imageCreateSelection_ = input.readBool();
              break;
            }
            case 32: {

              plotCreateSelection_ = input.readBool();
              break;
            }
            case 40: {

              tableShowSelection_ = input.readBool();
              break;
            }
            case 48: {

              imageShowSelection_ = input.readBool();
              break;
            }
            case 56: {

              plotShowSelection_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsEventSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsEventSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.class, gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder.class);
    }

    public static final int SHOW_SELECTION_TABLE_FIELD_NUMBER = 1;
    private boolean showSelectionTable_;
    /**
     * <code>bool show_selection_table = 1;</code>
     */
    public boolean getShowSelectionTable() {
      return showSelectionTable_;
    }

    public static final int TABLE_CREATE_SELECTION_FIELD_NUMBER = 2;
    private boolean tableCreateSelection_;
    /**
     * <code>bool table_create_selection = 2;</code>
     */
    public boolean getTableCreateSelection() {
      return tableCreateSelection_;
    }

    public static final int IMAGE_CREATE_SELECTION_FIELD_NUMBER = 3;
    private boolean imageCreateSelection_;
    /**
     * <code>bool image_create_selection = 3;</code>
     */
    public boolean getImageCreateSelection() {
      return imageCreateSelection_;
    }

    public static final int PLOT_CREATE_SELECTION_FIELD_NUMBER = 4;
    private boolean plotCreateSelection_;
    /**
     * <code>bool plot_create_selection = 4;</code>
     */
    public boolean getPlotCreateSelection() {
      return plotCreateSelection_;
    }

    public static final int TABLE_SHOW_SELECTION_FIELD_NUMBER = 5;
    private boolean tableShowSelection_;
    /**
     * <code>bool table_show_selection = 5;</code>
     */
    public boolean getTableShowSelection() {
      return tableShowSelection_;
    }

    public static final int IMAGE_SHOW_SELECTION_FIELD_NUMBER = 6;
    private boolean imageShowSelection_;
    /**
     * <code>bool image_show_selection = 6;</code>
     */
    public boolean getImageShowSelection() {
      return imageShowSelection_;
    }

    public static final int PLOT_SHOW_SELECTION_FIELD_NUMBER = 7;
    private boolean plotShowSelection_;
    /**
     * <code>bool plot_show_selection = 7;</code>
     */
    public boolean getPlotShowSelection() {
      return plotShowSelection_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (showSelectionTable_ != false) {
        output.writeBool(1, showSelectionTable_);
      }
      if (tableCreateSelection_ != false) {
        output.writeBool(2, tableCreateSelection_);
      }
      if (imageCreateSelection_ != false) {
        output.writeBool(3, imageCreateSelection_);
      }
      if (plotCreateSelection_ != false) {
        output.writeBool(4, plotCreateSelection_);
      }
      if (tableShowSelection_ != false) {
        output.writeBool(5, tableShowSelection_);
      }
      if (imageShowSelection_ != false) {
        output.writeBool(6, imageShowSelection_);
      }
      if (plotShowSelection_ != false) {
        output.writeBool(7, plotShowSelection_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (showSelectionTable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, showSelectionTable_);
      }
      if (tableCreateSelection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, tableCreateSelection_);
      }
      if (imageCreateSelection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, imageCreateSelection_);
      }
      if (plotCreateSelection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, plotCreateSelection_);
      }
      if (tableShowSelection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, tableShowSelection_);
      }
      if (imageShowSelection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, imageShowSelection_);
      }
      if (plotShowSelection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, plotShowSelection_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.OpticsEventSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.OpticsEventSettings other = (gdsc.smlm.data.config.GUIProtos.OpticsEventSettings) obj;

      boolean result = true;
      result = result && (getShowSelectionTable()
          == other.getShowSelectionTable());
      result = result && (getTableCreateSelection()
          == other.getTableCreateSelection());
      result = result && (getImageCreateSelection()
          == other.getImageCreateSelection());
      result = result && (getPlotCreateSelection()
          == other.getPlotCreateSelection());
      result = result && (getTableShowSelection()
          == other.getTableShowSelection());
      result = result && (getImageShowSelection()
          == other.getImageShowSelection());
      result = result && (getPlotShowSelection()
          == other.getPlotShowSelection());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SHOW_SELECTION_TABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShowSelectionTable());
      hash = (37 * hash) + TABLE_CREATE_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTableCreateSelection());
      hash = (37 * hash) + IMAGE_CREATE_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getImageCreateSelection());
      hash = (37 * hash) + PLOT_CREATE_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPlotCreateSelection());
      hash = (37 * hash) + TABLE_SHOW_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTableShowSelection());
      hash = (37 * hash) + IMAGE_SHOW_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getImageShowSelection());
      hash = (37 * hash) + PLOT_SHOW_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPlotShowSelection());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.OpticsEventSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains the settings for the events in the OPTICS GUI
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.OpticsEventSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.OpticsEventSettings)
        gdsc.smlm.data.config.GUIProtos.OpticsEventSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsEventSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsEventSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.class, gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        showSelectionTable_ = false;

        tableCreateSelection_ = false;

        imageCreateSelection_ = false;

        plotCreateSelection_ = false;

        tableShowSelection_ = false;

        imageShowSelection_ = false;

        plotShowSelection_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsEventSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.OpticsEventSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.OpticsEventSettings build() {
        gdsc.smlm.data.config.GUIProtos.OpticsEventSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.OpticsEventSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.OpticsEventSettings result = new gdsc.smlm.data.config.GUIProtos.OpticsEventSettings(this);
        result.showSelectionTable_ = showSelectionTable_;
        result.tableCreateSelection_ = tableCreateSelection_;
        result.imageCreateSelection_ = imageCreateSelection_;
        result.plotCreateSelection_ = plotCreateSelection_;
        result.tableShowSelection_ = tableShowSelection_;
        result.imageShowSelection_ = imageShowSelection_;
        result.plotShowSelection_ = plotShowSelection_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.OpticsEventSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.OpticsEventSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.OpticsEventSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.getDefaultInstance()) return this;
        if (other.getShowSelectionTable() != false) {
          setShowSelectionTable(other.getShowSelectionTable());
        }
        if (other.getTableCreateSelection() != false) {
          setTableCreateSelection(other.getTableCreateSelection());
        }
        if (other.getImageCreateSelection() != false) {
          setImageCreateSelection(other.getImageCreateSelection());
        }
        if (other.getPlotCreateSelection() != false) {
          setPlotCreateSelection(other.getPlotCreateSelection());
        }
        if (other.getTableShowSelection() != false) {
          setTableShowSelection(other.getTableShowSelection());
        }
        if (other.getImageShowSelection() != false) {
          setImageShowSelection(other.getImageShowSelection());
        }
        if (other.getPlotShowSelection() != false) {
          setPlotShowSelection(other.getPlotShowSelection());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.OpticsEventSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.OpticsEventSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean showSelectionTable_ ;
      /**
       * <code>bool show_selection_table = 1;</code>
       */
      public boolean getShowSelectionTable() {
        return showSelectionTable_;
      }
      /**
       * <code>bool show_selection_table = 1;</code>
       */
      public Builder setShowSelectionTable(boolean value) {
        
        showSelectionTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool show_selection_table = 1;</code>
       */
      public Builder clearShowSelectionTable() {
        
        showSelectionTable_ = false;
        onChanged();
        return this;
      }

      private boolean tableCreateSelection_ ;
      /**
       * <code>bool table_create_selection = 2;</code>
       */
      public boolean getTableCreateSelection() {
        return tableCreateSelection_;
      }
      /**
       * <code>bool table_create_selection = 2;</code>
       */
      public Builder setTableCreateSelection(boolean value) {
        
        tableCreateSelection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool table_create_selection = 2;</code>
       */
      public Builder clearTableCreateSelection() {
        
        tableCreateSelection_ = false;
        onChanged();
        return this;
      }

      private boolean imageCreateSelection_ ;
      /**
       * <code>bool image_create_selection = 3;</code>
       */
      public boolean getImageCreateSelection() {
        return imageCreateSelection_;
      }
      /**
       * <code>bool image_create_selection = 3;</code>
       */
      public Builder setImageCreateSelection(boolean value) {
        
        imageCreateSelection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool image_create_selection = 3;</code>
       */
      public Builder clearImageCreateSelection() {
        
        imageCreateSelection_ = false;
        onChanged();
        return this;
      }

      private boolean plotCreateSelection_ ;
      /**
       * <code>bool plot_create_selection = 4;</code>
       */
      public boolean getPlotCreateSelection() {
        return plotCreateSelection_;
      }
      /**
       * <code>bool plot_create_selection = 4;</code>
       */
      public Builder setPlotCreateSelection(boolean value) {
        
        plotCreateSelection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool plot_create_selection = 4;</code>
       */
      public Builder clearPlotCreateSelection() {
        
        plotCreateSelection_ = false;
        onChanged();
        return this;
      }

      private boolean tableShowSelection_ ;
      /**
       * <code>bool table_show_selection = 5;</code>
       */
      public boolean getTableShowSelection() {
        return tableShowSelection_;
      }
      /**
       * <code>bool table_show_selection = 5;</code>
       */
      public Builder setTableShowSelection(boolean value) {
        
        tableShowSelection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool table_show_selection = 5;</code>
       */
      public Builder clearTableShowSelection() {
        
        tableShowSelection_ = false;
        onChanged();
        return this;
      }

      private boolean imageShowSelection_ ;
      /**
       * <code>bool image_show_selection = 6;</code>
       */
      public boolean getImageShowSelection() {
        return imageShowSelection_;
      }
      /**
       * <code>bool image_show_selection = 6;</code>
       */
      public Builder setImageShowSelection(boolean value) {
        
        imageShowSelection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool image_show_selection = 6;</code>
       */
      public Builder clearImageShowSelection() {
        
        imageShowSelection_ = false;
        onChanged();
        return this;
      }

      private boolean plotShowSelection_ ;
      /**
       * <code>bool plot_show_selection = 7;</code>
       */
      public boolean getPlotShowSelection() {
        return plotShowSelection_;
      }
      /**
       * <code>bool plot_show_selection = 7;</code>
       */
      public Builder setPlotShowSelection(boolean value) {
        
        plotShowSelection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool plot_show_selection = 7;</code>
       */
      public Builder clearPlotShowSelection() {
        
        plotShowSelection_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.OpticsEventSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.OpticsEventSettings)
    private static final gdsc.smlm.data.config.GUIProtos.OpticsEventSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.OpticsEventSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.OpticsEventSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OpticsEventSettings>
        PARSER = new com.google.protobuf.AbstractParser<OpticsEventSettings>() {
      public OpticsEventSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new OpticsEventSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OpticsEventSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OpticsEventSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.OpticsEventSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OpticsSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.OpticsSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The input results dataset to use
     * </pre>
     *
     * <code>string input_option = 1;</code>
     */
    java.lang.String getInputOption();
    /**
     * <pre>
     * The input results dataset to use
     * </pre>
     *
     * <code>string input_option = 1;</code>
     */
    com.google.protobuf.ByteString
        getInputOptionBytes();

    /**
     * <pre>
     * The OPTICS algorithm to use.
     * </pre>
     *
     * <code>int32 optics_mode = 2;</code>
     */
    int getOpticsMode();

    /**
     * <pre>
     ** The number of splits to compute (if below 1 it will be auto-computed using the size of the data) 
     * </pre>
     *
     * <code>int32 number_of_split_sets = 3;</code>
     */
    int getNumberOfSplitSets();

    /**
     * <pre>
     * Set to true to use random vectors for the projections. The default is to uniformly create vectors on the
     * semi-circle interval.
     * </pre>
     *
     * <code>bool use_random_vectors = 4;</code>
     */
    boolean getUseRandomVectors();

    /**
     * <pre>
     * Set to true to save all sets that are approximately min split size. The default is to only save sets smaller than
     * min split size.
     * </pre>
     *
     * <code>bool save_approximate_sets = 5;</code>
     */
    boolean getSaveApproximateSets();

    /**
     * <pre>
     ** The sample mode. 
     * </pre>
     *
     * <code>int32 sample_mode = 6;</code>
     */
    int getSampleMode();

    /**
     * <pre>
     * The generating distance, i.e. the distance to search for neighbours of a point. Set to zero to auto-calibrate
     * using the expected density of uniformly spread random points.
     * </pre>
     *
     * <code>double generating_distance = 7;</code>
     */
    double getGeneratingDistance();

    /**
     * <pre>
     * The minimum number of neighbours to define a core point.
     * &lt;p&gt;
     * Note that the minimum cardinality (i.e. count of the number of neighbours) in the paper discussing Generalised
     * DBSCAN is recommended to be 2 x dimensions, so 4 for a 2D dataset.
     * </pre>
     *
     * <code>int32 min_points = 8;</code>
     */
    int getMinPoints();

    /**
     * <pre>
     * The clustering mode to use on the OPTICS results.
     * </pre>
     *
     * <code>int32 clustering_mode = 9;</code>
     */
    int getClusteringMode();

    /**
     * <pre>
     * The steepness parameter for the OPTICS hierarchical clustering algorithm using the reachability profile.
     * </pre>
     *
     * <code>double xi = 10;</code>
     */
    double getXi();

    /**
     * <pre>
     * Set to true to only show the top-level clusters, i.e. child clusters will be merged into their parents.
     * </pre>
     *
     * <code>bool topLevel = 11;</code>
     */
    boolean getTopLevel();

    /**
     * <pre>
     * The upper limit for reachability. The first and last reachable points within a cluster must have a
     * reachability equal or below the upper limit. This prevents creating clusters with points associated above the
     * upper limit.
     * </pre>
     *
     * <code>double upper_limit = 12;</code>
     */
    double getUpperLimit();

    /**
     * <pre>
     * The lower limit for reachability. The first and last reachable points within a cluster must have a reachability
     * equal or above the lower limit. This prevents creating clusters that are only associated below the lower limit.
     * </pre>
     *
     * <code>double lower_limit = 13;</code>
     */
    double getLowerLimit();

    /**
     * <pre>
     * The number of samples to take for the k-distance plot. This should be 1-10% of the data.
     * </pre>
     *
     * <code>int32 samples = 14;</code>
     */
    int getSamples();

    /**
     * <pre>
     * The fraction of the data to sample for the k-distance plot. Recommended to be 1-10%.
     * </pre>
     *
     * <code>double sample_fraction = 15;</code>
     */
    double getSampleFraction();

    /**
     * <pre>
     * The fraction of noise in the k-distance plot. The clustering distance is set as the next distance after noise has
     * been ignored.
     * </pre>
     *
     * <code>double fraction_noise = 16;</code>
     */
    double getFractionNoise();

    /**
     * <pre>
     * The clustering distance for DBSCAN.
     * </pre>
     *
     * <code>double clustering_distance = 17;</code>
     */
    double getClusteringDistance();

    /**
     * <pre>
     * Set to true to only include core point32 in clusters. Note: Non-core points can be assigned arbitrarily to clusters
     * if they are on the border of two clusters due to the arbitrary processing order of input points.
     * </pre>
     *
     * <code>bool core = 18;</code>
     */
    boolean getCore();

    /**
     * <pre>
     * The magnification scale of the output image
     * </pre>
     *
     * <code>double image_scale = 19;</code>
     */
    double getImageScale();

    /**
     * <pre>
     * The output image mode
     * </pre>
     *
     * <code>int32 image_mode = 20;</code>
     */
    int getImageMode();

    /**
     * <pre>
     * Set to true to weight the image data over nearest neighbour pixels
     * </pre>
     *
     * <code>bool weighted = 21;</code>
     */
    boolean getWeighted();

    /**
     * <pre>
     * Set to true to equalise the image histogram (allowing viewing high dynamic range data)
     * </pre>
     *
     * <code>bool equalised = 22;</code>
     */
    boolean getEqualised();

    /**
     * <pre>
     * The plot mode for the reachability distance profile
     * </pre>
     *
     * <code>int32 plot_mode = 23;</code>
     */
    int getPlotMode();

    /**
     * <pre>
     * The outline mode for the reachability distance profile
     * </pre>
     *
     * <code>int32 outline_mode = 24;</code>
     */
    int getOutlineMode();

    /**
     * <pre>
     * The spanningTree mode for the reachability distance profile
     * </pre>
     *
     * <code>int32 spanning_tree_mode = 25;</code>
     */
    int getSpanningTreeMode();

    /**
     * <pre>
     * The number of standard deviations to consider for density computation using Local Outlier Probability (LoOP).
     * Note that scores are monotonic with respect to Lambda so this value just effects the local contrast of outlier
     * scores, not the actual ranking of outliers.
     * </pre>
     *
     * <code>double lambda = 26;</code>
     */
    double getLambda();

    /**
     * <pre>
     * Set to true to show a table of cluster statistics
     * </pre>
     *
     * <code>bool show_table = 27;</code>
     */
    boolean getShowTable();

    /**
     * <pre>
     * The table sort mode
     * </pre>
     *
     * <code>int32 table_sort_mode = 28;</code>
     */
    int getTableSortMode();

    /**
     * <pre>
     * Reverse sort the table
     * </pre>
     *
     * <code>bool table_reverse_sort = 29;</code>
     */
    boolean getTableReverseSort();

    /**
     * <pre>
     * Event settings
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
     */
    boolean hasOpticsEventSettings();
    /**
     * <pre>
     * Event settings
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
     */
    gdsc.smlm.data.config.GUIProtos.OpticsEventSettings getOpticsEventSettings();
    /**
     * <pre>
     * Event settings
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
     */
    gdsc.smlm.data.config.GUIProtos.OpticsEventSettingsOrBuilder getOpticsEventSettingsOrBuilder();
  }
  /**
   * <pre>
   * Contain the settings for the OPTICS clustering algorithm
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.OpticsSettings}
   */
  public  static final class OpticsSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.OpticsSettings)
      OpticsSettingsOrBuilder {
    // Use OpticsSettings.newBuilder() to construct.
    private OpticsSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OpticsSettings() {
      inputOption_ = "";
      opticsMode_ = 0;
      numberOfSplitSets_ = 0;
      useRandomVectors_ = false;
      saveApproximateSets_ = false;
      sampleMode_ = 0;
      generatingDistance_ = 0D;
      minPoints_ = 0;
      clusteringMode_ = 0;
      xi_ = 0D;
      topLevel_ = false;
      upperLimit_ = 0D;
      lowerLimit_ = 0D;
      samples_ = 0;
      sampleFraction_ = 0D;
      fractionNoise_ = 0D;
      clusteringDistance_ = 0D;
      core_ = false;
      imageScale_ = 0D;
      imageMode_ = 0;
      weighted_ = false;
      equalised_ = false;
      plotMode_ = 0;
      outlineMode_ = 0;
      spanningTreeMode_ = 0;
      lambda_ = 0D;
      showTable_ = false;
      tableSortMode_ = 0;
      tableReverseSort_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private OpticsSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              inputOption_ = s;
              break;
            }
            case 16: {

              opticsMode_ = input.readInt32();
              break;
            }
            case 24: {

              numberOfSplitSets_ = input.readInt32();
              break;
            }
            case 32: {

              useRandomVectors_ = input.readBool();
              break;
            }
            case 40: {

              saveApproximateSets_ = input.readBool();
              break;
            }
            case 48: {

              sampleMode_ = input.readInt32();
              break;
            }
            case 57: {

              generatingDistance_ = input.readDouble();
              break;
            }
            case 64: {

              minPoints_ = input.readInt32();
              break;
            }
            case 72: {

              clusteringMode_ = input.readInt32();
              break;
            }
            case 81: {

              xi_ = input.readDouble();
              break;
            }
            case 88: {

              topLevel_ = input.readBool();
              break;
            }
            case 97: {

              upperLimit_ = input.readDouble();
              break;
            }
            case 105: {

              lowerLimit_ = input.readDouble();
              break;
            }
            case 112: {

              samples_ = input.readInt32();
              break;
            }
            case 121: {

              sampleFraction_ = input.readDouble();
              break;
            }
            case 129: {

              fractionNoise_ = input.readDouble();
              break;
            }
            case 137: {

              clusteringDistance_ = input.readDouble();
              break;
            }
            case 144: {

              core_ = input.readBool();
              break;
            }
            case 153: {

              imageScale_ = input.readDouble();
              break;
            }
            case 160: {

              imageMode_ = input.readInt32();
              break;
            }
            case 168: {

              weighted_ = input.readBool();
              break;
            }
            case 176: {

              equalised_ = input.readBool();
              break;
            }
            case 184: {

              plotMode_ = input.readInt32();
              break;
            }
            case 192: {

              outlineMode_ = input.readInt32();
              break;
            }
            case 200: {

              spanningTreeMode_ = input.readInt32();
              break;
            }
            case 209: {

              lambda_ = input.readDouble();
              break;
            }
            case 216: {

              showTable_ = input.readBool();
              break;
            }
            case 224: {

              tableSortMode_ = input.readInt32();
              break;
            }
            case 232: {

              tableReverseSort_ = input.readBool();
              break;
            }
            case 242: {
              gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder subBuilder = null;
              if (opticsEventSettings_ != null) {
                subBuilder = opticsEventSettings_.toBuilder();
              }
              opticsEventSettings_ = input.readMessage(gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(opticsEventSettings_);
                opticsEventSettings_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.OpticsSettings.class, gdsc.smlm.data.config.GUIProtos.OpticsSettings.Builder.class);
    }

    public static final int INPUT_OPTION_FIELD_NUMBER = 1;
    private volatile java.lang.Object inputOption_;
    /**
     * <pre>
     * The input results dataset to use
     * </pre>
     *
     * <code>string input_option = 1;</code>
     */
    public java.lang.String getInputOption() {
      java.lang.Object ref = inputOption_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inputOption_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The input results dataset to use
     * </pre>
     *
     * <code>string input_option = 1;</code>
     */
    public com.google.protobuf.ByteString
        getInputOptionBytes() {
      java.lang.Object ref = inputOption_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inputOption_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTICS_MODE_FIELD_NUMBER = 2;
    private int opticsMode_;
    /**
     * <pre>
     * The OPTICS algorithm to use.
     * </pre>
     *
     * <code>int32 optics_mode = 2;</code>
     */
    public int getOpticsMode() {
      return opticsMode_;
    }

    public static final int NUMBER_OF_SPLIT_SETS_FIELD_NUMBER = 3;
    private int numberOfSplitSets_;
    /**
     * <pre>
     ** The number of splits to compute (if below 1 it will be auto-computed using the size of the data) 
     * </pre>
     *
     * <code>int32 number_of_split_sets = 3;</code>
     */
    public int getNumberOfSplitSets() {
      return numberOfSplitSets_;
    }

    public static final int USE_RANDOM_VECTORS_FIELD_NUMBER = 4;
    private boolean useRandomVectors_;
    /**
     * <pre>
     * Set to true to use random vectors for the projections. The default is to uniformly create vectors on the
     * semi-circle interval.
     * </pre>
     *
     * <code>bool use_random_vectors = 4;</code>
     */
    public boolean getUseRandomVectors() {
      return useRandomVectors_;
    }

    public static final int SAVE_APPROXIMATE_SETS_FIELD_NUMBER = 5;
    private boolean saveApproximateSets_;
    /**
     * <pre>
     * Set to true to save all sets that are approximately min split size. The default is to only save sets smaller than
     * min split size.
     * </pre>
     *
     * <code>bool save_approximate_sets = 5;</code>
     */
    public boolean getSaveApproximateSets() {
      return saveApproximateSets_;
    }

    public static final int SAMPLE_MODE_FIELD_NUMBER = 6;
    private int sampleMode_;
    /**
     * <pre>
     ** The sample mode. 
     * </pre>
     *
     * <code>int32 sample_mode = 6;</code>
     */
    public int getSampleMode() {
      return sampleMode_;
    }

    public static final int GENERATING_DISTANCE_FIELD_NUMBER = 7;
    private double generatingDistance_;
    /**
     * <pre>
     * The generating distance, i.e. the distance to search for neighbours of a point. Set to zero to auto-calibrate
     * using the expected density of uniformly spread random points.
     * </pre>
     *
     * <code>double generating_distance = 7;</code>
     */
    public double getGeneratingDistance() {
      return generatingDistance_;
    }

    public static final int MIN_POINTS_FIELD_NUMBER = 8;
    private int minPoints_;
    /**
     * <pre>
     * The minimum number of neighbours to define a core point.
     * &lt;p&gt;
     * Note that the minimum cardinality (i.e. count of the number of neighbours) in the paper discussing Generalised
     * DBSCAN is recommended to be 2 x dimensions, so 4 for a 2D dataset.
     * </pre>
     *
     * <code>int32 min_points = 8;</code>
     */
    public int getMinPoints() {
      return minPoints_;
    }

    public static final int CLUSTERING_MODE_FIELD_NUMBER = 9;
    private int clusteringMode_;
    /**
     * <pre>
     * The clustering mode to use on the OPTICS results.
     * </pre>
     *
     * <code>int32 clustering_mode = 9;</code>
     */
    public int getClusteringMode() {
      return clusteringMode_;
    }

    public static final int XI_FIELD_NUMBER = 10;
    private double xi_;
    /**
     * <pre>
     * The steepness parameter for the OPTICS hierarchical clustering algorithm using the reachability profile.
     * </pre>
     *
     * <code>double xi = 10;</code>
     */
    public double getXi() {
      return xi_;
    }

    public static final int TOPLEVEL_FIELD_NUMBER = 11;
    private boolean topLevel_;
    /**
     * <pre>
     * Set to true to only show the top-level clusters, i.e. child clusters will be merged into their parents.
     * </pre>
     *
     * <code>bool topLevel = 11;</code>
     */
    public boolean getTopLevel() {
      return topLevel_;
    }

    public static final int UPPER_LIMIT_FIELD_NUMBER = 12;
    private double upperLimit_;
    /**
     * <pre>
     * The upper limit for reachability. The first and last reachable points within a cluster must have a
     * reachability equal or below the upper limit. This prevents creating clusters with points associated above the
     * upper limit.
     * </pre>
     *
     * <code>double upper_limit = 12;</code>
     */
    public double getUpperLimit() {
      return upperLimit_;
    }

    public static final int LOWER_LIMIT_FIELD_NUMBER = 13;
    private double lowerLimit_;
    /**
     * <pre>
     * The lower limit for reachability. The first and last reachable points within a cluster must have a reachability
     * equal or above the lower limit. This prevents creating clusters that are only associated below the lower limit.
     * </pre>
     *
     * <code>double lower_limit = 13;</code>
     */
    public double getLowerLimit() {
      return lowerLimit_;
    }

    public static final int SAMPLES_FIELD_NUMBER = 14;
    private int samples_;
    /**
     * <pre>
     * The number of samples to take for the k-distance plot. This should be 1-10% of the data.
     * </pre>
     *
     * <code>int32 samples = 14;</code>
     */
    public int getSamples() {
      return samples_;
    }

    public static final int SAMPLE_FRACTION_FIELD_NUMBER = 15;
    private double sampleFraction_;
    /**
     * <pre>
     * The fraction of the data to sample for the k-distance plot. Recommended to be 1-10%.
     * </pre>
     *
     * <code>double sample_fraction = 15;</code>
     */
    public double getSampleFraction() {
      return sampleFraction_;
    }

    public static final int FRACTION_NOISE_FIELD_NUMBER = 16;
    private double fractionNoise_;
    /**
     * <pre>
     * The fraction of noise in the k-distance plot. The clustering distance is set as the next distance after noise has
     * been ignored.
     * </pre>
     *
     * <code>double fraction_noise = 16;</code>
     */
    public double getFractionNoise() {
      return fractionNoise_;
    }

    public static final int CLUSTERING_DISTANCE_FIELD_NUMBER = 17;
    private double clusteringDistance_;
    /**
     * <pre>
     * The clustering distance for DBSCAN.
     * </pre>
     *
     * <code>double clustering_distance = 17;</code>
     */
    public double getClusteringDistance() {
      return clusteringDistance_;
    }

    public static final int CORE_FIELD_NUMBER = 18;
    private boolean core_;
    /**
     * <pre>
     * Set to true to only include core point32 in clusters. Note: Non-core points can be assigned arbitrarily to clusters
     * if they are on the border of two clusters due to the arbitrary processing order of input points.
     * </pre>
     *
     * <code>bool core = 18;</code>
     */
    public boolean getCore() {
      return core_;
    }

    public static final int IMAGE_SCALE_FIELD_NUMBER = 19;
    private double imageScale_;
    /**
     * <pre>
     * The magnification scale of the output image
     * </pre>
     *
     * <code>double image_scale = 19;</code>
     */
    public double getImageScale() {
      return imageScale_;
    }

    public static final int IMAGE_MODE_FIELD_NUMBER = 20;
    private int imageMode_;
    /**
     * <pre>
     * The output image mode
     * </pre>
     *
     * <code>int32 image_mode = 20;</code>
     */
    public int getImageMode() {
      return imageMode_;
    }

    public static final int WEIGHTED_FIELD_NUMBER = 21;
    private boolean weighted_;
    /**
     * <pre>
     * Set to true to weight the image data over nearest neighbour pixels
     * </pre>
     *
     * <code>bool weighted = 21;</code>
     */
    public boolean getWeighted() {
      return weighted_;
    }

    public static final int EQUALISED_FIELD_NUMBER = 22;
    private boolean equalised_;
    /**
     * <pre>
     * Set to true to equalise the image histogram (allowing viewing high dynamic range data)
     * </pre>
     *
     * <code>bool equalised = 22;</code>
     */
    public boolean getEqualised() {
      return equalised_;
    }

    public static final int PLOT_MODE_FIELD_NUMBER = 23;
    private int plotMode_;
    /**
     * <pre>
     * The plot mode for the reachability distance profile
     * </pre>
     *
     * <code>int32 plot_mode = 23;</code>
     */
    public int getPlotMode() {
      return plotMode_;
    }

    public static final int OUTLINE_MODE_FIELD_NUMBER = 24;
    private int outlineMode_;
    /**
     * <pre>
     * The outline mode for the reachability distance profile
     * </pre>
     *
     * <code>int32 outline_mode = 24;</code>
     */
    public int getOutlineMode() {
      return outlineMode_;
    }

    public static final int SPANNING_TREE_MODE_FIELD_NUMBER = 25;
    private int spanningTreeMode_;
    /**
     * <pre>
     * The spanningTree mode for the reachability distance profile
     * </pre>
     *
     * <code>int32 spanning_tree_mode = 25;</code>
     */
    public int getSpanningTreeMode() {
      return spanningTreeMode_;
    }

    public static final int LAMBDA_FIELD_NUMBER = 26;
    private double lambda_;
    /**
     * <pre>
     * The number of standard deviations to consider for density computation using Local Outlier Probability (LoOP).
     * Note that scores are monotonic with respect to Lambda so this value just effects the local contrast of outlier
     * scores, not the actual ranking of outliers.
     * </pre>
     *
     * <code>double lambda = 26;</code>
     */
    public double getLambda() {
      return lambda_;
    }

    public static final int SHOW_TABLE_FIELD_NUMBER = 27;
    private boolean showTable_;
    /**
     * <pre>
     * Set to true to show a table of cluster statistics
     * </pre>
     *
     * <code>bool show_table = 27;</code>
     */
    public boolean getShowTable() {
      return showTable_;
    }

    public static final int TABLE_SORT_MODE_FIELD_NUMBER = 28;
    private int tableSortMode_;
    /**
     * <pre>
     * The table sort mode
     * </pre>
     *
     * <code>int32 table_sort_mode = 28;</code>
     */
    public int getTableSortMode() {
      return tableSortMode_;
    }

    public static final int TABLE_REVERSE_SORT_FIELD_NUMBER = 29;
    private boolean tableReverseSort_;
    /**
     * <pre>
     * Reverse sort the table
     * </pre>
     *
     * <code>bool table_reverse_sort = 29;</code>
     */
    public boolean getTableReverseSort() {
      return tableReverseSort_;
    }

    public static final int OPTICS_EVENT_SETTINGS_FIELD_NUMBER = 30;
    private gdsc.smlm.data.config.GUIProtos.OpticsEventSettings opticsEventSettings_;
    /**
     * <pre>
     * Event settings
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
     */
    public boolean hasOpticsEventSettings() {
      return opticsEventSettings_ != null;
    }
    /**
     * <pre>
     * Event settings
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
     */
    public gdsc.smlm.data.config.GUIProtos.OpticsEventSettings getOpticsEventSettings() {
      return opticsEventSettings_ == null ? gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.getDefaultInstance() : opticsEventSettings_;
    }
    /**
     * <pre>
     * Event settings
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
     */
    public gdsc.smlm.data.config.GUIProtos.OpticsEventSettingsOrBuilder getOpticsEventSettingsOrBuilder() {
      return getOpticsEventSettings();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getInputOptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, inputOption_);
      }
      if (opticsMode_ != 0) {
        output.writeInt32(2, opticsMode_);
      }
      if (numberOfSplitSets_ != 0) {
        output.writeInt32(3, numberOfSplitSets_);
      }
      if (useRandomVectors_ != false) {
        output.writeBool(4, useRandomVectors_);
      }
      if (saveApproximateSets_ != false) {
        output.writeBool(5, saveApproximateSets_);
      }
      if (sampleMode_ != 0) {
        output.writeInt32(6, sampleMode_);
      }
      if (generatingDistance_ != 0D) {
        output.writeDouble(7, generatingDistance_);
      }
      if (minPoints_ != 0) {
        output.writeInt32(8, minPoints_);
      }
      if (clusteringMode_ != 0) {
        output.writeInt32(9, clusteringMode_);
      }
      if (xi_ != 0D) {
        output.writeDouble(10, xi_);
      }
      if (topLevel_ != false) {
        output.writeBool(11, topLevel_);
      }
      if (upperLimit_ != 0D) {
        output.writeDouble(12, upperLimit_);
      }
      if (lowerLimit_ != 0D) {
        output.writeDouble(13, lowerLimit_);
      }
      if (samples_ != 0) {
        output.writeInt32(14, samples_);
      }
      if (sampleFraction_ != 0D) {
        output.writeDouble(15, sampleFraction_);
      }
      if (fractionNoise_ != 0D) {
        output.writeDouble(16, fractionNoise_);
      }
      if (clusteringDistance_ != 0D) {
        output.writeDouble(17, clusteringDistance_);
      }
      if (core_ != false) {
        output.writeBool(18, core_);
      }
      if (imageScale_ != 0D) {
        output.writeDouble(19, imageScale_);
      }
      if (imageMode_ != 0) {
        output.writeInt32(20, imageMode_);
      }
      if (weighted_ != false) {
        output.writeBool(21, weighted_);
      }
      if (equalised_ != false) {
        output.writeBool(22, equalised_);
      }
      if (plotMode_ != 0) {
        output.writeInt32(23, plotMode_);
      }
      if (outlineMode_ != 0) {
        output.writeInt32(24, outlineMode_);
      }
      if (spanningTreeMode_ != 0) {
        output.writeInt32(25, spanningTreeMode_);
      }
      if (lambda_ != 0D) {
        output.writeDouble(26, lambda_);
      }
      if (showTable_ != false) {
        output.writeBool(27, showTable_);
      }
      if (tableSortMode_ != 0) {
        output.writeInt32(28, tableSortMode_);
      }
      if (tableReverseSort_ != false) {
        output.writeBool(29, tableReverseSort_);
      }
      if (opticsEventSettings_ != null) {
        output.writeMessage(30, getOpticsEventSettings());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getInputOptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, inputOption_);
      }
      if (opticsMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opticsMode_);
      }
      if (numberOfSplitSets_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numberOfSplitSets_);
      }
      if (useRandomVectors_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, useRandomVectors_);
      }
      if (saveApproximateSets_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, saveApproximateSets_);
      }
      if (sampleMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, sampleMode_);
      }
      if (generatingDistance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, generatingDistance_);
      }
      if (minPoints_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, minPoints_);
      }
      if (clusteringMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, clusteringMode_);
      }
      if (xi_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, xi_);
      }
      if (topLevel_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, topLevel_);
      }
      if (upperLimit_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, upperLimit_);
      }
      if (lowerLimit_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, lowerLimit_);
      }
      if (samples_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, samples_);
      }
      if (sampleFraction_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, sampleFraction_);
      }
      if (fractionNoise_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, fractionNoise_);
      }
      if (clusteringDistance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, clusteringDistance_);
      }
      if (core_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, core_);
      }
      if (imageScale_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(19, imageScale_);
      }
      if (imageMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, imageMode_);
      }
      if (weighted_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, weighted_);
      }
      if (equalised_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, equalised_);
      }
      if (plotMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, plotMode_);
      }
      if (outlineMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, outlineMode_);
      }
      if (spanningTreeMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, spanningTreeMode_);
      }
      if (lambda_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, lambda_);
      }
      if (showTable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, showTable_);
      }
      if (tableSortMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, tableSortMode_);
      }
      if (tableReverseSort_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(29, tableReverseSort_);
      }
      if (opticsEventSettings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getOpticsEventSettings());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.OpticsSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.OpticsSettings other = (gdsc.smlm.data.config.GUIProtos.OpticsSettings) obj;

      boolean result = true;
      result = result && getInputOption()
          .equals(other.getInputOption());
      result = result && (getOpticsMode()
          == other.getOpticsMode());
      result = result && (getNumberOfSplitSets()
          == other.getNumberOfSplitSets());
      result = result && (getUseRandomVectors()
          == other.getUseRandomVectors());
      result = result && (getSaveApproximateSets()
          == other.getSaveApproximateSets());
      result = result && (getSampleMode()
          == other.getSampleMode());
      result = result && (
          java.lang.Double.doubleToLongBits(getGeneratingDistance())
          == java.lang.Double.doubleToLongBits(
              other.getGeneratingDistance()));
      result = result && (getMinPoints()
          == other.getMinPoints());
      result = result && (getClusteringMode()
          == other.getClusteringMode());
      result = result && (
          java.lang.Double.doubleToLongBits(getXi())
          == java.lang.Double.doubleToLongBits(
              other.getXi()));
      result = result && (getTopLevel()
          == other.getTopLevel());
      result = result && (
          java.lang.Double.doubleToLongBits(getUpperLimit())
          == java.lang.Double.doubleToLongBits(
              other.getUpperLimit()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLowerLimit())
          == java.lang.Double.doubleToLongBits(
              other.getLowerLimit()));
      result = result && (getSamples()
          == other.getSamples());
      result = result && (
          java.lang.Double.doubleToLongBits(getSampleFraction())
          == java.lang.Double.doubleToLongBits(
              other.getSampleFraction()));
      result = result && (
          java.lang.Double.doubleToLongBits(getFractionNoise())
          == java.lang.Double.doubleToLongBits(
              other.getFractionNoise()));
      result = result && (
          java.lang.Double.doubleToLongBits(getClusteringDistance())
          == java.lang.Double.doubleToLongBits(
              other.getClusteringDistance()));
      result = result && (getCore()
          == other.getCore());
      result = result && (
          java.lang.Double.doubleToLongBits(getImageScale())
          == java.lang.Double.doubleToLongBits(
              other.getImageScale()));
      result = result && (getImageMode()
          == other.getImageMode());
      result = result && (getWeighted()
          == other.getWeighted());
      result = result && (getEqualised()
          == other.getEqualised());
      result = result && (getPlotMode()
          == other.getPlotMode());
      result = result && (getOutlineMode()
          == other.getOutlineMode());
      result = result && (getSpanningTreeMode()
          == other.getSpanningTreeMode());
      result = result && (
          java.lang.Double.doubleToLongBits(getLambda())
          == java.lang.Double.doubleToLongBits(
              other.getLambda()));
      result = result && (getShowTable()
          == other.getShowTable());
      result = result && (getTableSortMode()
          == other.getTableSortMode());
      result = result && (getTableReverseSort()
          == other.getTableReverseSort());
      result = result && (hasOpticsEventSettings() == other.hasOpticsEventSettings());
      if (hasOpticsEventSettings()) {
        result = result && getOpticsEventSettings()
            .equals(other.getOpticsEventSettings());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INPUT_OPTION_FIELD_NUMBER;
      hash = (53 * hash) + getInputOption().hashCode();
      hash = (37 * hash) + OPTICS_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getOpticsMode();
      hash = (37 * hash) + NUMBER_OF_SPLIT_SETS_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfSplitSets();
      hash = (37 * hash) + USE_RANDOM_VECTORS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUseRandomVectors());
      hash = (37 * hash) + SAVE_APPROXIMATE_SETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSaveApproximateSets());
      hash = (37 * hash) + SAMPLE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getSampleMode();
      hash = (37 * hash) + GENERATING_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getGeneratingDistance()));
      hash = (37 * hash) + MIN_POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getMinPoints();
      hash = (37 * hash) + CLUSTERING_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getClusteringMode();
      hash = (37 * hash) + XI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getXi()));
      hash = (37 * hash) + TOPLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTopLevel());
      hash = (37 * hash) + UPPER_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getUpperLimit()));
      hash = (37 * hash) + LOWER_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLowerLimit()));
      hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
      hash = (53 * hash) + getSamples();
      hash = (37 * hash) + SAMPLE_FRACTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSampleFraction()));
      hash = (37 * hash) + FRACTION_NOISE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFractionNoise()));
      hash = (37 * hash) + CLUSTERING_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClusteringDistance()));
      hash = (37 * hash) + CORE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCore());
      hash = (37 * hash) + IMAGE_SCALE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getImageScale()));
      hash = (37 * hash) + IMAGE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getImageMode();
      hash = (37 * hash) + WEIGHTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWeighted());
      hash = (37 * hash) + EQUALISED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEqualised());
      hash = (37 * hash) + PLOT_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getPlotMode();
      hash = (37 * hash) + OUTLINE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getOutlineMode();
      hash = (37 * hash) + SPANNING_TREE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getSpanningTreeMode();
      hash = (37 * hash) + LAMBDA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLambda()));
      hash = (37 * hash) + SHOW_TABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShowTable());
      hash = (37 * hash) + TABLE_SORT_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getTableSortMode();
      hash = (37 * hash) + TABLE_REVERSE_SORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTableReverseSort());
      if (hasOpticsEventSettings()) {
        hash = (37 * hash) + OPTICS_EVENT_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getOpticsEventSettings().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.OpticsSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contain the settings for the OPTICS clustering algorithm
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.OpticsSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.OpticsSettings)
        gdsc.smlm.data.config.GUIProtos.OpticsSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.OpticsSettings.class, gdsc.smlm.data.config.GUIProtos.OpticsSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.OpticsSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        inputOption_ = "";

        opticsMode_ = 0;

        numberOfSplitSets_ = 0;

        useRandomVectors_ = false;

        saveApproximateSets_ = false;

        sampleMode_ = 0;

        generatingDistance_ = 0D;

        minPoints_ = 0;

        clusteringMode_ = 0;

        xi_ = 0D;

        topLevel_ = false;

        upperLimit_ = 0D;

        lowerLimit_ = 0D;

        samples_ = 0;

        sampleFraction_ = 0D;

        fractionNoise_ = 0D;

        clusteringDistance_ = 0D;

        core_ = false;

        imageScale_ = 0D;

        imageMode_ = 0;

        weighted_ = false;

        equalised_ = false;

        plotMode_ = 0;

        outlineMode_ = 0;

        spanningTreeMode_ = 0;

        lambda_ = 0D;

        showTable_ = false;

        tableSortMode_ = 0;

        tableReverseSort_ = false;

        if (opticsEventSettingsBuilder_ == null) {
          opticsEventSettings_ = null;
        } else {
          opticsEventSettings_ = null;
          opticsEventSettingsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_OpticsSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.OpticsSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.OpticsSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.OpticsSettings build() {
        gdsc.smlm.data.config.GUIProtos.OpticsSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.OpticsSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.OpticsSettings result = new gdsc.smlm.data.config.GUIProtos.OpticsSettings(this);
        result.inputOption_ = inputOption_;
        result.opticsMode_ = opticsMode_;
        result.numberOfSplitSets_ = numberOfSplitSets_;
        result.useRandomVectors_ = useRandomVectors_;
        result.saveApproximateSets_ = saveApproximateSets_;
        result.sampleMode_ = sampleMode_;
        result.generatingDistance_ = generatingDistance_;
        result.minPoints_ = minPoints_;
        result.clusteringMode_ = clusteringMode_;
        result.xi_ = xi_;
        result.topLevel_ = topLevel_;
        result.upperLimit_ = upperLimit_;
        result.lowerLimit_ = lowerLimit_;
        result.samples_ = samples_;
        result.sampleFraction_ = sampleFraction_;
        result.fractionNoise_ = fractionNoise_;
        result.clusteringDistance_ = clusteringDistance_;
        result.core_ = core_;
        result.imageScale_ = imageScale_;
        result.imageMode_ = imageMode_;
        result.weighted_ = weighted_;
        result.equalised_ = equalised_;
        result.plotMode_ = plotMode_;
        result.outlineMode_ = outlineMode_;
        result.spanningTreeMode_ = spanningTreeMode_;
        result.lambda_ = lambda_;
        result.showTable_ = showTable_;
        result.tableSortMode_ = tableSortMode_;
        result.tableReverseSort_ = tableReverseSort_;
        if (opticsEventSettingsBuilder_ == null) {
          result.opticsEventSettings_ = opticsEventSettings_;
        } else {
          result.opticsEventSettings_ = opticsEventSettingsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.OpticsSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.OpticsSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.OpticsSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.OpticsSettings.getDefaultInstance()) return this;
        if (!other.getInputOption().isEmpty()) {
          inputOption_ = other.inputOption_;
          onChanged();
        }
        if (other.getOpticsMode() != 0) {
          setOpticsMode(other.getOpticsMode());
        }
        if (other.getNumberOfSplitSets() != 0) {
          setNumberOfSplitSets(other.getNumberOfSplitSets());
        }
        if (other.getUseRandomVectors() != false) {
          setUseRandomVectors(other.getUseRandomVectors());
        }
        if (other.getSaveApproximateSets() != false) {
          setSaveApproximateSets(other.getSaveApproximateSets());
        }
        if (other.getSampleMode() != 0) {
          setSampleMode(other.getSampleMode());
        }
        if (other.getGeneratingDistance() != 0D) {
          setGeneratingDistance(other.getGeneratingDistance());
        }
        if (other.getMinPoints() != 0) {
          setMinPoints(other.getMinPoints());
        }
        if (other.getClusteringMode() != 0) {
          setClusteringMode(other.getClusteringMode());
        }
        if (other.getXi() != 0D) {
          setXi(other.getXi());
        }
        if (other.getTopLevel() != false) {
          setTopLevel(other.getTopLevel());
        }
        if (other.getUpperLimit() != 0D) {
          setUpperLimit(other.getUpperLimit());
        }
        if (other.getLowerLimit() != 0D) {
          setLowerLimit(other.getLowerLimit());
        }
        if (other.getSamples() != 0) {
          setSamples(other.getSamples());
        }
        if (other.getSampleFraction() != 0D) {
          setSampleFraction(other.getSampleFraction());
        }
        if (other.getFractionNoise() != 0D) {
          setFractionNoise(other.getFractionNoise());
        }
        if (other.getClusteringDistance() != 0D) {
          setClusteringDistance(other.getClusteringDistance());
        }
        if (other.getCore() != false) {
          setCore(other.getCore());
        }
        if (other.getImageScale() != 0D) {
          setImageScale(other.getImageScale());
        }
        if (other.getImageMode() != 0) {
          setImageMode(other.getImageMode());
        }
        if (other.getWeighted() != false) {
          setWeighted(other.getWeighted());
        }
        if (other.getEqualised() != false) {
          setEqualised(other.getEqualised());
        }
        if (other.getPlotMode() != 0) {
          setPlotMode(other.getPlotMode());
        }
        if (other.getOutlineMode() != 0) {
          setOutlineMode(other.getOutlineMode());
        }
        if (other.getSpanningTreeMode() != 0) {
          setSpanningTreeMode(other.getSpanningTreeMode());
        }
        if (other.getLambda() != 0D) {
          setLambda(other.getLambda());
        }
        if (other.getShowTable() != false) {
          setShowTable(other.getShowTable());
        }
        if (other.getTableSortMode() != 0) {
          setTableSortMode(other.getTableSortMode());
        }
        if (other.getTableReverseSort() != false) {
          setTableReverseSort(other.getTableReverseSort());
        }
        if (other.hasOpticsEventSettings()) {
          mergeOpticsEventSettings(other.getOpticsEventSettings());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.OpticsSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.OpticsSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object inputOption_ = "";
      /**
       * <pre>
       * The input results dataset to use
       * </pre>
       *
       * <code>string input_option = 1;</code>
       */
      public java.lang.String getInputOption() {
        java.lang.Object ref = inputOption_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          inputOption_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The input results dataset to use
       * </pre>
       *
       * <code>string input_option = 1;</code>
       */
      public com.google.protobuf.ByteString
          getInputOptionBytes() {
        java.lang.Object ref = inputOption_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inputOption_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The input results dataset to use
       * </pre>
       *
       * <code>string input_option = 1;</code>
       */
      public Builder setInputOption(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        inputOption_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The input results dataset to use
       * </pre>
       *
       * <code>string input_option = 1;</code>
       */
      public Builder clearInputOption() {
        
        inputOption_ = getDefaultInstance().getInputOption();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The input results dataset to use
       * </pre>
       *
       * <code>string input_option = 1;</code>
       */
      public Builder setInputOptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        inputOption_ = value;
        onChanged();
        return this;
      }

      private int opticsMode_ ;
      /**
       * <pre>
       * The OPTICS algorithm to use.
       * </pre>
       *
       * <code>int32 optics_mode = 2;</code>
       */
      public int getOpticsMode() {
        return opticsMode_;
      }
      /**
       * <pre>
       * The OPTICS algorithm to use.
       * </pre>
       *
       * <code>int32 optics_mode = 2;</code>
       */
      public Builder setOpticsMode(int value) {
        
        opticsMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The OPTICS algorithm to use.
       * </pre>
       *
       * <code>int32 optics_mode = 2;</code>
       */
      public Builder clearOpticsMode() {
        
        opticsMode_ = 0;
        onChanged();
        return this;
      }

      private int numberOfSplitSets_ ;
      /**
       * <pre>
       ** The number of splits to compute (if below 1 it will be auto-computed using the size of the data) 
       * </pre>
       *
       * <code>int32 number_of_split_sets = 3;</code>
       */
      public int getNumberOfSplitSets() {
        return numberOfSplitSets_;
      }
      /**
       * <pre>
       ** The number of splits to compute (if below 1 it will be auto-computed using the size of the data) 
       * </pre>
       *
       * <code>int32 number_of_split_sets = 3;</code>
       */
      public Builder setNumberOfSplitSets(int value) {
        
        numberOfSplitSets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The number of splits to compute (if below 1 it will be auto-computed using the size of the data) 
       * </pre>
       *
       * <code>int32 number_of_split_sets = 3;</code>
       */
      public Builder clearNumberOfSplitSets() {
        
        numberOfSplitSets_ = 0;
        onChanged();
        return this;
      }

      private boolean useRandomVectors_ ;
      /**
       * <pre>
       * Set to true to use random vectors for the projections. The default is to uniformly create vectors on the
       * semi-circle interval.
       * </pre>
       *
       * <code>bool use_random_vectors = 4;</code>
       */
      public boolean getUseRandomVectors() {
        return useRandomVectors_;
      }
      /**
       * <pre>
       * Set to true to use random vectors for the projections. The default is to uniformly create vectors on the
       * semi-circle interval.
       * </pre>
       *
       * <code>bool use_random_vectors = 4;</code>
       */
      public Builder setUseRandomVectors(boolean value) {
        
        useRandomVectors_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to use random vectors for the projections. The default is to uniformly create vectors on the
       * semi-circle interval.
       * </pre>
       *
       * <code>bool use_random_vectors = 4;</code>
       */
      public Builder clearUseRandomVectors() {
        
        useRandomVectors_ = false;
        onChanged();
        return this;
      }

      private boolean saveApproximateSets_ ;
      /**
       * <pre>
       * Set to true to save all sets that are approximately min split size. The default is to only save sets smaller than
       * min split size.
       * </pre>
       *
       * <code>bool save_approximate_sets = 5;</code>
       */
      public boolean getSaveApproximateSets() {
        return saveApproximateSets_;
      }
      /**
       * <pre>
       * Set to true to save all sets that are approximately min split size. The default is to only save sets smaller than
       * min split size.
       * </pre>
       *
       * <code>bool save_approximate_sets = 5;</code>
       */
      public Builder setSaveApproximateSets(boolean value) {
        
        saveApproximateSets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to save all sets that are approximately min split size. The default is to only save sets smaller than
       * min split size.
       * </pre>
       *
       * <code>bool save_approximate_sets = 5;</code>
       */
      public Builder clearSaveApproximateSets() {
        
        saveApproximateSets_ = false;
        onChanged();
        return this;
      }

      private int sampleMode_ ;
      /**
       * <pre>
       ** The sample mode. 
       * </pre>
       *
       * <code>int32 sample_mode = 6;</code>
       */
      public int getSampleMode() {
        return sampleMode_;
      }
      /**
       * <pre>
       ** The sample mode. 
       * </pre>
       *
       * <code>int32 sample_mode = 6;</code>
       */
      public Builder setSampleMode(int value) {
        
        sampleMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The sample mode. 
       * </pre>
       *
       * <code>int32 sample_mode = 6;</code>
       */
      public Builder clearSampleMode() {
        
        sampleMode_ = 0;
        onChanged();
        return this;
      }

      private double generatingDistance_ ;
      /**
       * <pre>
       * The generating distance, i.e. the distance to search for neighbours of a point. Set to zero to auto-calibrate
       * using the expected density of uniformly spread random points.
       * </pre>
       *
       * <code>double generating_distance = 7;</code>
       */
      public double getGeneratingDistance() {
        return generatingDistance_;
      }
      /**
       * <pre>
       * The generating distance, i.e. the distance to search for neighbours of a point. Set to zero to auto-calibrate
       * using the expected density of uniformly spread random points.
       * </pre>
       *
       * <code>double generating_distance = 7;</code>
       */
      public Builder setGeneratingDistance(double value) {
        
        generatingDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The generating distance, i.e. the distance to search for neighbours of a point. Set to zero to auto-calibrate
       * using the expected density of uniformly spread random points.
       * </pre>
       *
       * <code>double generating_distance = 7;</code>
       */
      public Builder clearGeneratingDistance() {
        
        generatingDistance_ = 0D;
        onChanged();
        return this;
      }

      private int minPoints_ ;
      /**
       * <pre>
       * The minimum number of neighbours to define a core point.
       * &lt;p&gt;
       * Note that the minimum cardinality (i.e. count of the number of neighbours) in the paper discussing Generalised
       * DBSCAN is recommended to be 2 x dimensions, so 4 for a 2D dataset.
       * </pre>
       *
       * <code>int32 min_points = 8;</code>
       */
      public int getMinPoints() {
        return minPoints_;
      }
      /**
       * <pre>
       * The minimum number of neighbours to define a core point.
       * &lt;p&gt;
       * Note that the minimum cardinality (i.e. count of the number of neighbours) in the paper discussing Generalised
       * DBSCAN is recommended to be 2 x dimensions, so 4 for a 2D dataset.
       * </pre>
       *
       * <code>int32 min_points = 8;</code>
       */
      public Builder setMinPoints(int value) {
        
        minPoints_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The minimum number of neighbours to define a core point.
       * &lt;p&gt;
       * Note that the minimum cardinality (i.e. count of the number of neighbours) in the paper discussing Generalised
       * DBSCAN is recommended to be 2 x dimensions, so 4 for a 2D dataset.
       * </pre>
       *
       * <code>int32 min_points = 8;</code>
       */
      public Builder clearMinPoints() {
        
        minPoints_ = 0;
        onChanged();
        return this;
      }

      private int clusteringMode_ ;
      /**
       * <pre>
       * The clustering mode to use on the OPTICS results.
       * </pre>
       *
       * <code>int32 clustering_mode = 9;</code>
       */
      public int getClusteringMode() {
        return clusteringMode_;
      }
      /**
       * <pre>
       * The clustering mode to use on the OPTICS results.
       * </pre>
       *
       * <code>int32 clustering_mode = 9;</code>
       */
      public Builder setClusteringMode(int value) {
        
        clusteringMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The clustering mode to use on the OPTICS results.
       * </pre>
       *
       * <code>int32 clustering_mode = 9;</code>
       */
      public Builder clearClusteringMode() {
        
        clusteringMode_ = 0;
        onChanged();
        return this;
      }

      private double xi_ ;
      /**
       * <pre>
       * The steepness parameter for the OPTICS hierarchical clustering algorithm using the reachability profile.
       * </pre>
       *
       * <code>double xi = 10;</code>
       */
      public double getXi() {
        return xi_;
      }
      /**
       * <pre>
       * The steepness parameter for the OPTICS hierarchical clustering algorithm using the reachability profile.
       * </pre>
       *
       * <code>double xi = 10;</code>
       */
      public Builder setXi(double value) {
        
        xi_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The steepness parameter for the OPTICS hierarchical clustering algorithm using the reachability profile.
       * </pre>
       *
       * <code>double xi = 10;</code>
       */
      public Builder clearXi() {
        
        xi_ = 0D;
        onChanged();
        return this;
      }

      private boolean topLevel_ ;
      /**
       * <pre>
       * Set to true to only show the top-level clusters, i.e. child clusters will be merged into their parents.
       * </pre>
       *
       * <code>bool topLevel = 11;</code>
       */
      public boolean getTopLevel() {
        return topLevel_;
      }
      /**
       * <pre>
       * Set to true to only show the top-level clusters, i.e. child clusters will be merged into their parents.
       * </pre>
       *
       * <code>bool topLevel = 11;</code>
       */
      public Builder setTopLevel(boolean value) {
        
        topLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to only show the top-level clusters, i.e. child clusters will be merged into their parents.
       * </pre>
       *
       * <code>bool topLevel = 11;</code>
       */
      public Builder clearTopLevel() {
        
        topLevel_ = false;
        onChanged();
        return this;
      }

      private double upperLimit_ ;
      /**
       * <pre>
       * The upper limit for reachability. The first and last reachable points within a cluster must have a
       * reachability equal or below the upper limit. This prevents creating clusters with points associated above the
       * upper limit.
       * </pre>
       *
       * <code>double upper_limit = 12;</code>
       */
      public double getUpperLimit() {
        return upperLimit_;
      }
      /**
       * <pre>
       * The upper limit for reachability. The first and last reachable points within a cluster must have a
       * reachability equal or below the upper limit. This prevents creating clusters with points associated above the
       * upper limit.
       * </pre>
       *
       * <code>double upper_limit = 12;</code>
       */
      public Builder setUpperLimit(double value) {
        
        upperLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The upper limit for reachability. The first and last reachable points within a cluster must have a
       * reachability equal or below the upper limit. This prevents creating clusters with points associated above the
       * upper limit.
       * </pre>
       *
       * <code>double upper_limit = 12;</code>
       */
      public Builder clearUpperLimit() {
        
        upperLimit_ = 0D;
        onChanged();
        return this;
      }

      private double lowerLimit_ ;
      /**
       * <pre>
       * The lower limit for reachability. The first and last reachable points within a cluster must have a reachability
       * equal or above the lower limit. This prevents creating clusters that are only associated below the lower limit.
       * </pre>
       *
       * <code>double lower_limit = 13;</code>
       */
      public double getLowerLimit() {
        return lowerLimit_;
      }
      /**
       * <pre>
       * The lower limit for reachability. The first and last reachable points within a cluster must have a reachability
       * equal or above the lower limit. This prevents creating clusters that are only associated below the lower limit.
       * </pre>
       *
       * <code>double lower_limit = 13;</code>
       */
      public Builder setLowerLimit(double value) {
        
        lowerLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The lower limit for reachability. The first and last reachable points within a cluster must have a reachability
       * equal or above the lower limit. This prevents creating clusters that are only associated below the lower limit.
       * </pre>
       *
       * <code>double lower_limit = 13;</code>
       */
      public Builder clearLowerLimit() {
        
        lowerLimit_ = 0D;
        onChanged();
        return this;
      }

      private int samples_ ;
      /**
       * <pre>
       * The number of samples to take for the k-distance plot. This should be 1-10% of the data.
       * </pre>
       *
       * <code>int32 samples = 14;</code>
       */
      public int getSamples() {
        return samples_;
      }
      /**
       * <pre>
       * The number of samples to take for the k-distance plot. This should be 1-10% of the data.
       * </pre>
       *
       * <code>int32 samples = 14;</code>
       */
      public Builder setSamples(int value) {
        
        samples_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of samples to take for the k-distance plot. This should be 1-10% of the data.
       * </pre>
       *
       * <code>int32 samples = 14;</code>
       */
      public Builder clearSamples() {
        
        samples_ = 0;
        onChanged();
        return this;
      }

      private double sampleFraction_ ;
      /**
       * <pre>
       * The fraction of the data to sample for the k-distance plot. Recommended to be 1-10%.
       * </pre>
       *
       * <code>double sample_fraction = 15;</code>
       */
      public double getSampleFraction() {
        return sampleFraction_;
      }
      /**
       * <pre>
       * The fraction of the data to sample for the k-distance plot. Recommended to be 1-10%.
       * </pre>
       *
       * <code>double sample_fraction = 15;</code>
       */
      public Builder setSampleFraction(double value) {
        
        sampleFraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The fraction of the data to sample for the k-distance plot. Recommended to be 1-10%.
       * </pre>
       *
       * <code>double sample_fraction = 15;</code>
       */
      public Builder clearSampleFraction() {
        
        sampleFraction_ = 0D;
        onChanged();
        return this;
      }

      private double fractionNoise_ ;
      /**
       * <pre>
       * The fraction of noise in the k-distance plot. The clustering distance is set as the next distance after noise has
       * been ignored.
       * </pre>
       *
       * <code>double fraction_noise = 16;</code>
       */
      public double getFractionNoise() {
        return fractionNoise_;
      }
      /**
       * <pre>
       * The fraction of noise in the k-distance plot. The clustering distance is set as the next distance after noise has
       * been ignored.
       * </pre>
       *
       * <code>double fraction_noise = 16;</code>
       */
      public Builder setFractionNoise(double value) {
        
        fractionNoise_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The fraction of noise in the k-distance plot. The clustering distance is set as the next distance after noise has
       * been ignored.
       * </pre>
       *
       * <code>double fraction_noise = 16;</code>
       */
      public Builder clearFractionNoise() {
        
        fractionNoise_ = 0D;
        onChanged();
        return this;
      }

      private double clusteringDistance_ ;
      /**
       * <pre>
       * The clustering distance for DBSCAN.
       * </pre>
       *
       * <code>double clustering_distance = 17;</code>
       */
      public double getClusteringDistance() {
        return clusteringDistance_;
      }
      /**
       * <pre>
       * The clustering distance for DBSCAN.
       * </pre>
       *
       * <code>double clustering_distance = 17;</code>
       */
      public Builder setClusteringDistance(double value) {
        
        clusteringDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The clustering distance for DBSCAN.
       * </pre>
       *
       * <code>double clustering_distance = 17;</code>
       */
      public Builder clearClusteringDistance() {
        
        clusteringDistance_ = 0D;
        onChanged();
        return this;
      }

      private boolean core_ ;
      /**
       * <pre>
       * Set to true to only include core point32 in clusters. Note: Non-core points can be assigned arbitrarily to clusters
       * if they are on the border of two clusters due to the arbitrary processing order of input points.
       * </pre>
       *
       * <code>bool core = 18;</code>
       */
      public boolean getCore() {
        return core_;
      }
      /**
       * <pre>
       * Set to true to only include core point32 in clusters. Note: Non-core points can be assigned arbitrarily to clusters
       * if they are on the border of two clusters due to the arbitrary processing order of input points.
       * </pre>
       *
       * <code>bool core = 18;</code>
       */
      public Builder setCore(boolean value) {
        
        core_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to only include core point32 in clusters. Note: Non-core points can be assigned arbitrarily to clusters
       * if they are on the border of two clusters due to the arbitrary processing order of input points.
       * </pre>
       *
       * <code>bool core = 18;</code>
       */
      public Builder clearCore() {
        
        core_ = false;
        onChanged();
        return this;
      }

      private double imageScale_ ;
      /**
       * <pre>
       * The magnification scale of the output image
       * </pre>
       *
       * <code>double image_scale = 19;</code>
       */
      public double getImageScale() {
        return imageScale_;
      }
      /**
       * <pre>
       * The magnification scale of the output image
       * </pre>
       *
       * <code>double image_scale = 19;</code>
       */
      public Builder setImageScale(double value) {
        
        imageScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The magnification scale of the output image
       * </pre>
       *
       * <code>double image_scale = 19;</code>
       */
      public Builder clearImageScale() {
        
        imageScale_ = 0D;
        onChanged();
        return this;
      }

      private int imageMode_ ;
      /**
       * <pre>
       * The output image mode
       * </pre>
       *
       * <code>int32 image_mode = 20;</code>
       */
      public int getImageMode() {
        return imageMode_;
      }
      /**
       * <pre>
       * The output image mode
       * </pre>
       *
       * <code>int32 image_mode = 20;</code>
       */
      public Builder setImageMode(int value) {
        
        imageMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The output image mode
       * </pre>
       *
       * <code>int32 image_mode = 20;</code>
       */
      public Builder clearImageMode() {
        
        imageMode_ = 0;
        onChanged();
        return this;
      }

      private boolean weighted_ ;
      /**
       * <pre>
       * Set to true to weight the image data over nearest neighbour pixels
       * </pre>
       *
       * <code>bool weighted = 21;</code>
       */
      public boolean getWeighted() {
        return weighted_;
      }
      /**
       * <pre>
       * Set to true to weight the image data over nearest neighbour pixels
       * </pre>
       *
       * <code>bool weighted = 21;</code>
       */
      public Builder setWeighted(boolean value) {
        
        weighted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to weight the image data over nearest neighbour pixels
       * </pre>
       *
       * <code>bool weighted = 21;</code>
       */
      public Builder clearWeighted() {
        
        weighted_ = false;
        onChanged();
        return this;
      }

      private boolean equalised_ ;
      /**
       * <pre>
       * Set to true to equalise the image histogram (allowing viewing high dynamic range data)
       * </pre>
       *
       * <code>bool equalised = 22;</code>
       */
      public boolean getEqualised() {
        return equalised_;
      }
      /**
       * <pre>
       * Set to true to equalise the image histogram (allowing viewing high dynamic range data)
       * </pre>
       *
       * <code>bool equalised = 22;</code>
       */
      public Builder setEqualised(boolean value) {
        
        equalised_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to equalise the image histogram (allowing viewing high dynamic range data)
       * </pre>
       *
       * <code>bool equalised = 22;</code>
       */
      public Builder clearEqualised() {
        
        equalised_ = false;
        onChanged();
        return this;
      }

      private int plotMode_ ;
      /**
       * <pre>
       * The plot mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 plot_mode = 23;</code>
       */
      public int getPlotMode() {
        return plotMode_;
      }
      /**
       * <pre>
       * The plot mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 plot_mode = 23;</code>
       */
      public Builder setPlotMode(int value) {
        
        plotMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The plot mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 plot_mode = 23;</code>
       */
      public Builder clearPlotMode() {
        
        plotMode_ = 0;
        onChanged();
        return this;
      }

      private int outlineMode_ ;
      /**
       * <pre>
       * The outline mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 outline_mode = 24;</code>
       */
      public int getOutlineMode() {
        return outlineMode_;
      }
      /**
       * <pre>
       * The outline mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 outline_mode = 24;</code>
       */
      public Builder setOutlineMode(int value) {
        
        outlineMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The outline mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 outline_mode = 24;</code>
       */
      public Builder clearOutlineMode() {
        
        outlineMode_ = 0;
        onChanged();
        return this;
      }

      private int spanningTreeMode_ ;
      /**
       * <pre>
       * The spanningTree mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 spanning_tree_mode = 25;</code>
       */
      public int getSpanningTreeMode() {
        return spanningTreeMode_;
      }
      /**
       * <pre>
       * The spanningTree mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 spanning_tree_mode = 25;</code>
       */
      public Builder setSpanningTreeMode(int value) {
        
        spanningTreeMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The spanningTree mode for the reachability distance profile
       * </pre>
       *
       * <code>int32 spanning_tree_mode = 25;</code>
       */
      public Builder clearSpanningTreeMode() {
        
        spanningTreeMode_ = 0;
        onChanged();
        return this;
      }

      private double lambda_ ;
      /**
       * <pre>
       * The number of standard deviations to consider for density computation using Local Outlier Probability (LoOP).
       * Note that scores are monotonic with respect to Lambda so this value just effects the local contrast of outlier
       * scores, not the actual ranking of outliers.
       * </pre>
       *
       * <code>double lambda = 26;</code>
       */
      public double getLambda() {
        return lambda_;
      }
      /**
       * <pre>
       * The number of standard deviations to consider for density computation using Local Outlier Probability (LoOP).
       * Note that scores are monotonic with respect to Lambda so this value just effects the local contrast of outlier
       * scores, not the actual ranking of outliers.
       * </pre>
       *
       * <code>double lambda = 26;</code>
       */
      public Builder setLambda(double value) {
        
        lambda_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of standard deviations to consider for density computation using Local Outlier Probability (LoOP).
       * Note that scores are monotonic with respect to Lambda so this value just effects the local contrast of outlier
       * scores, not the actual ranking of outliers.
       * </pre>
       *
       * <code>double lambda = 26;</code>
       */
      public Builder clearLambda() {
        
        lambda_ = 0D;
        onChanged();
        return this;
      }

      private boolean showTable_ ;
      /**
       * <pre>
       * Set to true to show a table of cluster statistics
       * </pre>
       *
       * <code>bool show_table = 27;</code>
       */
      public boolean getShowTable() {
        return showTable_;
      }
      /**
       * <pre>
       * Set to true to show a table of cluster statistics
       * </pre>
       *
       * <code>bool show_table = 27;</code>
       */
      public Builder setShowTable(boolean value) {
        
        showTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to show a table of cluster statistics
       * </pre>
       *
       * <code>bool show_table = 27;</code>
       */
      public Builder clearShowTable() {
        
        showTable_ = false;
        onChanged();
        return this;
      }

      private int tableSortMode_ ;
      /**
       * <pre>
       * The table sort mode
       * </pre>
       *
       * <code>int32 table_sort_mode = 28;</code>
       */
      public int getTableSortMode() {
        return tableSortMode_;
      }
      /**
       * <pre>
       * The table sort mode
       * </pre>
       *
       * <code>int32 table_sort_mode = 28;</code>
       */
      public Builder setTableSortMode(int value) {
        
        tableSortMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The table sort mode
       * </pre>
       *
       * <code>int32 table_sort_mode = 28;</code>
       */
      public Builder clearTableSortMode() {
        
        tableSortMode_ = 0;
        onChanged();
        return this;
      }

      private boolean tableReverseSort_ ;
      /**
       * <pre>
       * Reverse sort the table
       * </pre>
       *
       * <code>bool table_reverse_sort = 29;</code>
       */
      public boolean getTableReverseSort() {
        return tableReverseSort_;
      }
      /**
       * <pre>
       * Reverse sort the table
       * </pre>
       *
       * <code>bool table_reverse_sort = 29;</code>
       */
      public Builder setTableReverseSort(boolean value) {
        
        tableReverseSort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reverse sort the table
       * </pre>
       *
       * <code>bool table_reverse_sort = 29;</code>
       */
      public Builder clearTableReverseSort() {
        
        tableReverseSort_ = false;
        onChanged();
        return this;
      }

      private gdsc.smlm.data.config.GUIProtos.OpticsEventSettings opticsEventSettings_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.GUIProtos.OpticsEventSettings, gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder, gdsc.smlm.data.config.GUIProtos.OpticsEventSettingsOrBuilder> opticsEventSettingsBuilder_;
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public boolean hasOpticsEventSettings() {
        return opticsEventSettingsBuilder_ != null || opticsEventSettings_ != null;
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.OpticsEventSettings getOpticsEventSettings() {
        if (opticsEventSettingsBuilder_ == null) {
          return opticsEventSettings_ == null ? gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.getDefaultInstance() : opticsEventSettings_;
        } else {
          return opticsEventSettingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public Builder setOpticsEventSettings(gdsc.smlm.data.config.GUIProtos.OpticsEventSettings value) {
        if (opticsEventSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opticsEventSettings_ = value;
          onChanged();
        } else {
          opticsEventSettingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public Builder setOpticsEventSettings(
          gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder builderForValue) {
        if (opticsEventSettingsBuilder_ == null) {
          opticsEventSettings_ = builderForValue.build();
          onChanged();
        } else {
          opticsEventSettingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public Builder mergeOpticsEventSettings(gdsc.smlm.data.config.GUIProtos.OpticsEventSettings value) {
        if (opticsEventSettingsBuilder_ == null) {
          if (opticsEventSettings_ != null) {
            opticsEventSettings_ =
              gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.newBuilder(opticsEventSettings_).mergeFrom(value).buildPartial();
          } else {
            opticsEventSettings_ = value;
          }
          onChanged();
        } else {
          opticsEventSettingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public Builder clearOpticsEventSettings() {
        if (opticsEventSettingsBuilder_ == null) {
          opticsEventSettings_ = null;
          onChanged();
        } else {
          opticsEventSettings_ = null;
          opticsEventSettingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder getOpticsEventSettingsBuilder() {
        
        onChanged();
        return getOpticsEventSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.OpticsEventSettingsOrBuilder getOpticsEventSettingsOrBuilder() {
        if (opticsEventSettingsBuilder_ != null) {
          return opticsEventSettingsBuilder_.getMessageOrBuilder();
        } else {
          return opticsEventSettings_ == null ?
              gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.getDefaultInstance() : opticsEventSettings_;
        }
      }
      /**
       * <pre>
       * Event settings
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.OpticsEventSettings optics_event_settings = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.GUIProtos.OpticsEventSettings, gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder, gdsc.smlm.data.config.GUIProtos.OpticsEventSettingsOrBuilder> 
          getOpticsEventSettingsFieldBuilder() {
        if (opticsEventSettingsBuilder_ == null) {
          opticsEventSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gdsc.smlm.data.config.GUIProtos.OpticsEventSettings, gdsc.smlm.data.config.GUIProtos.OpticsEventSettings.Builder, gdsc.smlm.data.config.GUIProtos.OpticsEventSettingsOrBuilder>(
                  getOpticsEventSettings(),
                  getParentForChildren(),
                  isClean());
          opticsEventSettings_ = null;
        }
        return opticsEventSettingsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.OpticsSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.OpticsSettings)
    private static final gdsc.smlm.data.config.GUIProtos.OpticsSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.OpticsSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.OpticsSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OpticsSettings>
        PARSER = new com.google.protobuf.AbstractParser<OpticsSettings>() {
      public OpticsSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new OpticsSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OpticsSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OpticsSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.OpticsSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DefaultTemplateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.DefaultTemplate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
     */
    int getTemplateTypeValue();
    /**
     * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
     */
    gdsc.smlm.data.config.GUIProtos.TemplateType getTemplateType();

    /**
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string filename = 3;</code>
     */
    java.lang.String getFilename();
    /**
     * <code>string filename = 3;</code>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <code>string tif_filename = 4;</code>
     */
    java.lang.String getTifFilename();
    /**
     * <code>string tif_filename = 4;</code>
     */
    com.google.protobuf.ByteString
        getTifFilenameBytes();
  }
  /**
   * <pre>
   * Contains settings for a default template
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.DefaultTemplate}
   */
  public  static final class DefaultTemplate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.DefaultTemplate)
      DefaultTemplateOrBuilder {
    // Use DefaultTemplate.newBuilder() to construct.
    private DefaultTemplate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DefaultTemplate() {
      templateType_ = 0;
      name_ = "";
      filename_ = "";
      tifFilename_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DefaultTemplate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              templateType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              filename_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              tifFilename_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.DefaultTemplate.class, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder.class);
    }

    public static final int TEMPLATE_TYPE_FIELD_NUMBER = 1;
    private int templateType_;
    /**
     * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
     */
    public int getTemplateTypeValue() {
      return templateType_;
    }
    /**
     * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
     */
    public gdsc.smlm.data.config.GUIProtos.TemplateType getTemplateType() {
      gdsc.smlm.data.config.GUIProtos.TemplateType result = gdsc.smlm.data.config.GUIProtos.TemplateType.valueOf(templateType_);
      return result == null ? gdsc.smlm.data.config.GUIProtos.TemplateType.UNRECOGNIZED : result;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object filename_;
    /**
     * <code>string filename = 3;</code>
     */
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filename_ = s;
        return s;
      }
    }
    /**
     * <code>string filename = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIF_FILENAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object tifFilename_;
    /**
     * <code>string tif_filename = 4;</code>
     */
    public java.lang.String getTifFilename() {
      java.lang.Object ref = tifFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tifFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string tif_filename = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTifFilenameBytes() {
      java.lang.Object ref = tifFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tifFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (templateType_ != gdsc.smlm.data.config.GUIProtos.TemplateType.INLINE_TEMPLATE.getNumber()) {
        output.writeEnum(1, templateType_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filename_);
      }
      if (!getTifFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, tifFilename_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (templateType_ != gdsc.smlm.data.config.GUIProtos.TemplateType.INLINE_TEMPLATE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, templateType_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filename_);
      }
      if (!getTifFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, tifFilename_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.DefaultTemplate)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.DefaultTemplate other = (gdsc.smlm.data.config.GUIProtos.DefaultTemplate) obj;

      boolean result = true;
      result = result && templateType_ == other.templateType_;
      result = result && getName()
          .equals(other.getName());
      result = result && getFilename()
          .equals(other.getFilename());
      result = result && getTifFilename()
          .equals(other.getTifFilename());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEMPLATE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + templateType_;
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFilename().hashCode();
      hash = (37 * hash) + TIF_FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getTifFilename().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.DefaultTemplate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains settings for a default template
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.DefaultTemplate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.DefaultTemplate)
        gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.DefaultTemplate.class, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.DefaultTemplate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        templateType_ = 0;

        name_ = "";

        filename_ = "";

        tifFilename_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplate_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.DefaultTemplate getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.DefaultTemplate.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.DefaultTemplate build() {
        gdsc.smlm.data.config.GUIProtos.DefaultTemplate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.DefaultTemplate buildPartial() {
        gdsc.smlm.data.config.GUIProtos.DefaultTemplate result = new gdsc.smlm.data.config.GUIProtos.DefaultTemplate(this);
        result.templateType_ = templateType_;
        result.name_ = name_;
        result.filename_ = filename_;
        result.tifFilename_ = tifFilename_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.DefaultTemplate) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.DefaultTemplate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.DefaultTemplate other) {
        if (other == gdsc.smlm.data.config.GUIProtos.DefaultTemplate.getDefaultInstance()) return this;
        if (other.templateType_ != 0) {
          setTemplateTypeValue(other.getTemplateTypeValue());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getFilename().isEmpty()) {
          filename_ = other.filename_;
          onChanged();
        }
        if (!other.getTifFilename().isEmpty()) {
          tifFilename_ = other.tifFilename_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.DefaultTemplate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.DefaultTemplate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int templateType_ = 0;
      /**
       * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
       */
      public int getTemplateTypeValue() {
        return templateType_;
      }
      /**
       * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
       */
      public Builder setTemplateTypeValue(int value) {
        templateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.TemplateType getTemplateType() {
        gdsc.smlm.data.config.GUIProtos.TemplateType result = gdsc.smlm.data.config.GUIProtos.TemplateType.valueOf(templateType_);
        return result == null ? gdsc.smlm.data.config.GUIProtos.TemplateType.UNRECOGNIZED : result;
      }
      /**
       * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
       */
      public Builder setTemplateType(gdsc.smlm.data.config.GUIProtos.TemplateType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        templateType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.TemplateType template_type = 1;</code>
       */
      public Builder clearTemplateType() {
        
        templateType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filename_ = "";
      /**
       * <code>string filename = 3;</code>
       */
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filename = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filename = 3;</code>
       */
      public Builder setFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filename = 3;</code>
       */
      public Builder clearFilename() {
        
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string filename = 3;</code>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filename_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tifFilename_ = "";
      /**
       * <code>string tif_filename = 4;</code>
       */
      public java.lang.String getTifFilename() {
        java.lang.Object ref = tifFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tifFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string tif_filename = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTifFilenameBytes() {
        java.lang.Object ref = tifFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tifFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string tif_filename = 4;</code>
       */
      public Builder setTifFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tifFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string tif_filename = 4;</code>
       */
      public Builder clearTifFilename() {
        
        tifFilename_ = getDefaultInstance().getTifFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string tif_filename = 4;</code>
       */
      public Builder setTifFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tifFilename_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.DefaultTemplate)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.DefaultTemplate)
    private static final gdsc.smlm.data.config.GUIProtos.DefaultTemplate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.DefaultTemplate();
    }

    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DefaultTemplate>
        PARSER = new com.google.protobuf.AbstractParser<DefaultTemplate>() {
      public DefaultTemplate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DefaultTemplate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DefaultTemplate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DefaultTemplate> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.DefaultTemplate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DefaultTemplateSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.DefaultTemplateSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    java.util.List<gdsc.smlm.data.config.GUIProtos.DefaultTemplate> 
        getDefaultTemplatesList();
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    gdsc.smlm.data.config.GUIProtos.DefaultTemplate getDefaultTemplates(int index);
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    int getDefaultTemplatesCount();
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    java.util.List<? extends gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder> 
        getDefaultTemplatesOrBuilderList();
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder getDefaultTemplatesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Contains the default templates
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.DefaultTemplateSettings}
   */
  public  static final class DefaultTemplateSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.DefaultTemplateSettings)
      DefaultTemplateSettingsOrBuilder {
    // Use DefaultTemplateSettings.newBuilder() to construct.
    private DefaultTemplateSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DefaultTemplateSettings() {
      defaultTemplates_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DefaultTemplateSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                defaultTemplates_ = new java.util.ArrayList<gdsc.smlm.data.config.GUIProtos.DefaultTemplate>();
                mutable_bitField0_ |= 0x00000001;
              }
              defaultTemplates_.add(
                  input.readMessage(gdsc.smlm.data.config.GUIProtos.DefaultTemplate.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          defaultTemplates_ = java.util.Collections.unmodifiableList(defaultTemplates_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings.class, gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings.Builder.class);
    }

    public static final int DEFAULT_TEMPLATES_FIELD_NUMBER = 1;
    private java.util.List<gdsc.smlm.data.config.GUIProtos.DefaultTemplate> defaultTemplates_;
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    public java.util.List<gdsc.smlm.data.config.GUIProtos.DefaultTemplate> getDefaultTemplatesList() {
      return defaultTemplates_;
    }
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    public java.util.List<? extends gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder> 
        getDefaultTemplatesOrBuilderList() {
      return defaultTemplates_;
    }
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    public int getDefaultTemplatesCount() {
      return defaultTemplates_.size();
    }
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    public gdsc.smlm.data.config.GUIProtos.DefaultTemplate getDefaultTemplates(int index) {
      return defaultTemplates_.get(index);
    }
    /**
     * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
     */
    public gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder getDefaultTemplatesOrBuilder(
        int index) {
      return defaultTemplates_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < defaultTemplates_.size(); i++) {
        output.writeMessage(1, defaultTemplates_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < defaultTemplates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, defaultTemplates_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings other = (gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings) obj;

      boolean result = true;
      result = result && getDefaultTemplatesList()
          .equals(other.getDefaultTemplatesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDefaultTemplatesCount() > 0) {
        hash = (37 * hash) + DEFAULT_TEMPLATES_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultTemplatesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains the default templates
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.DefaultTemplateSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.DefaultTemplateSettings)
        gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings.class, gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDefaultTemplatesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (defaultTemplatesBuilder_ == null) {
          defaultTemplates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          defaultTemplatesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings build() {
        gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings result = new gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings(this);
        int from_bitField0_ = bitField0_;
        if (defaultTemplatesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            defaultTemplates_ = java.util.Collections.unmodifiableList(defaultTemplates_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.defaultTemplates_ = defaultTemplates_;
        } else {
          result.defaultTemplates_ = defaultTemplatesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings.getDefaultInstance()) return this;
        if (defaultTemplatesBuilder_ == null) {
          if (!other.defaultTemplates_.isEmpty()) {
            if (defaultTemplates_.isEmpty()) {
              defaultTemplates_ = other.defaultTemplates_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDefaultTemplatesIsMutable();
              defaultTemplates_.addAll(other.defaultTemplates_);
            }
            onChanged();
          }
        } else {
          if (!other.defaultTemplates_.isEmpty()) {
            if (defaultTemplatesBuilder_.isEmpty()) {
              defaultTemplatesBuilder_.dispose();
              defaultTemplatesBuilder_ = null;
              defaultTemplates_ = other.defaultTemplates_;
              bitField0_ = (bitField0_ & ~0x00000001);
              defaultTemplatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDefaultTemplatesFieldBuilder() : null;
            } else {
              defaultTemplatesBuilder_.addAllMessages(other.defaultTemplates_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<gdsc.smlm.data.config.GUIProtos.DefaultTemplate> defaultTemplates_ =
        java.util.Collections.emptyList();
      private void ensureDefaultTemplatesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          defaultTemplates_ = new java.util.ArrayList<gdsc.smlm.data.config.GUIProtos.DefaultTemplate>(defaultTemplates_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gdsc.smlm.data.config.GUIProtos.DefaultTemplate, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder, gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder> defaultTemplatesBuilder_;

      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public java.util.List<gdsc.smlm.data.config.GUIProtos.DefaultTemplate> getDefaultTemplatesList() {
        if (defaultTemplatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(defaultTemplates_);
        } else {
          return defaultTemplatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public int getDefaultTemplatesCount() {
        if (defaultTemplatesBuilder_ == null) {
          return defaultTemplates_.size();
        } else {
          return defaultTemplatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.DefaultTemplate getDefaultTemplates(int index) {
        if (defaultTemplatesBuilder_ == null) {
          return defaultTemplates_.get(index);
        } else {
          return defaultTemplatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder setDefaultTemplates(
          int index, gdsc.smlm.data.config.GUIProtos.DefaultTemplate value) {
        if (defaultTemplatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefaultTemplatesIsMutable();
          defaultTemplates_.set(index, value);
          onChanged();
        } else {
          defaultTemplatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder setDefaultTemplates(
          int index, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder builderForValue) {
        if (defaultTemplatesBuilder_ == null) {
          ensureDefaultTemplatesIsMutable();
          defaultTemplates_.set(index, builderForValue.build());
          onChanged();
        } else {
          defaultTemplatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder addDefaultTemplates(gdsc.smlm.data.config.GUIProtos.DefaultTemplate value) {
        if (defaultTemplatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefaultTemplatesIsMutable();
          defaultTemplates_.add(value);
          onChanged();
        } else {
          defaultTemplatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder addDefaultTemplates(
          int index, gdsc.smlm.data.config.GUIProtos.DefaultTemplate value) {
        if (defaultTemplatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefaultTemplatesIsMutable();
          defaultTemplates_.add(index, value);
          onChanged();
        } else {
          defaultTemplatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder addDefaultTemplates(
          gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder builderForValue) {
        if (defaultTemplatesBuilder_ == null) {
          ensureDefaultTemplatesIsMutable();
          defaultTemplates_.add(builderForValue.build());
          onChanged();
        } else {
          defaultTemplatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder addDefaultTemplates(
          int index, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder builderForValue) {
        if (defaultTemplatesBuilder_ == null) {
          ensureDefaultTemplatesIsMutable();
          defaultTemplates_.add(index, builderForValue.build());
          onChanged();
        } else {
          defaultTemplatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder addAllDefaultTemplates(
          java.lang.Iterable<? extends gdsc.smlm.data.config.GUIProtos.DefaultTemplate> values) {
        if (defaultTemplatesBuilder_ == null) {
          ensureDefaultTemplatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, defaultTemplates_);
          onChanged();
        } else {
          defaultTemplatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder clearDefaultTemplates() {
        if (defaultTemplatesBuilder_ == null) {
          defaultTemplates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          defaultTemplatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public Builder removeDefaultTemplates(int index) {
        if (defaultTemplatesBuilder_ == null) {
          ensureDefaultTemplatesIsMutable();
          defaultTemplates_.remove(index);
          onChanged();
        } else {
          defaultTemplatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder getDefaultTemplatesBuilder(
          int index) {
        return getDefaultTemplatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder getDefaultTemplatesOrBuilder(
          int index) {
        if (defaultTemplatesBuilder_ == null) {
          return defaultTemplates_.get(index);  } else {
          return defaultTemplatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public java.util.List<? extends gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder> 
           getDefaultTemplatesOrBuilderList() {
        if (defaultTemplatesBuilder_ != null) {
          return defaultTemplatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(defaultTemplates_);
        }
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder addDefaultTemplatesBuilder() {
        return getDefaultTemplatesFieldBuilder().addBuilder(
            gdsc.smlm.data.config.GUIProtos.DefaultTemplate.getDefaultInstance());
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder addDefaultTemplatesBuilder(
          int index) {
        return getDefaultTemplatesFieldBuilder().addBuilder(
            index, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.getDefaultInstance());
      }
      /**
       * <code>repeated .gdsc.smlm.data.config.DefaultTemplate default_templates = 1;</code>
       */
      public java.util.List<gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder> 
           getDefaultTemplatesBuilderList() {
        return getDefaultTemplatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gdsc.smlm.data.config.GUIProtos.DefaultTemplate, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder, gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder> 
          getDefaultTemplatesFieldBuilder() {
        if (defaultTemplatesBuilder_ == null) {
          defaultTemplatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gdsc.smlm.data.config.GUIProtos.DefaultTemplate, gdsc.smlm.data.config.GUIProtos.DefaultTemplate.Builder, gdsc.smlm.data.config.GUIProtos.DefaultTemplateOrBuilder>(
                  defaultTemplates_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          defaultTemplates_ = null;
        }
        return defaultTemplatesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.DefaultTemplateSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.DefaultTemplateSettings)
    private static final gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DefaultTemplateSettings>
        PARSER = new com.google.protobuf.AbstractParser<DefaultTemplateSettings>() {
      public DefaultTemplateSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DefaultTemplateSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DefaultTemplateSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DefaultTemplateSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.DefaultTemplateSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigurationTemplateSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.ConfigurationTemplateSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The option for the Template Manager
     * </pre>
     *
     * <code>int32 option = 1;</code>
     */
    int getOption();

    /**
     * <pre>
     * Set to true to select from a list of standard templates 
     * </pre>
     *
     * <code>bool select_standard_templates = 2;</code>
     */
    boolean getSelectStandardTemplates();

    /**
     * <pre>
     * Set to true to select templates from a configuration directory 
     * </pre>
     *
     * <code>bool select_custom_directory = 3;</code>
     */
    boolean getSelectCustomDirectory();

    /**
     * <pre>
     * The configuration directory
     * </pre>
     *
     * <code>string configuration_directory = 4;</code>
     */
    java.lang.String getConfigurationDirectory();
    /**
     * <pre>
     * The configuration directory
     * </pre>
     *
     * <code>string configuration_directory = 4;</code>
     */
    com.google.protobuf.ByteString
        getConfigurationDirectoryBytes();

    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    java.util.List<java.lang.String>
        getSelectedStandardTemplatesList();
    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    int getSelectedStandardTemplatesCount();
    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    java.lang.String getSelectedStandardTemplates(int index);
    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    com.google.protobuf.ByteString
        getSelectedStandardTemplatesBytes(int index);

    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    java.util.List<java.lang.String>
        getSelectedCustomTemplatesList();
    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    int getSelectedCustomTemplatesCount();
    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    java.lang.String getSelectedCustomTemplates(int index);
    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    com.google.protobuf.ByteString
        getSelectedCustomTemplatesBytes(int index);

    /**
     * <pre>
     * The template to view
     * </pre>
     *
     * <code>string template = 7;</code>
     */
    java.lang.String getTemplate();
    /**
     * <pre>
     * The template to view
     * </pre>
     *
     * <code>string template = 7;</code>
     */
    com.google.protobuf.ByteString
        getTemplateBytes();

    /**
     * <pre>
     * Set to true to close the template when finished
     * </pre>
     *
     * <code>bool close = 8;</code>
     */
    boolean getClose();
  }
  /**
   * <pre>
   * Contains settings for the configuration templates
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.ConfigurationTemplateSettings}
   */
  public  static final class ConfigurationTemplateSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.ConfigurationTemplateSettings)
      ConfigurationTemplateSettingsOrBuilder {
    // Use ConfigurationTemplateSettings.newBuilder() to construct.
    private ConfigurationTemplateSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfigurationTemplateSettings() {
      option_ = 0;
      selectStandardTemplates_ = false;
      selectCustomDirectory_ = false;
      configurationDirectory_ = "";
      selectedStandardTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      selectedCustomTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      template_ = "";
      close_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ConfigurationTemplateSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              option_ = input.readInt32();
              break;
            }
            case 16: {

              selectStandardTemplates_ = input.readBool();
              break;
            }
            case 24: {

              selectCustomDirectory_ = input.readBool();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              configurationDirectory_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                selectedStandardTemplates_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              selectedStandardTemplates_.add(s);
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                selectedCustomTemplates_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000020;
              }
              selectedCustomTemplates_.add(s);
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              template_ = s;
              break;
            }
            case 64: {

              close_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          selectedStandardTemplates_ = selectedStandardTemplates_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          selectedCustomTemplates_ = selectedCustomTemplates_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings.class, gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings.Builder.class);
    }

    private int bitField0_;
    public static final int OPTION_FIELD_NUMBER = 1;
    private int option_;
    /**
     * <pre>
     * The option for the Template Manager
     * </pre>
     *
     * <code>int32 option = 1;</code>
     */
    public int getOption() {
      return option_;
    }

    public static final int SELECT_STANDARD_TEMPLATES_FIELD_NUMBER = 2;
    private boolean selectStandardTemplates_;
    /**
     * <pre>
     * Set to true to select from a list of standard templates 
     * </pre>
     *
     * <code>bool select_standard_templates = 2;</code>
     */
    public boolean getSelectStandardTemplates() {
      return selectStandardTemplates_;
    }

    public static final int SELECT_CUSTOM_DIRECTORY_FIELD_NUMBER = 3;
    private boolean selectCustomDirectory_;
    /**
     * <pre>
     * Set to true to select templates from a configuration directory 
     * </pre>
     *
     * <code>bool select_custom_directory = 3;</code>
     */
    public boolean getSelectCustomDirectory() {
      return selectCustomDirectory_;
    }

    public static final int CONFIGURATION_DIRECTORY_FIELD_NUMBER = 4;
    private volatile java.lang.Object configurationDirectory_;
    /**
     * <pre>
     * The configuration directory
     * </pre>
     *
     * <code>string configuration_directory = 4;</code>
     */
    public java.lang.String getConfigurationDirectory() {
      java.lang.Object ref = configurationDirectory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        configurationDirectory_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The configuration directory
     * </pre>
     *
     * <code>string configuration_directory = 4;</code>
     */
    public com.google.protobuf.ByteString
        getConfigurationDirectoryBytes() {
      java.lang.Object ref = configurationDirectory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        configurationDirectory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SELECTED_STANDARD_TEMPLATES_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList selectedStandardTemplates_;
    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSelectedStandardTemplatesList() {
      return selectedStandardTemplates_;
    }
    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    public int getSelectedStandardTemplatesCount() {
      return selectedStandardTemplates_.size();
    }
    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    public java.lang.String getSelectedStandardTemplates(int index) {
      return selectedStandardTemplates_.get(index);
    }
    /**
     * <pre>
     * Used for the multiMode option to select standard templates 
     * </pre>
     *
     * <code>repeated string selected_standard_templates = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSelectedStandardTemplatesBytes(int index) {
      return selectedStandardTemplates_.getByteString(index);
    }

    public static final int SELECTED_CUSTOM_TEMPLATES_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList selectedCustomTemplates_;
    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSelectedCustomTemplatesList() {
      return selectedCustomTemplates_;
    }
    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    public int getSelectedCustomTemplatesCount() {
      return selectedCustomTemplates_.size();
    }
    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    public java.lang.String getSelectedCustomTemplates(int index) {
      return selectedCustomTemplates_.get(index);
    }
    /**
     * <pre>
     * Used for the multiMode option to select custom templates 
     * </pre>
     *
     * <code>repeated string selected_custom_templates = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSelectedCustomTemplatesBytes(int index) {
      return selectedCustomTemplates_.getByteString(index);
    }

    public static final int TEMPLATE_FIELD_NUMBER = 7;
    private volatile java.lang.Object template_;
    /**
     * <pre>
     * The template to view
     * </pre>
     *
     * <code>string template = 7;</code>
     */
    public java.lang.String getTemplate() {
      java.lang.Object ref = template_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        template_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The template to view
     * </pre>
     *
     * <code>string template = 7;</code>
     */
    public com.google.protobuf.ByteString
        getTemplateBytes() {
      java.lang.Object ref = template_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        template_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLOSE_FIELD_NUMBER = 8;
    private boolean close_;
    /**
     * <pre>
     * Set to true to close the template when finished
     * </pre>
     *
     * <code>bool close = 8;</code>
     */
    public boolean getClose() {
      return close_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (option_ != 0) {
        output.writeInt32(1, option_);
      }
      if (selectStandardTemplates_ != false) {
        output.writeBool(2, selectStandardTemplates_);
      }
      if (selectCustomDirectory_ != false) {
        output.writeBool(3, selectCustomDirectory_);
      }
      if (!getConfigurationDirectoryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, configurationDirectory_);
      }
      for (int i = 0; i < selectedStandardTemplates_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, selectedStandardTemplates_.getRaw(i));
      }
      for (int i = 0; i < selectedCustomTemplates_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, selectedCustomTemplates_.getRaw(i));
      }
      if (!getTemplateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, template_);
      }
      if (close_ != false) {
        output.writeBool(8, close_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (option_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, option_);
      }
      if (selectStandardTemplates_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, selectStandardTemplates_);
      }
      if (selectCustomDirectory_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, selectCustomDirectory_);
      }
      if (!getConfigurationDirectoryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, configurationDirectory_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selectedStandardTemplates_.size(); i++) {
          dataSize += computeStringSizeNoTag(selectedStandardTemplates_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSelectedStandardTemplatesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selectedCustomTemplates_.size(); i++) {
          dataSize += computeStringSizeNoTag(selectedCustomTemplates_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSelectedCustomTemplatesList().size();
      }
      if (!getTemplateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, template_);
      }
      if (close_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, close_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings other = (gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings) obj;

      boolean result = true;
      result = result && (getOption()
          == other.getOption());
      result = result && (getSelectStandardTemplates()
          == other.getSelectStandardTemplates());
      result = result && (getSelectCustomDirectory()
          == other.getSelectCustomDirectory());
      result = result && getConfigurationDirectory()
          .equals(other.getConfigurationDirectory());
      result = result && getSelectedStandardTemplatesList()
          .equals(other.getSelectedStandardTemplatesList());
      result = result && getSelectedCustomTemplatesList()
          .equals(other.getSelectedCustomTemplatesList());
      result = result && getTemplate()
          .equals(other.getTemplate());
      result = result && (getClose()
          == other.getClose());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPTION_FIELD_NUMBER;
      hash = (53 * hash) + getOption();
      hash = (37 * hash) + SELECT_STANDARD_TEMPLATES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSelectStandardTemplates());
      hash = (37 * hash) + SELECT_CUSTOM_DIRECTORY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSelectCustomDirectory());
      hash = (37 * hash) + CONFIGURATION_DIRECTORY_FIELD_NUMBER;
      hash = (53 * hash) + getConfigurationDirectory().hashCode();
      if (getSelectedStandardTemplatesCount() > 0) {
        hash = (37 * hash) + SELECTED_STANDARD_TEMPLATES_FIELD_NUMBER;
        hash = (53 * hash) + getSelectedStandardTemplatesList().hashCode();
      }
      if (getSelectedCustomTemplatesCount() > 0) {
        hash = (37 * hash) + SELECTED_CUSTOM_TEMPLATES_FIELD_NUMBER;
        hash = (53 * hash) + getSelectedCustomTemplatesList().hashCode();
      }
      hash = (37 * hash) + TEMPLATE_FIELD_NUMBER;
      hash = (53 * hash) + getTemplate().hashCode();
      hash = (37 * hash) + CLOSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getClose());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains settings for the configuration templates
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.ConfigurationTemplateSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.ConfigurationTemplateSettings)
        gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings.class, gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        option_ = 0;

        selectStandardTemplates_ = false;

        selectCustomDirectory_ = false;

        configurationDirectory_ = "";

        selectedStandardTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        selectedCustomTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        template_ = "";

        close_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings build() {
        gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings result = new gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.option_ = option_;
        result.selectStandardTemplates_ = selectStandardTemplates_;
        result.selectCustomDirectory_ = selectCustomDirectory_;
        result.configurationDirectory_ = configurationDirectory_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          selectedStandardTemplates_ = selectedStandardTemplates_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.selectedStandardTemplates_ = selectedStandardTemplates_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          selectedCustomTemplates_ = selectedCustomTemplates_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.selectedCustomTemplates_ = selectedCustomTemplates_;
        result.template_ = template_;
        result.close_ = close_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings.getDefaultInstance()) return this;
        if (other.getOption() != 0) {
          setOption(other.getOption());
        }
        if (other.getSelectStandardTemplates() != false) {
          setSelectStandardTemplates(other.getSelectStandardTemplates());
        }
        if (other.getSelectCustomDirectory() != false) {
          setSelectCustomDirectory(other.getSelectCustomDirectory());
        }
        if (!other.getConfigurationDirectory().isEmpty()) {
          configurationDirectory_ = other.configurationDirectory_;
          onChanged();
        }
        if (!other.selectedStandardTemplates_.isEmpty()) {
          if (selectedStandardTemplates_.isEmpty()) {
            selectedStandardTemplates_ = other.selectedStandardTemplates_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSelectedStandardTemplatesIsMutable();
            selectedStandardTemplates_.addAll(other.selectedStandardTemplates_);
          }
          onChanged();
        }
        if (!other.selectedCustomTemplates_.isEmpty()) {
          if (selectedCustomTemplates_.isEmpty()) {
            selectedCustomTemplates_ = other.selectedCustomTemplates_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSelectedCustomTemplatesIsMutable();
            selectedCustomTemplates_.addAll(other.selectedCustomTemplates_);
          }
          onChanged();
        }
        if (!other.getTemplate().isEmpty()) {
          template_ = other.template_;
          onChanged();
        }
        if (other.getClose() != false) {
          setClose(other.getClose());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int option_ ;
      /**
       * <pre>
       * The option for the Template Manager
       * </pre>
       *
       * <code>int32 option = 1;</code>
       */
      public int getOption() {
        return option_;
      }
      /**
       * <pre>
       * The option for the Template Manager
       * </pre>
       *
       * <code>int32 option = 1;</code>
       */
      public Builder setOption(int value) {
        
        option_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The option for the Template Manager
       * </pre>
       *
       * <code>int32 option = 1;</code>
       */
      public Builder clearOption() {
        
        option_ = 0;
        onChanged();
        return this;
      }

      private boolean selectStandardTemplates_ ;
      /**
       * <pre>
       * Set to true to select from a list of standard templates 
       * </pre>
       *
       * <code>bool select_standard_templates = 2;</code>
       */
      public boolean getSelectStandardTemplates() {
        return selectStandardTemplates_;
      }
      /**
       * <pre>
       * Set to true to select from a list of standard templates 
       * </pre>
       *
       * <code>bool select_standard_templates = 2;</code>
       */
      public Builder setSelectStandardTemplates(boolean value) {
        
        selectStandardTemplates_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to select from a list of standard templates 
       * </pre>
       *
       * <code>bool select_standard_templates = 2;</code>
       */
      public Builder clearSelectStandardTemplates() {
        
        selectStandardTemplates_ = false;
        onChanged();
        return this;
      }

      private boolean selectCustomDirectory_ ;
      /**
       * <pre>
       * Set to true to select templates from a configuration directory 
       * </pre>
       *
       * <code>bool select_custom_directory = 3;</code>
       */
      public boolean getSelectCustomDirectory() {
        return selectCustomDirectory_;
      }
      /**
       * <pre>
       * Set to true to select templates from a configuration directory 
       * </pre>
       *
       * <code>bool select_custom_directory = 3;</code>
       */
      public Builder setSelectCustomDirectory(boolean value) {
        
        selectCustomDirectory_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to select templates from a configuration directory 
       * </pre>
       *
       * <code>bool select_custom_directory = 3;</code>
       */
      public Builder clearSelectCustomDirectory() {
        
        selectCustomDirectory_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object configurationDirectory_ = "";
      /**
       * <pre>
       * The configuration directory
       * </pre>
       *
       * <code>string configuration_directory = 4;</code>
       */
      public java.lang.String getConfigurationDirectory() {
        java.lang.Object ref = configurationDirectory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          configurationDirectory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The configuration directory
       * </pre>
       *
       * <code>string configuration_directory = 4;</code>
       */
      public com.google.protobuf.ByteString
          getConfigurationDirectoryBytes() {
        java.lang.Object ref = configurationDirectory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          configurationDirectory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The configuration directory
       * </pre>
       *
       * <code>string configuration_directory = 4;</code>
       */
      public Builder setConfigurationDirectory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        configurationDirectory_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The configuration directory
       * </pre>
       *
       * <code>string configuration_directory = 4;</code>
       */
      public Builder clearConfigurationDirectory() {
        
        configurationDirectory_ = getDefaultInstance().getConfigurationDirectory();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The configuration directory
       * </pre>
       *
       * <code>string configuration_directory = 4;</code>
       */
      public Builder setConfigurationDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        configurationDirectory_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList selectedStandardTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSelectedStandardTemplatesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          selectedStandardTemplates_ = new com.google.protobuf.LazyStringArrayList(selectedStandardTemplates_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSelectedStandardTemplatesList() {
        return selectedStandardTemplates_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public int getSelectedStandardTemplatesCount() {
        return selectedStandardTemplates_.size();
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public java.lang.String getSelectedStandardTemplates(int index) {
        return selectedStandardTemplates_.get(index);
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSelectedStandardTemplatesBytes(int index) {
        return selectedStandardTemplates_.getByteString(index);
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public Builder setSelectedStandardTemplates(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSelectedStandardTemplatesIsMutable();
        selectedStandardTemplates_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public Builder addSelectedStandardTemplates(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSelectedStandardTemplatesIsMutable();
        selectedStandardTemplates_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public Builder addAllSelectedStandardTemplates(
          java.lang.Iterable<java.lang.String> values) {
        ensureSelectedStandardTemplatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, selectedStandardTemplates_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public Builder clearSelectedStandardTemplates() {
        selectedStandardTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select standard templates 
       * </pre>
       *
       * <code>repeated string selected_standard_templates = 5;</code>
       */
      public Builder addSelectedStandardTemplatesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSelectedStandardTemplatesIsMutable();
        selectedStandardTemplates_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList selectedCustomTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSelectedCustomTemplatesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          selectedCustomTemplates_ = new com.google.protobuf.LazyStringArrayList(selectedCustomTemplates_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSelectedCustomTemplatesList() {
        return selectedCustomTemplates_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public int getSelectedCustomTemplatesCount() {
        return selectedCustomTemplates_.size();
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public java.lang.String getSelectedCustomTemplates(int index) {
        return selectedCustomTemplates_.get(index);
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSelectedCustomTemplatesBytes(int index) {
        return selectedCustomTemplates_.getByteString(index);
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public Builder setSelectedCustomTemplates(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSelectedCustomTemplatesIsMutable();
        selectedCustomTemplates_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public Builder addSelectedCustomTemplates(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSelectedCustomTemplatesIsMutable();
        selectedCustomTemplates_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public Builder addAllSelectedCustomTemplates(
          java.lang.Iterable<java.lang.String> values) {
        ensureSelectedCustomTemplatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, selectedCustomTemplates_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public Builder clearSelectedCustomTemplates() {
        selectedCustomTemplates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for the multiMode option to select custom templates 
       * </pre>
       *
       * <code>repeated string selected_custom_templates = 6;</code>
       */
      public Builder addSelectedCustomTemplatesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSelectedCustomTemplatesIsMutable();
        selectedCustomTemplates_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object template_ = "";
      /**
       * <pre>
       * The template to view
       * </pre>
       *
       * <code>string template = 7;</code>
       */
      public java.lang.String getTemplate() {
        java.lang.Object ref = template_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          template_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The template to view
       * </pre>
       *
       * <code>string template = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTemplateBytes() {
        java.lang.Object ref = template_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          template_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The template to view
       * </pre>
       *
       * <code>string template = 7;</code>
       */
      public Builder setTemplate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        template_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The template to view
       * </pre>
       *
       * <code>string template = 7;</code>
       */
      public Builder clearTemplate() {
        
        template_ = getDefaultInstance().getTemplate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The template to view
       * </pre>
       *
       * <code>string template = 7;</code>
       */
      public Builder setTemplateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        template_ = value;
        onChanged();
        return this;
      }

      private boolean close_ ;
      /**
       * <pre>
       * Set to true to close the template when finished
       * </pre>
       *
       * <code>bool close = 8;</code>
       */
      public boolean getClose() {
        return close_;
      }
      /**
       * <pre>
       * Set to true to close the template when finished
       * </pre>
       *
       * <code>bool close = 8;</code>
       */
      public Builder setClose(boolean value) {
        
        close_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to close the template when finished
       * </pre>
       *
       * <code>bool close = 8;</code>
       */
      public Builder clearClose() {
        
        close_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.ConfigurationTemplateSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.ConfigurationTemplateSettings)
    private static final gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfigurationTemplateSettings>
        PARSER = new com.google.protobuf.AbstractParser<ConfigurationTemplateSettings>() {
      public ConfigurationTemplateSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ConfigurationTemplateSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfigurationTemplateSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfigurationTemplateSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.ConfigurationTemplateSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NucleusMaskSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.NucleusMaskSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 mode = 1;</code>
     */
    int getMode();

    /**
     * <pre>
     * Field width in pixels
     * </pre>
     *
     * <code>int32 field_width = 2;</code>
     */
    int getFieldWidth();

    /**
     * <code>double y_dither = 3;</code>
     */
    double getYDither();

    /**
     * <code>double z_dither = 4;</code>
     */
    double getZDither();

    /**
     * <code>double nm_per_pixel = 5;</code>
     */
    double getNmPerPixel();

    /**
     * <code>double nm_per_slice = 6;</code>
     */
    double getNmPerSlice();

    /**
     * <code>double diameter = 7;</code>
     */
    double getDiameter();
  }
  /**
   * <pre>
   * Contains settings for the Nucleus Mask plugin
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.NucleusMaskSettings}
   */
  public  static final class NucleusMaskSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.NucleusMaskSettings)
      NucleusMaskSettingsOrBuilder {
    // Use NucleusMaskSettings.newBuilder() to construct.
    private NucleusMaskSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NucleusMaskSettings() {
      mode_ = 0;
      fieldWidth_ = 0;
      yDither_ = 0D;
      zDither_ = 0D;
      nmPerPixel_ = 0D;
      nmPerSlice_ = 0D;
      diameter_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NucleusMaskSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              mode_ = input.readInt32();
              break;
            }
            case 16: {

              fieldWidth_ = input.readInt32();
              break;
            }
            case 25: {

              yDither_ = input.readDouble();
              break;
            }
            case 33: {

              zDither_ = input.readDouble();
              break;
            }
            case 41: {

              nmPerPixel_ = input.readDouble();
              break;
            }
            case 49: {

              nmPerSlice_ = input.readDouble();
              break;
            }
            case 57: {

              diameter_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_NucleusMaskSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_NucleusMaskSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings.class, gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings.Builder.class);
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>int32 mode = 1;</code>
     */
    public int getMode() {
      return mode_;
    }

    public static final int FIELD_WIDTH_FIELD_NUMBER = 2;
    private int fieldWidth_;
    /**
     * <pre>
     * Field width in pixels
     * </pre>
     *
     * <code>int32 field_width = 2;</code>
     */
    public int getFieldWidth() {
      return fieldWidth_;
    }

    public static final int Y_DITHER_FIELD_NUMBER = 3;
    private double yDither_;
    /**
     * <code>double y_dither = 3;</code>
     */
    public double getYDither() {
      return yDither_;
    }

    public static final int Z_DITHER_FIELD_NUMBER = 4;
    private double zDither_;
    /**
     * <code>double z_dither = 4;</code>
     */
    public double getZDither() {
      return zDither_;
    }

    public static final int NM_PER_PIXEL_FIELD_NUMBER = 5;
    private double nmPerPixel_;
    /**
     * <code>double nm_per_pixel = 5;</code>
     */
    public double getNmPerPixel() {
      return nmPerPixel_;
    }

    public static final int NM_PER_SLICE_FIELD_NUMBER = 6;
    private double nmPerSlice_;
    /**
     * <code>double nm_per_slice = 6;</code>
     */
    public double getNmPerSlice() {
      return nmPerSlice_;
    }

    public static final int DIAMETER_FIELD_NUMBER = 7;
    private double diameter_;
    /**
     * <code>double diameter = 7;</code>
     */
    public double getDiameter() {
      return diameter_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != 0) {
        output.writeInt32(1, mode_);
      }
      if (fieldWidth_ != 0) {
        output.writeInt32(2, fieldWidth_);
      }
      if (yDither_ != 0D) {
        output.writeDouble(3, yDither_);
      }
      if (zDither_ != 0D) {
        output.writeDouble(4, zDither_);
      }
      if (nmPerPixel_ != 0D) {
        output.writeDouble(5, nmPerPixel_);
      }
      if (nmPerSlice_ != 0D) {
        output.writeDouble(6, nmPerSlice_);
      }
      if (diameter_ != 0D) {
        output.writeDouble(7, diameter_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mode_);
      }
      if (fieldWidth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fieldWidth_);
      }
      if (yDither_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, yDither_);
      }
      if (zDither_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, zDither_);
      }
      if (nmPerPixel_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, nmPerPixel_);
      }
      if (nmPerSlice_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, nmPerSlice_);
      }
      if (diameter_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, diameter_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings other = (gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings) obj;

      boolean result = true;
      result = result && (getMode()
          == other.getMode());
      result = result && (getFieldWidth()
          == other.getFieldWidth());
      result = result && (
          java.lang.Double.doubleToLongBits(getYDither())
          == java.lang.Double.doubleToLongBits(
              other.getYDither()));
      result = result && (
          java.lang.Double.doubleToLongBits(getZDither())
          == java.lang.Double.doubleToLongBits(
              other.getZDither()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNmPerPixel())
          == java.lang.Double.doubleToLongBits(
              other.getNmPerPixel()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNmPerSlice())
          == java.lang.Double.doubleToLongBits(
              other.getNmPerSlice()));
      result = result && (
          java.lang.Double.doubleToLongBits(getDiameter())
          == java.lang.Double.doubleToLongBits(
              other.getDiameter()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode();
      hash = (37 * hash) + FIELD_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getFieldWidth();
      hash = (37 * hash) + Y_DITHER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getYDither()));
      hash = (37 * hash) + Z_DITHER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getZDither()));
      hash = (37 * hash) + NM_PER_PIXEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNmPerPixel()));
      hash = (37 * hash) + NM_PER_SLICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNmPerSlice()));
      hash = (37 * hash) + DIAMETER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDiameter()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains settings for the Nucleus Mask plugin
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.NucleusMaskSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.NucleusMaskSettings)
        gdsc.smlm.data.config.GUIProtos.NucleusMaskSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_NucleusMaskSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_NucleusMaskSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings.class, gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 0;

        fieldWidth_ = 0;

        yDither_ = 0D;

        zDither_ = 0D;

        nmPerPixel_ = 0D;

        nmPerSlice_ = 0D;

        diameter_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_NucleusMaskSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings build() {
        gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings result = new gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings(this);
        result.mode_ = mode_;
        result.fieldWidth_ = fieldWidth_;
        result.yDither_ = yDither_;
        result.zDither_ = zDither_;
        result.nmPerPixel_ = nmPerPixel_;
        result.nmPerSlice_ = nmPerSlice_;
        result.diameter_ = diameter_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings.getDefaultInstance()) return this;
        if (other.getMode() != 0) {
          setMode(other.getMode());
        }
        if (other.getFieldWidth() != 0) {
          setFieldWidth(other.getFieldWidth());
        }
        if (other.getYDither() != 0D) {
          setYDither(other.getYDither());
        }
        if (other.getZDither() != 0D) {
          setZDither(other.getZDither());
        }
        if (other.getNmPerPixel() != 0D) {
          setNmPerPixel(other.getNmPerPixel());
        }
        if (other.getNmPerSlice() != 0D) {
          setNmPerSlice(other.getNmPerSlice());
        }
        if (other.getDiameter() != 0D) {
          setDiameter(other.getDiameter());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mode_ ;
      /**
       * <code>int32 mode = 1;</code>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>int32 mode = 1;</code>
       */
      public Builder setMode(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 mode = 1;</code>
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private int fieldWidth_ ;
      /**
       * <pre>
       * Field width in pixels
       * </pre>
       *
       * <code>int32 field_width = 2;</code>
       */
      public int getFieldWidth() {
        return fieldWidth_;
      }
      /**
       * <pre>
       * Field width in pixels
       * </pre>
       *
       * <code>int32 field_width = 2;</code>
       */
      public Builder setFieldWidth(int value) {
        
        fieldWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Field width in pixels
       * </pre>
       *
       * <code>int32 field_width = 2;</code>
       */
      public Builder clearFieldWidth() {
        
        fieldWidth_ = 0;
        onChanged();
        return this;
      }

      private double yDither_ ;
      /**
       * <code>double y_dither = 3;</code>
       */
      public double getYDither() {
        return yDither_;
      }
      /**
       * <code>double y_dither = 3;</code>
       */
      public Builder setYDither(double value) {
        
        yDither_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double y_dither = 3;</code>
       */
      public Builder clearYDither() {
        
        yDither_ = 0D;
        onChanged();
        return this;
      }

      private double zDither_ ;
      /**
       * <code>double z_dither = 4;</code>
       */
      public double getZDither() {
        return zDither_;
      }
      /**
       * <code>double z_dither = 4;</code>
       */
      public Builder setZDither(double value) {
        
        zDither_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double z_dither = 4;</code>
       */
      public Builder clearZDither() {
        
        zDither_ = 0D;
        onChanged();
        return this;
      }

      private double nmPerPixel_ ;
      /**
       * <code>double nm_per_pixel = 5;</code>
       */
      public double getNmPerPixel() {
        return nmPerPixel_;
      }
      /**
       * <code>double nm_per_pixel = 5;</code>
       */
      public Builder setNmPerPixel(double value) {
        
        nmPerPixel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double nm_per_pixel = 5;</code>
       */
      public Builder clearNmPerPixel() {
        
        nmPerPixel_ = 0D;
        onChanged();
        return this;
      }

      private double nmPerSlice_ ;
      /**
       * <code>double nm_per_slice = 6;</code>
       */
      public double getNmPerSlice() {
        return nmPerSlice_;
      }
      /**
       * <code>double nm_per_slice = 6;</code>
       */
      public Builder setNmPerSlice(double value) {
        
        nmPerSlice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double nm_per_slice = 6;</code>
       */
      public Builder clearNmPerSlice() {
        
        nmPerSlice_ = 0D;
        onChanged();
        return this;
      }

      private double diameter_ ;
      /**
       * <code>double diameter = 7;</code>
       */
      public double getDiameter() {
        return diameter_;
      }
      /**
       * <code>double diameter = 7;</code>
       */
      public Builder setDiameter(double value) {
        
        diameter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double diameter = 7;</code>
       */
      public Builder clearDiameter() {
        
        diameter_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.NucleusMaskSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.NucleusMaskSettings)
    private static final gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NucleusMaskSettings>
        PARSER = new com.google.protobuf.AbstractParser<NucleusMaskSettings>() {
      public NucleusMaskSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NucleusMaskSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NucleusMaskSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NucleusMaskSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.NucleusMaskSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PSFCreatorSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.PSFCreatorSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 mode = 1;</code>
     */
    int getMode();

    /**
     * <code>double radius = 2;</code>
     */
    double getRadius();

    /**
     * <code>bool interactive_mode = 3;</code>
     */
    boolean getInteractiveMode();

    /**
     * <code>double nm_per_slice = 4;</code>
     */
    double getNmPerSlice();

    /**
     * <pre>
     * For the fitting mode
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
     */
    boolean hasFitEngineSettings();
    /**
     * <pre>
     * For the fitting mode
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
     */
    gdsc.smlm.data.config.FitProtos.FitEngineSettings getFitEngineSettings();
    /**
     * <pre>
     * For the fitting mode
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
     */
    gdsc.smlm.data.config.FitProtos.FitEngineSettingsOrBuilder getFitEngineSettingsOrBuilder();

    /**
     * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
     */
    boolean hasPsf();
    /**
     * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
     */
    gdsc.smlm.data.config.PSFProtos.PSF getPsf();
    /**
     * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
     */
    gdsc.smlm.data.config.PSFProtos.PSFOrBuilder getPsfOrBuilder();

    /**
     * <code>double amplitude_fraction = 7;</code>
     */
    double getAmplitudeFraction();

    /**
     * <code>int32 start_background_frames = 8;</code>
     */
    int getStartBackgroundFrames();

    /**
     * <code>int32 end_background_frames = 9;</code>
     */
    int getEndBackgroundFrames();

    /**
     * <code>int32 magnification = 10;</code>
     */
    int getMagnification();

    /**
     * <code>double smoothing = 11;</code>
     */
    double getSmoothing();

    /**
     * <code>bool centre_each_slice = 12;</code>
     */
    boolean getCentreEachSlice();

    /**
     * <code>double com_cut_off = 13;</code>
     */
    double getComCutOff();

    /**
     * <code>int32 interpolation_method = 14;</code>
     */
    int getInterpolationMethod();

    /**
     * <code>int32 psfType = 15;</code>
     */
    int getPsfType();

    /**
     * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
     */
    boolean hasCalibration();
    /**
     * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
     */
    gdsc.smlm.data.config.CalibrationProtos.Calibration getCalibration();
    /**
     * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
     */
    gdsc.smlm.data.config.CalibrationProtos.CalibrationOrBuilder getCalibrationOrBuilder();

    /**
     * <code>double analysis_window = 17;</code>
     */
    double getAnalysisWindow();

    /**
     * <code>int32 com_window = 18;</code>
     */
    int getComWindow();

    /**
     * <code>int32 alignment_magnification = 19;</code>
     */
    int getAlignmentMagnification();

    /**
     * <code>int32 maxIterations = 20;</code>
     */
    int getMaxIterations();

    /**
     * <code>bool check_alignments = 21;</code>
     */
    boolean getCheckAlignments();

    /**
     * <code>int32 psf_magnification = 22;</code>
     */
    int getPsfMagnification();

    /**
     * <code>int32 window = 23;</code>
     */
    int getWindow();

    /**
     * <code>bool smooth_stack_signal = 24;</code>
     */
    boolean getSmoothStackSignal();

    /**
     * <code>bool single_precision = 25;</code>
     */
    boolean getSinglePrecision();

    /**
     * <code>int32 crop_border = 26;</code>
     */
    int getCropBorder();

    /**
     * <code>int32 crop_start = 27;</code>
     */
    int getCropStart();

    /**
     * <code>int32 crop_end = 28;</code>
     */
    int getCropEnd();

    /**
     * <code>int32 psf_z_magnification = 29;</code>
     */
    int getPsfZMagnification();

    /**
     * <code>double com_border = 30;</code>
     */
    double getComBorder();

    /**
     * <code>int32 output_type = 31;</code>
     */
    int getOutputType();

    /**
     * <code>string spline_filename = 32;</code>
     */
    java.lang.String getSplineFilename();
    /**
     * <code>string spline_filename = 32;</code>
     */
    com.google.protobuf.ByteString
        getSplineFilenameBytes();

    /**
     * <code>bool crop_to_z_centre = 33;</code>
     */
    boolean getCropToZCentre();

    /**
     * <code>int32 alignment_mode = 34;</code>
     */
    int getAlignmentMode();

    /**
     * <code>double alignment_z_radius = 35;</code>
     */
    double getAlignmentZRadius();

    /**
     * <code>bool update_roi = 36;</code>
     */
    boolean getUpdateRoi();
  }
  /**
   * <pre>
   * Contains settings for the PSF Creator plugin
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.PSFCreatorSettings}
   */
  public  static final class PSFCreatorSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.PSFCreatorSettings)
      PSFCreatorSettingsOrBuilder {
    // Use PSFCreatorSettings.newBuilder() to construct.
    private PSFCreatorSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSFCreatorSettings() {
      mode_ = 0;
      radius_ = 0D;
      interactiveMode_ = false;
      nmPerSlice_ = 0D;
      amplitudeFraction_ = 0D;
      startBackgroundFrames_ = 0;
      endBackgroundFrames_ = 0;
      magnification_ = 0;
      smoothing_ = 0D;
      centreEachSlice_ = false;
      comCutOff_ = 0D;
      interpolationMethod_ = 0;
      psfType_ = 0;
      analysisWindow_ = 0D;
      comWindow_ = 0;
      alignmentMagnification_ = 0;
      maxIterations_ = 0;
      checkAlignments_ = false;
      psfMagnification_ = 0;
      window_ = 0;
      smoothStackSignal_ = false;
      singlePrecision_ = false;
      cropBorder_ = 0;
      cropStart_ = 0;
      cropEnd_ = 0;
      psfZMagnification_ = 0;
      comBorder_ = 0D;
      outputType_ = 0;
      splineFilename_ = "";
      cropToZCentre_ = false;
      alignmentMode_ = 0;
      alignmentZRadius_ = 0D;
      updateRoi_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PSFCreatorSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              mode_ = input.readInt32();
              break;
            }
            case 17: {

              radius_ = input.readDouble();
              break;
            }
            case 24: {

              interactiveMode_ = input.readBool();
              break;
            }
            case 33: {

              nmPerSlice_ = input.readDouble();
              break;
            }
            case 42: {
              gdsc.smlm.data.config.FitProtos.FitEngineSettings.Builder subBuilder = null;
              if (fitEngineSettings_ != null) {
                subBuilder = fitEngineSettings_.toBuilder();
              }
              fitEngineSettings_ = input.readMessage(gdsc.smlm.data.config.FitProtos.FitEngineSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fitEngineSettings_);
                fitEngineSettings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              gdsc.smlm.data.config.PSFProtos.PSF.Builder subBuilder = null;
              if (psf_ != null) {
                subBuilder = psf_.toBuilder();
              }
              psf_ = input.readMessage(gdsc.smlm.data.config.PSFProtos.PSF.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(psf_);
                psf_ = subBuilder.buildPartial();
              }

              break;
            }
            case 57: {

              amplitudeFraction_ = input.readDouble();
              break;
            }
            case 64: {

              startBackgroundFrames_ = input.readInt32();
              break;
            }
            case 72: {

              endBackgroundFrames_ = input.readInt32();
              break;
            }
            case 80: {

              magnification_ = input.readInt32();
              break;
            }
            case 89: {

              smoothing_ = input.readDouble();
              break;
            }
            case 96: {

              centreEachSlice_ = input.readBool();
              break;
            }
            case 105: {

              comCutOff_ = input.readDouble();
              break;
            }
            case 112: {

              interpolationMethod_ = input.readInt32();
              break;
            }
            case 120: {

              psfType_ = input.readInt32();
              break;
            }
            case 130: {
              gdsc.smlm.data.config.CalibrationProtos.Calibration.Builder subBuilder = null;
              if (calibration_ != null) {
                subBuilder = calibration_.toBuilder();
              }
              calibration_ = input.readMessage(gdsc.smlm.data.config.CalibrationProtos.Calibration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calibration_);
                calibration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 137: {

              analysisWindow_ = input.readDouble();
              break;
            }
            case 144: {

              comWindow_ = input.readInt32();
              break;
            }
            case 152: {

              alignmentMagnification_ = input.readInt32();
              break;
            }
            case 160: {

              maxIterations_ = input.readInt32();
              break;
            }
            case 168: {

              checkAlignments_ = input.readBool();
              break;
            }
            case 176: {

              psfMagnification_ = input.readInt32();
              break;
            }
            case 184: {

              window_ = input.readInt32();
              break;
            }
            case 192: {

              smoothStackSignal_ = input.readBool();
              break;
            }
            case 200: {

              singlePrecision_ = input.readBool();
              break;
            }
            case 208: {

              cropBorder_ = input.readInt32();
              break;
            }
            case 216: {

              cropStart_ = input.readInt32();
              break;
            }
            case 224: {

              cropEnd_ = input.readInt32();
              break;
            }
            case 232: {

              psfZMagnification_ = input.readInt32();
              break;
            }
            case 241: {

              comBorder_ = input.readDouble();
              break;
            }
            case 248: {

              outputType_ = input.readInt32();
              break;
            }
            case 258: {
              java.lang.String s = input.readStringRequireUtf8();

              splineFilename_ = s;
              break;
            }
            case 264: {

              cropToZCentre_ = input.readBool();
              break;
            }
            case 272: {

              alignmentMode_ = input.readInt32();
              break;
            }
            case 281: {

              alignmentZRadius_ = input.readDouble();
              break;
            }
            case 288: {

              updateRoi_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCreatorSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCreatorSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings.class, gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings.Builder.class);
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>int32 mode = 1;</code>
     */
    public int getMode() {
      return mode_;
    }

    public static final int RADIUS_FIELD_NUMBER = 2;
    private double radius_;
    /**
     * <code>double radius = 2;</code>
     */
    public double getRadius() {
      return radius_;
    }

    public static final int INTERACTIVE_MODE_FIELD_NUMBER = 3;
    private boolean interactiveMode_;
    /**
     * <code>bool interactive_mode = 3;</code>
     */
    public boolean getInteractiveMode() {
      return interactiveMode_;
    }

    public static final int NM_PER_SLICE_FIELD_NUMBER = 4;
    private double nmPerSlice_;
    /**
     * <code>double nm_per_slice = 4;</code>
     */
    public double getNmPerSlice() {
      return nmPerSlice_;
    }

    public static final int FIT_ENGINE_SETTINGS_FIELD_NUMBER = 5;
    private gdsc.smlm.data.config.FitProtos.FitEngineSettings fitEngineSettings_;
    /**
     * <pre>
     * For the fitting mode
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
     */
    public boolean hasFitEngineSettings() {
      return fitEngineSettings_ != null;
    }
    /**
     * <pre>
     * For the fitting mode
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
     */
    public gdsc.smlm.data.config.FitProtos.FitEngineSettings getFitEngineSettings() {
      return fitEngineSettings_ == null ? gdsc.smlm.data.config.FitProtos.FitEngineSettings.getDefaultInstance() : fitEngineSettings_;
    }
    /**
     * <pre>
     * For the fitting mode
     * </pre>
     *
     * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
     */
    public gdsc.smlm.data.config.FitProtos.FitEngineSettingsOrBuilder getFitEngineSettingsOrBuilder() {
      return getFitEngineSettings();
    }

    public static final int PSF_FIELD_NUMBER = 6;
    private gdsc.smlm.data.config.PSFProtos.PSF psf_;
    /**
     * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
     */
    public boolean hasPsf() {
      return psf_ != null;
    }
    /**
     * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
     */
    public gdsc.smlm.data.config.PSFProtos.PSF getPsf() {
      return psf_ == null ? gdsc.smlm.data.config.PSFProtos.PSF.getDefaultInstance() : psf_;
    }
    /**
     * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
     */
    public gdsc.smlm.data.config.PSFProtos.PSFOrBuilder getPsfOrBuilder() {
      return getPsf();
    }

    public static final int AMPLITUDE_FRACTION_FIELD_NUMBER = 7;
    private double amplitudeFraction_;
    /**
     * <code>double amplitude_fraction = 7;</code>
     */
    public double getAmplitudeFraction() {
      return amplitudeFraction_;
    }

    public static final int START_BACKGROUND_FRAMES_FIELD_NUMBER = 8;
    private int startBackgroundFrames_;
    /**
     * <code>int32 start_background_frames = 8;</code>
     */
    public int getStartBackgroundFrames() {
      return startBackgroundFrames_;
    }

    public static final int END_BACKGROUND_FRAMES_FIELD_NUMBER = 9;
    private int endBackgroundFrames_;
    /**
     * <code>int32 end_background_frames = 9;</code>
     */
    public int getEndBackgroundFrames() {
      return endBackgroundFrames_;
    }

    public static final int MAGNIFICATION_FIELD_NUMBER = 10;
    private int magnification_;
    /**
     * <code>int32 magnification = 10;</code>
     */
    public int getMagnification() {
      return magnification_;
    }

    public static final int SMOOTHING_FIELD_NUMBER = 11;
    private double smoothing_;
    /**
     * <code>double smoothing = 11;</code>
     */
    public double getSmoothing() {
      return smoothing_;
    }

    public static final int CENTRE_EACH_SLICE_FIELD_NUMBER = 12;
    private boolean centreEachSlice_;
    /**
     * <code>bool centre_each_slice = 12;</code>
     */
    public boolean getCentreEachSlice() {
      return centreEachSlice_;
    }

    public static final int COM_CUT_OFF_FIELD_NUMBER = 13;
    private double comCutOff_;
    /**
     * <code>double com_cut_off = 13;</code>
     */
    public double getComCutOff() {
      return comCutOff_;
    }

    public static final int INTERPOLATION_METHOD_FIELD_NUMBER = 14;
    private int interpolationMethod_;
    /**
     * <code>int32 interpolation_method = 14;</code>
     */
    public int getInterpolationMethod() {
      return interpolationMethod_;
    }

    public static final int PSFTYPE_FIELD_NUMBER = 15;
    private int psfType_;
    /**
     * <code>int32 psfType = 15;</code>
     */
    public int getPsfType() {
      return psfType_;
    }

    public static final int CALIBRATION_FIELD_NUMBER = 16;
    private gdsc.smlm.data.config.CalibrationProtos.Calibration calibration_;
    /**
     * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
     */
    public boolean hasCalibration() {
      return calibration_ != null;
    }
    /**
     * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
     */
    public gdsc.smlm.data.config.CalibrationProtos.Calibration getCalibration() {
      return calibration_ == null ? gdsc.smlm.data.config.CalibrationProtos.Calibration.getDefaultInstance() : calibration_;
    }
    /**
     * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
     */
    public gdsc.smlm.data.config.CalibrationProtos.CalibrationOrBuilder getCalibrationOrBuilder() {
      return getCalibration();
    }

    public static final int ANALYSIS_WINDOW_FIELD_NUMBER = 17;
    private double analysisWindow_;
    /**
     * <code>double analysis_window = 17;</code>
     */
    public double getAnalysisWindow() {
      return analysisWindow_;
    }

    public static final int COM_WINDOW_FIELD_NUMBER = 18;
    private int comWindow_;
    /**
     * <code>int32 com_window = 18;</code>
     */
    public int getComWindow() {
      return comWindow_;
    }

    public static final int ALIGNMENT_MAGNIFICATION_FIELD_NUMBER = 19;
    private int alignmentMagnification_;
    /**
     * <code>int32 alignment_magnification = 19;</code>
     */
    public int getAlignmentMagnification() {
      return alignmentMagnification_;
    }

    public static final int MAXITERATIONS_FIELD_NUMBER = 20;
    private int maxIterations_;
    /**
     * <code>int32 maxIterations = 20;</code>
     */
    public int getMaxIterations() {
      return maxIterations_;
    }

    public static final int CHECK_ALIGNMENTS_FIELD_NUMBER = 21;
    private boolean checkAlignments_;
    /**
     * <code>bool check_alignments = 21;</code>
     */
    public boolean getCheckAlignments() {
      return checkAlignments_;
    }

    public static final int PSF_MAGNIFICATION_FIELD_NUMBER = 22;
    private int psfMagnification_;
    /**
     * <code>int32 psf_magnification = 22;</code>
     */
    public int getPsfMagnification() {
      return psfMagnification_;
    }

    public static final int WINDOW_FIELD_NUMBER = 23;
    private int window_;
    /**
     * <code>int32 window = 23;</code>
     */
    public int getWindow() {
      return window_;
    }

    public static final int SMOOTH_STACK_SIGNAL_FIELD_NUMBER = 24;
    private boolean smoothStackSignal_;
    /**
     * <code>bool smooth_stack_signal = 24;</code>
     */
    public boolean getSmoothStackSignal() {
      return smoothStackSignal_;
    }

    public static final int SINGLE_PRECISION_FIELD_NUMBER = 25;
    private boolean singlePrecision_;
    /**
     * <code>bool single_precision = 25;</code>
     */
    public boolean getSinglePrecision() {
      return singlePrecision_;
    }

    public static final int CROP_BORDER_FIELD_NUMBER = 26;
    private int cropBorder_;
    /**
     * <code>int32 crop_border = 26;</code>
     */
    public int getCropBorder() {
      return cropBorder_;
    }

    public static final int CROP_START_FIELD_NUMBER = 27;
    private int cropStart_;
    /**
     * <code>int32 crop_start = 27;</code>
     */
    public int getCropStart() {
      return cropStart_;
    }

    public static final int CROP_END_FIELD_NUMBER = 28;
    private int cropEnd_;
    /**
     * <code>int32 crop_end = 28;</code>
     */
    public int getCropEnd() {
      return cropEnd_;
    }

    public static final int PSF_Z_MAGNIFICATION_FIELD_NUMBER = 29;
    private int psfZMagnification_;
    /**
     * <code>int32 psf_z_magnification = 29;</code>
     */
    public int getPsfZMagnification() {
      return psfZMagnification_;
    }

    public static final int COM_BORDER_FIELD_NUMBER = 30;
    private double comBorder_;
    /**
     * <code>double com_border = 30;</code>
     */
    public double getComBorder() {
      return comBorder_;
    }

    public static final int OUTPUT_TYPE_FIELD_NUMBER = 31;
    private int outputType_;
    /**
     * <code>int32 output_type = 31;</code>
     */
    public int getOutputType() {
      return outputType_;
    }

    public static final int SPLINE_FILENAME_FIELD_NUMBER = 32;
    private volatile java.lang.Object splineFilename_;
    /**
     * <code>string spline_filename = 32;</code>
     */
    public java.lang.String getSplineFilename() {
      java.lang.Object ref = splineFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        splineFilename_ = s;
        return s;
      }
    }
    /**
     * <code>string spline_filename = 32;</code>
     */
    public com.google.protobuf.ByteString
        getSplineFilenameBytes() {
      java.lang.Object ref = splineFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        splineFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CROP_TO_Z_CENTRE_FIELD_NUMBER = 33;
    private boolean cropToZCentre_;
    /**
     * <code>bool crop_to_z_centre = 33;</code>
     */
    public boolean getCropToZCentre() {
      return cropToZCentre_;
    }

    public static final int ALIGNMENT_MODE_FIELD_NUMBER = 34;
    private int alignmentMode_;
    /**
     * <code>int32 alignment_mode = 34;</code>
     */
    public int getAlignmentMode() {
      return alignmentMode_;
    }

    public static final int ALIGNMENT_Z_RADIUS_FIELD_NUMBER = 35;
    private double alignmentZRadius_;
    /**
     * <code>double alignment_z_radius = 35;</code>
     */
    public double getAlignmentZRadius() {
      return alignmentZRadius_;
    }

    public static final int UPDATE_ROI_FIELD_NUMBER = 36;
    private boolean updateRoi_;
    /**
     * <code>bool update_roi = 36;</code>
     */
    public boolean getUpdateRoi() {
      return updateRoi_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != 0) {
        output.writeInt32(1, mode_);
      }
      if (radius_ != 0D) {
        output.writeDouble(2, radius_);
      }
      if (interactiveMode_ != false) {
        output.writeBool(3, interactiveMode_);
      }
      if (nmPerSlice_ != 0D) {
        output.writeDouble(4, nmPerSlice_);
      }
      if (fitEngineSettings_ != null) {
        output.writeMessage(5, getFitEngineSettings());
      }
      if (psf_ != null) {
        output.writeMessage(6, getPsf());
      }
      if (amplitudeFraction_ != 0D) {
        output.writeDouble(7, amplitudeFraction_);
      }
      if (startBackgroundFrames_ != 0) {
        output.writeInt32(8, startBackgroundFrames_);
      }
      if (endBackgroundFrames_ != 0) {
        output.writeInt32(9, endBackgroundFrames_);
      }
      if (magnification_ != 0) {
        output.writeInt32(10, magnification_);
      }
      if (smoothing_ != 0D) {
        output.writeDouble(11, smoothing_);
      }
      if (centreEachSlice_ != false) {
        output.writeBool(12, centreEachSlice_);
      }
      if (comCutOff_ != 0D) {
        output.writeDouble(13, comCutOff_);
      }
      if (interpolationMethod_ != 0) {
        output.writeInt32(14, interpolationMethod_);
      }
      if (psfType_ != 0) {
        output.writeInt32(15, psfType_);
      }
      if (calibration_ != null) {
        output.writeMessage(16, getCalibration());
      }
      if (analysisWindow_ != 0D) {
        output.writeDouble(17, analysisWindow_);
      }
      if (comWindow_ != 0) {
        output.writeInt32(18, comWindow_);
      }
      if (alignmentMagnification_ != 0) {
        output.writeInt32(19, alignmentMagnification_);
      }
      if (maxIterations_ != 0) {
        output.writeInt32(20, maxIterations_);
      }
      if (checkAlignments_ != false) {
        output.writeBool(21, checkAlignments_);
      }
      if (psfMagnification_ != 0) {
        output.writeInt32(22, psfMagnification_);
      }
      if (window_ != 0) {
        output.writeInt32(23, window_);
      }
      if (smoothStackSignal_ != false) {
        output.writeBool(24, smoothStackSignal_);
      }
      if (singlePrecision_ != false) {
        output.writeBool(25, singlePrecision_);
      }
      if (cropBorder_ != 0) {
        output.writeInt32(26, cropBorder_);
      }
      if (cropStart_ != 0) {
        output.writeInt32(27, cropStart_);
      }
      if (cropEnd_ != 0) {
        output.writeInt32(28, cropEnd_);
      }
      if (psfZMagnification_ != 0) {
        output.writeInt32(29, psfZMagnification_);
      }
      if (comBorder_ != 0D) {
        output.writeDouble(30, comBorder_);
      }
      if (outputType_ != 0) {
        output.writeInt32(31, outputType_);
      }
      if (!getSplineFilenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 32, splineFilename_);
      }
      if (cropToZCentre_ != false) {
        output.writeBool(33, cropToZCentre_);
      }
      if (alignmentMode_ != 0) {
        output.writeInt32(34, alignmentMode_);
      }
      if (alignmentZRadius_ != 0D) {
        output.writeDouble(35, alignmentZRadius_);
      }
      if (updateRoi_ != false) {
        output.writeBool(36, updateRoi_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mode_);
      }
      if (radius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, radius_);
      }
      if (interactiveMode_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, interactiveMode_);
      }
      if (nmPerSlice_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, nmPerSlice_);
      }
      if (fitEngineSettings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFitEngineSettings());
      }
      if (psf_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPsf());
      }
      if (amplitudeFraction_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, amplitudeFraction_);
      }
      if (startBackgroundFrames_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, startBackgroundFrames_);
      }
      if (endBackgroundFrames_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, endBackgroundFrames_);
      }
      if (magnification_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, magnification_);
      }
      if (smoothing_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, smoothing_);
      }
      if (centreEachSlice_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, centreEachSlice_);
      }
      if (comCutOff_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, comCutOff_);
      }
      if (interpolationMethod_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, interpolationMethod_);
      }
      if (psfType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, psfType_);
      }
      if (calibration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getCalibration());
      }
      if (analysisWindow_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, analysisWindow_);
      }
      if (comWindow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, comWindow_);
      }
      if (alignmentMagnification_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, alignmentMagnification_);
      }
      if (maxIterations_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, maxIterations_);
      }
      if (checkAlignments_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, checkAlignments_);
      }
      if (psfMagnification_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, psfMagnification_);
      }
      if (window_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, window_);
      }
      if (smoothStackSignal_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, smoothStackSignal_);
      }
      if (singlePrecision_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, singlePrecision_);
      }
      if (cropBorder_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, cropBorder_);
      }
      if (cropStart_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, cropStart_);
      }
      if (cropEnd_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, cropEnd_);
      }
      if (psfZMagnification_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, psfZMagnification_);
      }
      if (comBorder_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(30, comBorder_);
      }
      if (outputType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, outputType_);
      }
      if (!getSplineFilenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(32, splineFilename_);
      }
      if (cropToZCentre_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(33, cropToZCentre_);
      }
      if (alignmentMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, alignmentMode_);
      }
      if (alignmentZRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(35, alignmentZRadius_);
      }
      if (updateRoi_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(36, updateRoi_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings other = (gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings) obj;

      boolean result = true;
      result = result && (getMode()
          == other.getMode());
      result = result && (
          java.lang.Double.doubleToLongBits(getRadius())
          == java.lang.Double.doubleToLongBits(
              other.getRadius()));
      result = result && (getInteractiveMode()
          == other.getInteractiveMode());
      result = result && (
          java.lang.Double.doubleToLongBits(getNmPerSlice())
          == java.lang.Double.doubleToLongBits(
              other.getNmPerSlice()));
      result = result && (hasFitEngineSettings() == other.hasFitEngineSettings());
      if (hasFitEngineSettings()) {
        result = result && getFitEngineSettings()
            .equals(other.getFitEngineSettings());
      }
      result = result && (hasPsf() == other.hasPsf());
      if (hasPsf()) {
        result = result && getPsf()
            .equals(other.getPsf());
      }
      result = result && (
          java.lang.Double.doubleToLongBits(getAmplitudeFraction())
          == java.lang.Double.doubleToLongBits(
              other.getAmplitudeFraction()));
      result = result && (getStartBackgroundFrames()
          == other.getStartBackgroundFrames());
      result = result && (getEndBackgroundFrames()
          == other.getEndBackgroundFrames());
      result = result && (getMagnification()
          == other.getMagnification());
      result = result && (
          java.lang.Double.doubleToLongBits(getSmoothing())
          == java.lang.Double.doubleToLongBits(
              other.getSmoothing()));
      result = result && (getCentreEachSlice()
          == other.getCentreEachSlice());
      result = result && (
          java.lang.Double.doubleToLongBits(getComCutOff())
          == java.lang.Double.doubleToLongBits(
              other.getComCutOff()));
      result = result && (getInterpolationMethod()
          == other.getInterpolationMethod());
      result = result && (getPsfType()
          == other.getPsfType());
      result = result && (hasCalibration() == other.hasCalibration());
      if (hasCalibration()) {
        result = result && getCalibration()
            .equals(other.getCalibration());
      }
      result = result && (
          java.lang.Double.doubleToLongBits(getAnalysisWindow())
          == java.lang.Double.doubleToLongBits(
              other.getAnalysisWindow()));
      result = result && (getComWindow()
          == other.getComWindow());
      result = result && (getAlignmentMagnification()
          == other.getAlignmentMagnification());
      result = result && (getMaxIterations()
          == other.getMaxIterations());
      result = result && (getCheckAlignments()
          == other.getCheckAlignments());
      result = result && (getPsfMagnification()
          == other.getPsfMagnification());
      result = result && (getWindow()
          == other.getWindow());
      result = result && (getSmoothStackSignal()
          == other.getSmoothStackSignal());
      result = result && (getSinglePrecision()
          == other.getSinglePrecision());
      result = result && (getCropBorder()
          == other.getCropBorder());
      result = result && (getCropStart()
          == other.getCropStart());
      result = result && (getCropEnd()
          == other.getCropEnd());
      result = result && (getPsfZMagnification()
          == other.getPsfZMagnification());
      result = result && (
          java.lang.Double.doubleToLongBits(getComBorder())
          == java.lang.Double.doubleToLongBits(
              other.getComBorder()));
      result = result && (getOutputType()
          == other.getOutputType());
      result = result && getSplineFilename()
          .equals(other.getSplineFilename());
      result = result && (getCropToZCentre()
          == other.getCropToZCentre());
      result = result && (getAlignmentMode()
          == other.getAlignmentMode());
      result = result && (
          java.lang.Double.doubleToLongBits(getAlignmentZRadius())
          == java.lang.Double.doubleToLongBits(
              other.getAlignmentZRadius()));
      result = result && (getUpdateRoi()
          == other.getUpdateRoi());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode();
      hash = (37 * hash) + RADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRadius()));
      hash = (37 * hash) + INTERACTIVE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInteractiveMode());
      hash = (37 * hash) + NM_PER_SLICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNmPerSlice()));
      if (hasFitEngineSettings()) {
        hash = (37 * hash) + FIT_ENGINE_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getFitEngineSettings().hashCode();
      }
      if (hasPsf()) {
        hash = (37 * hash) + PSF_FIELD_NUMBER;
        hash = (53 * hash) + getPsf().hashCode();
      }
      hash = (37 * hash) + AMPLITUDE_FRACTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAmplitudeFraction()));
      hash = (37 * hash) + START_BACKGROUND_FRAMES_FIELD_NUMBER;
      hash = (53 * hash) + getStartBackgroundFrames();
      hash = (37 * hash) + END_BACKGROUND_FRAMES_FIELD_NUMBER;
      hash = (53 * hash) + getEndBackgroundFrames();
      hash = (37 * hash) + MAGNIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getMagnification();
      hash = (37 * hash) + SMOOTHING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSmoothing()));
      hash = (37 * hash) + CENTRE_EACH_SLICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCentreEachSlice());
      hash = (37 * hash) + COM_CUT_OFF_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getComCutOff()));
      hash = (37 * hash) + INTERPOLATION_METHOD_FIELD_NUMBER;
      hash = (53 * hash) + getInterpolationMethod();
      hash = (37 * hash) + PSFTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getPsfType();
      if (hasCalibration()) {
        hash = (37 * hash) + CALIBRATION_FIELD_NUMBER;
        hash = (53 * hash) + getCalibration().hashCode();
      }
      hash = (37 * hash) + ANALYSIS_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAnalysisWindow()));
      hash = (37 * hash) + COM_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getComWindow();
      hash = (37 * hash) + ALIGNMENT_MAGNIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getAlignmentMagnification();
      hash = (37 * hash) + MAXITERATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxIterations();
      hash = (37 * hash) + CHECK_ALIGNMENTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCheckAlignments());
      hash = (37 * hash) + PSF_MAGNIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getPsfMagnification();
      hash = (37 * hash) + WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getWindow();
      hash = (37 * hash) + SMOOTH_STACK_SIGNAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSmoothStackSignal());
      hash = (37 * hash) + SINGLE_PRECISION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSinglePrecision());
      hash = (37 * hash) + CROP_BORDER_FIELD_NUMBER;
      hash = (53 * hash) + getCropBorder();
      hash = (37 * hash) + CROP_START_FIELD_NUMBER;
      hash = (53 * hash) + getCropStart();
      hash = (37 * hash) + CROP_END_FIELD_NUMBER;
      hash = (53 * hash) + getCropEnd();
      hash = (37 * hash) + PSF_Z_MAGNIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getPsfZMagnification();
      hash = (37 * hash) + COM_BORDER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getComBorder()));
      hash = (37 * hash) + OUTPUT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getOutputType();
      hash = (37 * hash) + SPLINE_FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getSplineFilename().hashCode();
      hash = (37 * hash) + CROP_TO_Z_CENTRE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCropToZCentre());
      hash = (37 * hash) + ALIGNMENT_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getAlignmentMode();
      hash = (37 * hash) + ALIGNMENT_Z_RADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAlignmentZRadius()));
      hash = (37 * hash) + UPDATE_ROI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUpdateRoi());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains settings for the PSF Creator plugin
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.PSFCreatorSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.PSFCreatorSettings)
        gdsc.smlm.data.config.GUIProtos.PSFCreatorSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCreatorSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCreatorSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings.class, gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 0;

        radius_ = 0D;

        interactiveMode_ = false;

        nmPerSlice_ = 0D;

        if (fitEngineSettingsBuilder_ == null) {
          fitEngineSettings_ = null;
        } else {
          fitEngineSettings_ = null;
          fitEngineSettingsBuilder_ = null;
        }
        if (psfBuilder_ == null) {
          psf_ = null;
        } else {
          psf_ = null;
          psfBuilder_ = null;
        }
        amplitudeFraction_ = 0D;

        startBackgroundFrames_ = 0;

        endBackgroundFrames_ = 0;

        magnification_ = 0;

        smoothing_ = 0D;

        centreEachSlice_ = false;

        comCutOff_ = 0D;

        interpolationMethod_ = 0;

        psfType_ = 0;

        if (calibrationBuilder_ == null) {
          calibration_ = null;
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }
        analysisWindow_ = 0D;

        comWindow_ = 0;

        alignmentMagnification_ = 0;

        maxIterations_ = 0;

        checkAlignments_ = false;

        psfMagnification_ = 0;

        window_ = 0;

        smoothStackSignal_ = false;

        singlePrecision_ = false;

        cropBorder_ = 0;

        cropStart_ = 0;

        cropEnd_ = 0;

        psfZMagnification_ = 0;

        comBorder_ = 0D;

        outputType_ = 0;

        splineFilename_ = "";

        cropToZCentre_ = false;

        alignmentMode_ = 0;

        alignmentZRadius_ = 0D;

        updateRoi_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_PSFCreatorSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings build() {
        gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings result = new gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings(this);
        result.mode_ = mode_;
        result.radius_ = radius_;
        result.interactiveMode_ = interactiveMode_;
        result.nmPerSlice_ = nmPerSlice_;
        if (fitEngineSettingsBuilder_ == null) {
          result.fitEngineSettings_ = fitEngineSettings_;
        } else {
          result.fitEngineSettings_ = fitEngineSettingsBuilder_.build();
        }
        if (psfBuilder_ == null) {
          result.psf_ = psf_;
        } else {
          result.psf_ = psfBuilder_.build();
        }
        result.amplitudeFraction_ = amplitudeFraction_;
        result.startBackgroundFrames_ = startBackgroundFrames_;
        result.endBackgroundFrames_ = endBackgroundFrames_;
        result.magnification_ = magnification_;
        result.smoothing_ = smoothing_;
        result.centreEachSlice_ = centreEachSlice_;
        result.comCutOff_ = comCutOff_;
        result.interpolationMethod_ = interpolationMethod_;
        result.psfType_ = psfType_;
        if (calibrationBuilder_ == null) {
          result.calibration_ = calibration_;
        } else {
          result.calibration_ = calibrationBuilder_.build();
        }
        result.analysisWindow_ = analysisWindow_;
        result.comWindow_ = comWindow_;
        result.alignmentMagnification_ = alignmentMagnification_;
        result.maxIterations_ = maxIterations_;
        result.checkAlignments_ = checkAlignments_;
        result.psfMagnification_ = psfMagnification_;
        result.window_ = window_;
        result.smoothStackSignal_ = smoothStackSignal_;
        result.singlePrecision_ = singlePrecision_;
        result.cropBorder_ = cropBorder_;
        result.cropStart_ = cropStart_;
        result.cropEnd_ = cropEnd_;
        result.psfZMagnification_ = psfZMagnification_;
        result.comBorder_ = comBorder_;
        result.outputType_ = outputType_;
        result.splineFilename_ = splineFilename_;
        result.cropToZCentre_ = cropToZCentre_;
        result.alignmentMode_ = alignmentMode_;
        result.alignmentZRadius_ = alignmentZRadius_;
        result.updateRoi_ = updateRoi_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings.getDefaultInstance()) return this;
        if (other.getMode() != 0) {
          setMode(other.getMode());
        }
        if (other.getRadius() != 0D) {
          setRadius(other.getRadius());
        }
        if (other.getInteractiveMode() != false) {
          setInteractiveMode(other.getInteractiveMode());
        }
        if (other.getNmPerSlice() != 0D) {
          setNmPerSlice(other.getNmPerSlice());
        }
        if (other.hasFitEngineSettings()) {
          mergeFitEngineSettings(other.getFitEngineSettings());
        }
        if (other.hasPsf()) {
          mergePsf(other.getPsf());
        }
        if (other.getAmplitudeFraction() != 0D) {
          setAmplitudeFraction(other.getAmplitudeFraction());
        }
        if (other.getStartBackgroundFrames() != 0) {
          setStartBackgroundFrames(other.getStartBackgroundFrames());
        }
        if (other.getEndBackgroundFrames() != 0) {
          setEndBackgroundFrames(other.getEndBackgroundFrames());
        }
        if (other.getMagnification() != 0) {
          setMagnification(other.getMagnification());
        }
        if (other.getSmoothing() != 0D) {
          setSmoothing(other.getSmoothing());
        }
        if (other.getCentreEachSlice() != false) {
          setCentreEachSlice(other.getCentreEachSlice());
        }
        if (other.getComCutOff() != 0D) {
          setComCutOff(other.getComCutOff());
        }
        if (other.getInterpolationMethod() != 0) {
          setInterpolationMethod(other.getInterpolationMethod());
        }
        if (other.getPsfType() != 0) {
          setPsfType(other.getPsfType());
        }
        if (other.hasCalibration()) {
          mergeCalibration(other.getCalibration());
        }
        if (other.getAnalysisWindow() != 0D) {
          setAnalysisWindow(other.getAnalysisWindow());
        }
        if (other.getComWindow() != 0) {
          setComWindow(other.getComWindow());
        }
        if (other.getAlignmentMagnification() != 0) {
          setAlignmentMagnification(other.getAlignmentMagnification());
        }
        if (other.getMaxIterations() != 0) {
          setMaxIterations(other.getMaxIterations());
        }
        if (other.getCheckAlignments() != false) {
          setCheckAlignments(other.getCheckAlignments());
        }
        if (other.getPsfMagnification() != 0) {
          setPsfMagnification(other.getPsfMagnification());
        }
        if (other.getWindow() != 0) {
          setWindow(other.getWindow());
        }
        if (other.getSmoothStackSignal() != false) {
          setSmoothStackSignal(other.getSmoothStackSignal());
        }
        if (other.getSinglePrecision() != false) {
          setSinglePrecision(other.getSinglePrecision());
        }
        if (other.getCropBorder() != 0) {
          setCropBorder(other.getCropBorder());
        }
        if (other.getCropStart() != 0) {
          setCropStart(other.getCropStart());
        }
        if (other.getCropEnd() != 0) {
          setCropEnd(other.getCropEnd());
        }
        if (other.getPsfZMagnification() != 0) {
          setPsfZMagnification(other.getPsfZMagnification());
        }
        if (other.getComBorder() != 0D) {
          setComBorder(other.getComBorder());
        }
        if (other.getOutputType() != 0) {
          setOutputType(other.getOutputType());
        }
        if (!other.getSplineFilename().isEmpty()) {
          splineFilename_ = other.splineFilename_;
          onChanged();
        }
        if (other.getCropToZCentre() != false) {
          setCropToZCentre(other.getCropToZCentre());
        }
        if (other.getAlignmentMode() != 0) {
          setAlignmentMode(other.getAlignmentMode());
        }
        if (other.getAlignmentZRadius() != 0D) {
          setAlignmentZRadius(other.getAlignmentZRadius());
        }
        if (other.getUpdateRoi() != false) {
          setUpdateRoi(other.getUpdateRoi());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mode_ ;
      /**
       * <code>int32 mode = 1;</code>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>int32 mode = 1;</code>
       */
      public Builder setMode(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 mode = 1;</code>
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private double radius_ ;
      /**
       * <code>double radius = 2;</code>
       */
      public double getRadius() {
        return radius_;
      }
      /**
       * <code>double radius = 2;</code>
       */
      public Builder setRadius(double value) {
        
        radius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double radius = 2;</code>
       */
      public Builder clearRadius() {
        
        radius_ = 0D;
        onChanged();
        return this;
      }

      private boolean interactiveMode_ ;
      /**
       * <code>bool interactive_mode = 3;</code>
       */
      public boolean getInteractiveMode() {
        return interactiveMode_;
      }
      /**
       * <code>bool interactive_mode = 3;</code>
       */
      public Builder setInteractiveMode(boolean value) {
        
        interactiveMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool interactive_mode = 3;</code>
       */
      public Builder clearInteractiveMode() {
        
        interactiveMode_ = false;
        onChanged();
        return this;
      }

      private double nmPerSlice_ ;
      /**
       * <code>double nm_per_slice = 4;</code>
       */
      public double getNmPerSlice() {
        return nmPerSlice_;
      }
      /**
       * <code>double nm_per_slice = 4;</code>
       */
      public Builder setNmPerSlice(double value) {
        
        nmPerSlice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double nm_per_slice = 4;</code>
       */
      public Builder clearNmPerSlice() {
        
        nmPerSlice_ = 0D;
        onChanged();
        return this;
      }

      private gdsc.smlm.data.config.FitProtos.FitEngineSettings fitEngineSettings_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.FitProtos.FitEngineSettings, gdsc.smlm.data.config.FitProtos.FitEngineSettings.Builder, gdsc.smlm.data.config.FitProtos.FitEngineSettingsOrBuilder> fitEngineSettingsBuilder_;
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public boolean hasFitEngineSettings() {
        return fitEngineSettingsBuilder_ != null || fitEngineSettings_ != null;
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public gdsc.smlm.data.config.FitProtos.FitEngineSettings getFitEngineSettings() {
        if (fitEngineSettingsBuilder_ == null) {
          return fitEngineSettings_ == null ? gdsc.smlm.data.config.FitProtos.FitEngineSettings.getDefaultInstance() : fitEngineSettings_;
        } else {
          return fitEngineSettingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public Builder setFitEngineSettings(gdsc.smlm.data.config.FitProtos.FitEngineSettings value) {
        if (fitEngineSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fitEngineSettings_ = value;
          onChanged();
        } else {
          fitEngineSettingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public Builder setFitEngineSettings(
          gdsc.smlm.data.config.FitProtos.FitEngineSettings.Builder builderForValue) {
        if (fitEngineSettingsBuilder_ == null) {
          fitEngineSettings_ = builderForValue.build();
          onChanged();
        } else {
          fitEngineSettingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public Builder mergeFitEngineSettings(gdsc.smlm.data.config.FitProtos.FitEngineSettings value) {
        if (fitEngineSettingsBuilder_ == null) {
          if (fitEngineSettings_ != null) {
            fitEngineSettings_ =
              gdsc.smlm.data.config.FitProtos.FitEngineSettings.newBuilder(fitEngineSettings_).mergeFrom(value).buildPartial();
          } else {
            fitEngineSettings_ = value;
          }
          onChanged();
        } else {
          fitEngineSettingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public Builder clearFitEngineSettings() {
        if (fitEngineSettingsBuilder_ == null) {
          fitEngineSettings_ = null;
          onChanged();
        } else {
          fitEngineSettings_ = null;
          fitEngineSettingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public gdsc.smlm.data.config.FitProtos.FitEngineSettings.Builder getFitEngineSettingsBuilder() {
        
        onChanged();
        return getFitEngineSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      public gdsc.smlm.data.config.FitProtos.FitEngineSettingsOrBuilder getFitEngineSettingsOrBuilder() {
        if (fitEngineSettingsBuilder_ != null) {
          return fitEngineSettingsBuilder_.getMessageOrBuilder();
        } else {
          return fitEngineSettings_ == null ?
              gdsc.smlm.data.config.FitProtos.FitEngineSettings.getDefaultInstance() : fitEngineSettings_;
        }
      }
      /**
       * <pre>
       * For the fitting mode
       * </pre>
       *
       * <code>.gdsc.smlm.data.config.FitEngineSettings fit_engine_settings = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.FitProtos.FitEngineSettings, gdsc.smlm.data.config.FitProtos.FitEngineSettings.Builder, gdsc.smlm.data.config.FitProtos.FitEngineSettingsOrBuilder> 
          getFitEngineSettingsFieldBuilder() {
        if (fitEngineSettingsBuilder_ == null) {
          fitEngineSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gdsc.smlm.data.config.FitProtos.FitEngineSettings, gdsc.smlm.data.config.FitProtos.FitEngineSettings.Builder, gdsc.smlm.data.config.FitProtos.FitEngineSettingsOrBuilder>(
                  getFitEngineSettings(),
                  getParentForChildren(),
                  isClean());
          fitEngineSettings_ = null;
        }
        return fitEngineSettingsBuilder_;
      }

      private gdsc.smlm.data.config.PSFProtos.PSF psf_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.PSFProtos.PSF, gdsc.smlm.data.config.PSFProtos.PSF.Builder, gdsc.smlm.data.config.PSFProtos.PSFOrBuilder> psfBuilder_;
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public boolean hasPsf() {
        return psfBuilder_ != null || psf_ != null;
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public gdsc.smlm.data.config.PSFProtos.PSF getPsf() {
        if (psfBuilder_ == null) {
          return psf_ == null ? gdsc.smlm.data.config.PSFProtos.PSF.getDefaultInstance() : psf_;
        } else {
          return psfBuilder_.getMessage();
        }
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public Builder setPsf(gdsc.smlm.data.config.PSFProtos.PSF value) {
        if (psfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          psf_ = value;
          onChanged();
        } else {
          psfBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public Builder setPsf(
          gdsc.smlm.data.config.PSFProtos.PSF.Builder builderForValue) {
        if (psfBuilder_ == null) {
          psf_ = builderForValue.build();
          onChanged();
        } else {
          psfBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public Builder mergePsf(gdsc.smlm.data.config.PSFProtos.PSF value) {
        if (psfBuilder_ == null) {
          if (psf_ != null) {
            psf_ =
              gdsc.smlm.data.config.PSFProtos.PSF.newBuilder(psf_).mergeFrom(value).buildPartial();
          } else {
            psf_ = value;
          }
          onChanged();
        } else {
          psfBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public Builder clearPsf() {
        if (psfBuilder_ == null) {
          psf_ = null;
          onChanged();
        } else {
          psf_ = null;
          psfBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public gdsc.smlm.data.config.PSFProtos.PSF.Builder getPsfBuilder() {
        
        onChanged();
        return getPsfFieldBuilder().getBuilder();
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      public gdsc.smlm.data.config.PSFProtos.PSFOrBuilder getPsfOrBuilder() {
        if (psfBuilder_ != null) {
          return psfBuilder_.getMessageOrBuilder();
        } else {
          return psf_ == null ?
              gdsc.smlm.data.config.PSFProtos.PSF.getDefaultInstance() : psf_;
        }
      }
      /**
       * <code>.gdsc.smlm.data.config.PSF psf = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.PSFProtos.PSF, gdsc.smlm.data.config.PSFProtos.PSF.Builder, gdsc.smlm.data.config.PSFProtos.PSFOrBuilder> 
          getPsfFieldBuilder() {
        if (psfBuilder_ == null) {
          psfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gdsc.smlm.data.config.PSFProtos.PSF, gdsc.smlm.data.config.PSFProtos.PSF.Builder, gdsc.smlm.data.config.PSFProtos.PSFOrBuilder>(
                  getPsf(),
                  getParentForChildren(),
                  isClean());
          psf_ = null;
        }
        return psfBuilder_;
      }

      private double amplitudeFraction_ ;
      /**
       * <code>double amplitude_fraction = 7;</code>
       */
      public double getAmplitudeFraction() {
        return amplitudeFraction_;
      }
      /**
       * <code>double amplitude_fraction = 7;</code>
       */
      public Builder setAmplitudeFraction(double value) {
        
        amplitudeFraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double amplitude_fraction = 7;</code>
       */
      public Builder clearAmplitudeFraction() {
        
        amplitudeFraction_ = 0D;
        onChanged();
        return this;
      }

      private int startBackgroundFrames_ ;
      /**
       * <code>int32 start_background_frames = 8;</code>
       */
      public int getStartBackgroundFrames() {
        return startBackgroundFrames_;
      }
      /**
       * <code>int32 start_background_frames = 8;</code>
       */
      public Builder setStartBackgroundFrames(int value) {
        
        startBackgroundFrames_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 start_background_frames = 8;</code>
       */
      public Builder clearStartBackgroundFrames() {
        
        startBackgroundFrames_ = 0;
        onChanged();
        return this;
      }

      private int endBackgroundFrames_ ;
      /**
       * <code>int32 end_background_frames = 9;</code>
       */
      public int getEndBackgroundFrames() {
        return endBackgroundFrames_;
      }
      /**
       * <code>int32 end_background_frames = 9;</code>
       */
      public Builder setEndBackgroundFrames(int value) {
        
        endBackgroundFrames_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 end_background_frames = 9;</code>
       */
      public Builder clearEndBackgroundFrames() {
        
        endBackgroundFrames_ = 0;
        onChanged();
        return this;
      }

      private int magnification_ ;
      /**
       * <code>int32 magnification = 10;</code>
       */
      public int getMagnification() {
        return magnification_;
      }
      /**
       * <code>int32 magnification = 10;</code>
       */
      public Builder setMagnification(int value) {
        
        magnification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 magnification = 10;</code>
       */
      public Builder clearMagnification() {
        
        magnification_ = 0;
        onChanged();
        return this;
      }

      private double smoothing_ ;
      /**
       * <code>double smoothing = 11;</code>
       */
      public double getSmoothing() {
        return smoothing_;
      }
      /**
       * <code>double smoothing = 11;</code>
       */
      public Builder setSmoothing(double value) {
        
        smoothing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double smoothing = 11;</code>
       */
      public Builder clearSmoothing() {
        
        smoothing_ = 0D;
        onChanged();
        return this;
      }

      private boolean centreEachSlice_ ;
      /**
       * <code>bool centre_each_slice = 12;</code>
       */
      public boolean getCentreEachSlice() {
        return centreEachSlice_;
      }
      /**
       * <code>bool centre_each_slice = 12;</code>
       */
      public Builder setCentreEachSlice(boolean value) {
        
        centreEachSlice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool centre_each_slice = 12;</code>
       */
      public Builder clearCentreEachSlice() {
        
        centreEachSlice_ = false;
        onChanged();
        return this;
      }

      private double comCutOff_ ;
      /**
       * <code>double com_cut_off = 13;</code>
       */
      public double getComCutOff() {
        return comCutOff_;
      }
      /**
       * <code>double com_cut_off = 13;</code>
       */
      public Builder setComCutOff(double value) {
        
        comCutOff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double com_cut_off = 13;</code>
       */
      public Builder clearComCutOff() {
        
        comCutOff_ = 0D;
        onChanged();
        return this;
      }

      private int interpolationMethod_ ;
      /**
       * <code>int32 interpolation_method = 14;</code>
       */
      public int getInterpolationMethod() {
        return interpolationMethod_;
      }
      /**
       * <code>int32 interpolation_method = 14;</code>
       */
      public Builder setInterpolationMethod(int value) {
        
        interpolationMethod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 interpolation_method = 14;</code>
       */
      public Builder clearInterpolationMethod() {
        
        interpolationMethod_ = 0;
        onChanged();
        return this;
      }

      private int psfType_ ;
      /**
       * <code>int32 psfType = 15;</code>
       */
      public int getPsfType() {
        return psfType_;
      }
      /**
       * <code>int32 psfType = 15;</code>
       */
      public Builder setPsfType(int value) {
        
        psfType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 psfType = 15;</code>
       */
      public Builder clearPsfType() {
        
        psfType_ = 0;
        onChanged();
        return this;
      }

      private gdsc.smlm.data.config.CalibrationProtos.Calibration calibration_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.CalibrationProtos.Calibration, gdsc.smlm.data.config.CalibrationProtos.Calibration.Builder, gdsc.smlm.data.config.CalibrationProtos.CalibrationOrBuilder> calibrationBuilder_;
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public boolean hasCalibration() {
        return calibrationBuilder_ != null || calibration_ != null;
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public gdsc.smlm.data.config.CalibrationProtos.Calibration getCalibration() {
        if (calibrationBuilder_ == null) {
          return calibration_ == null ? gdsc.smlm.data.config.CalibrationProtos.Calibration.getDefaultInstance() : calibration_;
        } else {
          return calibrationBuilder_.getMessage();
        }
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public Builder setCalibration(gdsc.smlm.data.config.CalibrationProtos.Calibration value) {
        if (calibrationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calibration_ = value;
          onChanged();
        } else {
          calibrationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public Builder setCalibration(
          gdsc.smlm.data.config.CalibrationProtos.Calibration.Builder builderForValue) {
        if (calibrationBuilder_ == null) {
          calibration_ = builderForValue.build();
          onChanged();
        } else {
          calibrationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public Builder mergeCalibration(gdsc.smlm.data.config.CalibrationProtos.Calibration value) {
        if (calibrationBuilder_ == null) {
          if (calibration_ != null) {
            calibration_ =
              gdsc.smlm.data.config.CalibrationProtos.Calibration.newBuilder(calibration_).mergeFrom(value).buildPartial();
          } else {
            calibration_ = value;
          }
          onChanged();
        } else {
          calibrationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public Builder clearCalibration() {
        if (calibrationBuilder_ == null) {
          calibration_ = null;
          onChanged();
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public gdsc.smlm.data.config.CalibrationProtos.Calibration.Builder getCalibrationBuilder() {
        
        onChanged();
        return getCalibrationFieldBuilder().getBuilder();
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      public gdsc.smlm.data.config.CalibrationProtos.CalibrationOrBuilder getCalibrationOrBuilder() {
        if (calibrationBuilder_ != null) {
          return calibrationBuilder_.getMessageOrBuilder();
        } else {
          return calibration_ == null ?
              gdsc.smlm.data.config.CalibrationProtos.Calibration.getDefaultInstance() : calibration_;
        }
      }
      /**
       * <code>.gdsc.smlm.data.config.Calibration calibration = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gdsc.smlm.data.config.CalibrationProtos.Calibration, gdsc.smlm.data.config.CalibrationProtos.Calibration.Builder, gdsc.smlm.data.config.CalibrationProtos.CalibrationOrBuilder> 
          getCalibrationFieldBuilder() {
        if (calibrationBuilder_ == null) {
          calibrationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gdsc.smlm.data.config.CalibrationProtos.Calibration, gdsc.smlm.data.config.CalibrationProtos.Calibration.Builder, gdsc.smlm.data.config.CalibrationProtos.CalibrationOrBuilder>(
                  getCalibration(),
                  getParentForChildren(),
                  isClean());
          calibration_ = null;
        }
        return calibrationBuilder_;
      }

      private double analysisWindow_ ;
      /**
       * <code>double analysis_window = 17;</code>
       */
      public double getAnalysisWindow() {
        return analysisWindow_;
      }
      /**
       * <code>double analysis_window = 17;</code>
       */
      public Builder setAnalysisWindow(double value) {
        
        analysisWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double analysis_window = 17;</code>
       */
      public Builder clearAnalysisWindow() {
        
        analysisWindow_ = 0D;
        onChanged();
        return this;
      }

      private int comWindow_ ;
      /**
       * <code>int32 com_window = 18;</code>
       */
      public int getComWindow() {
        return comWindow_;
      }
      /**
       * <code>int32 com_window = 18;</code>
       */
      public Builder setComWindow(int value) {
        
        comWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 com_window = 18;</code>
       */
      public Builder clearComWindow() {
        
        comWindow_ = 0;
        onChanged();
        return this;
      }

      private int alignmentMagnification_ ;
      /**
       * <code>int32 alignment_magnification = 19;</code>
       */
      public int getAlignmentMagnification() {
        return alignmentMagnification_;
      }
      /**
       * <code>int32 alignment_magnification = 19;</code>
       */
      public Builder setAlignmentMagnification(int value) {
        
        alignmentMagnification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 alignment_magnification = 19;</code>
       */
      public Builder clearAlignmentMagnification() {
        
        alignmentMagnification_ = 0;
        onChanged();
        return this;
      }

      private int maxIterations_ ;
      /**
       * <code>int32 maxIterations = 20;</code>
       */
      public int getMaxIterations() {
        return maxIterations_;
      }
      /**
       * <code>int32 maxIterations = 20;</code>
       */
      public Builder setMaxIterations(int value) {
        
        maxIterations_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxIterations = 20;</code>
       */
      public Builder clearMaxIterations() {
        
        maxIterations_ = 0;
        onChanged();
        return this;
      }

      private boolean checkAlignments_ ;
      /**
       * <code>bool check_alignments = 21;</code>
       */
      public boolean getCheckAlignments() {
        return checkAlignments_;
      }
      /**
       * <code>bool check_alignments = 21;</code>
       */
      public Builder setCheckAlignments(boolean value) {
        
        checkAlignments_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool check_alignments = 21;</code>
       */
      public Builder clearCheckAlignments() {
        
        checkAlignments_ = false;
        onChanged();
        return this;
      }

      private int psfMagnification_ ;
      /**
       * <code>int32 psf_magnification = 22;</code>
       */
      public int getPsfMagnification() {
        return psfMagnification_;
      }
      /**
       * <code>int32 psf_magnification = 22;</code>
       */
      public Builder setPsfMagnification(int value) {
        
        psfMagnification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 psf_magnification = 22;</code>
       */
      public Builder clearPsfMagnification() {
        
        psfMagnification_ = 0;
        onChanged();
        return this;
      }

      private int window_ ;
      /**
       * <code>int32 window = 23;</code>
       */
      public int getWindow() {
        return window_;
      }
      /**
       * <code>int32 window = 23;</code>
       */
      public Builder setWindow(int value) {
        
        window_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 window = 23;</code>
       */
      public Builder clearWindow() {
        
        window_ = 0;
        onChanged();
        return this;
      }

      private boolean smoothStackSignal_ ;
      /**
       * <code>bool smooth_stack_signal = 24;</code>
       */
      public boolean getSmoothStackSignal() {
        return smoothStackSignal_;
      }
      /**
       * <code>bool smooth_stack_signal = 24;</code>
       */
      public Builder setSmoothStackSignal(boolean value) {
        
        smoothStackSignal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool smooth_stack_signal = 24;</code>
       */
      public Builder clearSmoothStackSignal() {
        
        smoothStackSignal_ = false;
        onChanged();
        return this;
      }

      private boolean singlePrecision_ ;
      /**
       * <code>bool single_precision = 25;</code>
       */
      public boolean getSinglePrecision() {
        return singlePrecision_;
      }
      /**
       * <code>bool single_precision = 25;</code>
       */
      public Builder setSinglePrecision(boolean value) {
        
        singlePrecision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool single_precision = 25;</code>
       */
      public Builder clearSinglePrecision() {
        
        singlePrecision_ = false;
        onChanged();
        return this;
      }

      private int cropBorder_ ;
      /**
       * <code>int32 crop_border = 26;</code>
       */
      public int getCropBorder() {
        return cropBorder_;
      }
      /**
       * <code>int32 crop_border = 26;</code>
       */
      public Builder setCropBorder(int value) {
        
        cropBorder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 crop_border = 26;</code>
       */
      public Builder clearCropBorder() {
        
        cropBorder_ = 0;
        onChanged();
        return this;
      }

      private int cropStart_ ;
      /**
       * <code>int32 crop_start = 27;</code>
       */
      public int getCropStart() {
        return cropStart_;
      }
      /**
       * <code>int32 crop_start = 27;</code>
       */
      public Builder setCropStart(int value) {
        
        cropStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 crop_start = 27;</code>
       */
      public Builder clearCropStart() {
        
        cropStart_ = 0;
        onChanged();
        return this;
      }

      private int cropEnd_ ;
      /**
       * <code>int32 crop_end = 28;</code>
       */
      public int getCropEnd() {
        return cropEnd_;
      }
      /**
       * <code>int32 crop_end = 28;</code>
       */
      public Builder setCropEnd(int value) {
        
        cropEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 crop_end = 28;</code>
       */
      public Builder clearCropEnd() {
        
        cropEnd_ = 0;
        onChanged();
        return this;
      }

      private int psfZMagnification_ ;
      /**
       * <code>int32 psf_z_magnification = 29;</code>
       */
      public int getPsfZMagnification() {
        return psfZMagnification_;
      }
      /**
       * <code>int32 psf_z_magnification = 29;</code>
       */
      public Builder setPsfZMagnification(int value) {
        
        psfZMagnification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 psf_z_magnification = 29;</code>
       */
      public Builder clearPsfZMagnification() {
        
        psfZMagnification_ = 0;
        onChanged();
        return this;
      }

      private double comBorder_ ;
      /**
       * <code>double com_border = 30;</code>
       */
      public double getComBorder() {
        return comBorder_;
      }
      /**
       * <code>double com_border = 30;</code>
       */
      public Builder setComBorder(double value) {
        
        comBorder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double com_border = 30;</code>
       */
      public Builder clearComBorder() {
        
        comBorder_ = 0D;
        onChanged();
        return this;
      }

      private int outputType_ ;
      /**
       * <code>int32 output_type = 31;</code>
       */
      public int getOutputType() {
        return outputType_;
      }
      /**
       * <code>int32 output_type = 31;</code>
       */
      public Builder setOutputType(int value) {
        
        outputType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 output_type = 31;</code>
       */
      public Builder clearOutputType() {
        
        outputType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object splineFilename_ = "";
      /**
       * <code>string spline_filename = 32;</code>
       */
      public java.lang.String getSplineFilename() {
        java.lang.Object ref = splineFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          splineFilename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string spline_filename = 32;</code>
       */
      public com.google.protobuf.ByteString
          getSplineFilenameBytes() {
        java.lang.Object ref = splineFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          splineFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string spline_filename = 32;</code>
       */
      public Builder setSplineFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        splineFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string spline_filename = 32;</code>
       */
      public Builder clearSplineFilename() {
        
        splineFilename_ = getDefaultInstance().getSplineFilename();
        onChanged();
        return this;
      }
      /**
       * <code>string spline_filename = 32;</code>
       */
      public Builder setSplineFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        splineFilename_ = value;
        onChanged();
        return this;
      }

      private boolean cropToZCentre_ ;
      /**
       * <code>bool crop_to_z_centre = 33;</code>
       */
      public boolean getCropToZCentre() {
        return cropToZCentre_;
      }
      /**
       * <code>bool crop_to_z_centre = 33;</code>
       */
      public Builder setCropToZCentre(boolean value) {
        
        cropToZCentre_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool crop_to_z_centre = 33;</code>
       */
      public Builder clearCropToZCentre() {
        
        cropToZCentre_ = false;
        onChanged();
        return this;
      }

      private int alignmentMode_ ;
      /**
       * <code>int32 alignment_mode = 34;</code>
       */
      public int getAlignmentMode() {
        return alignmentMode_;
      }
      /**
       * <code>int32 alignment_mode = 34;</code>
       */
      public Builder setAlignmentMode(int value) {
        
        alignmentMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 alignment_mode = 34;</code>
       */
      public Builder clearAlignmentMode() {
        
        alignmentMode_ = 0;
        onChanged();
        return this;
      }

      private double alignmentZRadius_ ;
      /**
       * <code>double alignment_z_radius = 35;</code>
       */
      public double getAlignmentZRadius() {
        return alignmentZRadius_;
      }
      /**
       * <code>double alignment_z_radius = 35;</code>
       */
      public Builder setAlignmentZRadius(double value) {
        
        alignmentZRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double alignment_z_radius = 35;</code>
       */
      public Builder clearAlignmentZRadius() {
        
        alignmentZRadius_ = 0D;
        onChanged();
        return this;
      }

      private boolean updateRoi_ ;
      /**
       * <code>bool update_roi = 36;</code>
       */
      public boolean getUpdateRoi() {
        return updateRoi_;
      }
      /**
       * <code>bool update_roi = 36;</code>
       */
      public Builder setUpdateRoi(boolean value) {
        
        updateRoi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool update_roi = 36;</code>
       */
      public Builder clearUpdateRoi() {
        
        updateRoi_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.PSFCreatorSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.PSFCreatorSettings)
    private static final gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSFCreatorSettings>
        PARSER = new com.google.protobuf.AbstractParser<PSFCreatorSettings>() {
      public PSFCreatorSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PSFCreatorSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSFCreatorSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSFCreatorSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.PSFCreatorSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CameraModelManagerSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.CameraModelManagerSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 option = 1;</code>
     */
    int getOption();

    /**
     * <code>int32 origin_x = 2;</code>
     */
    int getOriginX();

    /**
     * <code>int32 origin_y = 3;</code>
     */
    int getOriginY();

    /**
     * <code>string image = 4;</code>
     */
    java.lang.String getImage();
    /**
     * <code>string image = 4;</code>
     */
    com.google.protobuf.ByteString
        getImageBytes();

    /**
     * <code>string selected = 5;</code>
     */
    java.lang.String getSelected();
    /**
     * <code>string selected = 5;</code>
     */
    com.google.protobuf.ByteString
        getSelectedBytes();
  }
  /**
   * <pre>
   * Contains settings for the Camera Model Manager plugin
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.CameraModelManagerSettings}
   */
  public  static final class CameraModelManagerSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.CameraModelManagerSettings)
      CameraModelManagerSettingsOrBuilder {
    // Use CameraModelManagerSettings.newBuilder() to construct.
    private CameraModelManagerSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CameraModelManagerSettings() {
      option_ = 0;
      originX_ = 0;
      originY_ = 0;
      image_ = "";
      selected_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CameraModelManagerSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              option_ = input.readInt32();
              break;
            }
            case 16: {

              originX_ = input.readInt32();
              break;
            }
            case 24: {

              originY_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              image_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              selected_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings.class, gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings.Builder.class);
    }

    public static final int OPTION_FIELD_NUMBER = 1;
    private int option_;
    /**
     * <code>int32 option = 1;</code>
     */
    public int getOption() {
      return option_;
    }

    public static final int ORIGIN_X_FIELD_NUMBER = 2;
    private int originX_;
    /**
     * <code>int32 origin_x = 2;</code>
     */
    public int getOriginX() {
      return originX_;
    }

    public static final int ORIGIN_Y_FIELD_NUMBER = 3;
    private int originY_;
    /**
     * <code>int32 origin_y = 3;</code>
     */
    public int getOriginY() {
      return originY_;
    }

    public static final int IMAGE_FIELD_NUMBER = 4;
    private volatile java.lang.Object image_;
    /**
     * <code>string image = 4;</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        image_ = s;
        return s;
      }
    }
    /**
     * <code>string image = 4;</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SELECTED_FIELD_NUMBER = 5;
    private volatile java.lang.Object selected_;
    /**
     * <code>string selected = 5;</code>
     */
    public java.lang.String getSelected() {
      java.lang.Object ref = selected_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        selected_ = s;
        return s;
      }
    }
    /**
     * <code>string selected = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSelectedBytes() {
      java.lang.Object ref = selected_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        selected_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (option_ != 0) {
        output.writeInt32(1, option_);
      }
      if (originX_ != 0) {
        output.writeInt32(2, originX_);
      }
      if (originY_ != 0) {
        output.writeInt32(3, originY_);
      }
      if (!getImageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, image_);
      }
      if (!getSelectedBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, selected_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (option_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, option_);
      }
      if (originX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, originX_);
      }
      if (originY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, originY_);
      }
      if (!getImageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, image_);
      }
      if (!getSelectedBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, selected_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings other = (gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings) obj;

      boolean result = true;
      result = result && (getOption()
          == other.getOption());
      result = result && (getOriginX()
          == other.getOriginX());
      result = result && (getOriginY()
          == other.getOriginY());
      result = result && getImage()
          .equals(other.getImage());
      result = result && getSelected()
          .equals(other.getSelected());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPTION_FIELD_NUMBER;
      hash = (53 * hash) + getOption();
      hash = (37 * hash) + ORIGIN_X_FIELD_NUMBER;
      hash = (53 * hash) + getOriginX();
      hash = (37 * hash) + ORIGIN_Y_FIELD_NUMBER;
      hash = (53 * hash) + getOriginY();
      hash = (37 * hash) + IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getImage().hashCode();
      hash = (37 * hash) + SELECTED_FIELD_NUMBER;
      hash = (53 * hash) + getSelected().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains settings for the Camera Model Manager plugin
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.CameraModelManagerSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.CameraModelManagerSettings)
        gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings.class, gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        option_ = 0;

        originX_ = 0;

        originY_ = 0;

        image_ = "";

        selected_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings build() {
        gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings result = new gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings(this);
        result.option_ = option_;
        result.originX_ = originX_;
        result.originY_ = originY_;
        result.image_ = image_;
        result.selected_ = selected_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings.getDefaultInstance()) return this;
        if (other.getOption() != 0) {
          setOption(other.getOption());
        }
        if (other.getOriginX() != 0) {
          setOriginX(other.getOriginX());
        }
        if (other.getOriginY() != 0) {
          setOriginY(other.getOriginY());
        }
        if (!other.getImage().isEmpty()) {
          image_ = other.image_;
          onChanged();
        }
        if (!other.getSelected().isEmpty()) {
          selected_ = other.selected_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int option_ ;
      /**
       * <code>int32 option = 1;</code>
       */
      public int getOption() {
        return option_;
      }
      /**
       * <code>int32 option = 1;</code>
       */
      public Builder setOption(int value) {
        
        option_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 option = 1;</code>
       */
      public Builder clearOption() {
        
        option_ = 0;
        onChanged();
        return this;
      }

      private int originX_ ;
      /**
       * <code>int32 origin_x = 2;</code>
       */
      public int getOriginX() {
        return originX_;
      }
      /**
       * <code>int32 origin_x = 2;</code>
       */
      public Builder setOriginX(int value) {
        
        originX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 origin_x = 2;</code>
       */
      public Builder clearOriginX() {
        
        originX_ = 0;
        onChanged();
        return this;
      }

      private int originY_ ;
      /**
       * <code>int32 origin_y = 3;</code>
       */
      public int getOriginY() {
        return originY_;
      }
      /**
       * <code>int32 origin_y = 3;</code>
       */
      public Builder setOriginY(int value) {
        
        originY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 origin_y = 3;</code>
       */
      public Builder clearOriginY() {
        
        originY_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object image_ = "";
      /**
       * <code>string image = 4;</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          image_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string image = 4;</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string image = 4;</code>
       */
      public Builder setImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        image_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string image = 4;</code>
       */
      public Builder clearImage() {
        
        image_ = getDefaultInstance().getImage();
        onChanged();
        return this;
      }
      /**
       * <code>string image = 4;</code>
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        image_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object selected_ = "";
      /**
       * <code>string selected = 5;</code>
       */
      public java.lang.String getSelected() {
        java.lang.Object ref = selected_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          selected_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string selected = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSelectedBytes() {
        java.lang.Object ref = selected_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          selected_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string selected = 5;</code>
       */
      public Builder setSelected(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        selected_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string selected = 5;</code>
       */
      public Builder clearSelected() {
        
        selected_ = getDefaultInstance().getSelected();
        onChanged();
        return this;
      }
      /**
       * <code>string selected = 5;</code>
       */
      public Builder setSelectedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        selected_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.CameraModelManagerSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.CameraModelManagerSettings)
    private static final gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CameraModelManagerSettings>
        PARSER = new com.google.protobuf.AbstractParser<CameraModelManagerSettings>() {
      public CameraModelManagerSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CameraModelManagerSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CameraModelManagerSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CameraModelManagerSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.CameraModelManagerSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CubicSplineManagerSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.CubicSplineManagerSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 option = 1;</code>
     */
    int getOption();

    /**
     * <code>string selected = 2;</code>
     */
    java.lang.String getSelected();
    /**
     * <code>string selected = 2;</code>
     */
    com.google.protobuf.ByteString
        getSelectedBytes();

    /**
     * <code>int32 magnification = 3;</code>
     */
    int getMagnification();

    /**
     * <code>int32 scale = 4;</code>
     */
    int getScale();

    /**
     * <code>double x_shift = 5;</code>
     */
    double getXShift();

    /**
     * <code>double y_shift = 6;</code>
     */
    double getYShift();

    /**
     * <code>double z_shift = 7;</code>
     */
    double getZShift();
  }
  /**
   * <pre>
   * Contains settings for the Cubic Spline Manager plugin
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.CubicSplineManagerSettings}
   */
  public  static final class CubicSplineManagerSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.CubicSplineManagerSettings)
      CubicSplineManagerSettingsOrBuilder {
    // Use CubicSplineManagerSettings.newBuilder() to construct.
    private CubicSplineManagerSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CubicSplineManagerSettings() {
      option_ = 0;
      selected_ = "";
      magnification_ = 0;
      scale_ = 0;
      xShift_ = 0D;
      yShift_ = 0D;
      zShift_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CubicSplineManagerSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              option_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              selected_ = s;
              break;
            }
            case 24: {

              magnification_ = input.readInt32();
              break;
            }
            case 32: {

              scale_ = input.readInt32();
              break;
            }
            case 41: {

              xShift_ = input.readDouble();
              break;
            }
            case 49: {

              yShift_ = input.readDouble();
              break;
            }
            case 57: {

              zShift_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings.class, gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings.Builder.class);
    }

    public static final int OPTION_FIELD_NUMBER = 1;
    private int option_;
    /**
     * <code>int32 option = 1;</code>
     */
    public int getOption() {
      return option_;
    }

    public static final int SELECTED_FIELD_NUMBER = 2;
    private volatile java.lang.Object selected_;
    /**
     * <code>string selected = 2;</code>
     */
    public java.lang.String getSelected() {
      java.lang.Object ref = selected_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        selected_ = s;
        return s;
      }
    }
    /**
     * <code>string selected = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSelectedBytes() {
      java.lang.Object ref = selected_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        selected_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAGNIFICATION_FIELD_NUMBER = 3;
    private int magnification_;
    /**
     * <code>int32 magnification = 3;</code>
     */
    public int getMagnification() {
      return magnification_;
    }

    public static final int SCALE_FIELD_NUMBER = 4;
    private int scale_;
    /**
     * <code>int32 scale = 4;</code>
     */
    public int getScale() {
      return scale_;
    }

    public static final int X_SHIFT_FIELD_NUMBER = 5;
    private double xShift_;
    /**
     * <code>double x_shift = 5;</code>
     */
    public double getXShift() {
      return xShift_;
    }

    public static final int Y_SHIFT_FIELD_NUMBER = 6;
    private double yShift_;
    /**
     * <code>double y_shift = 6;</code>
     */
    public double getYShift() {
      return yShift_;
    }

    public static final int Z_SHIFT_FIELD_NUMBER = 7;
    private double zShift_;
    /**
     * <code>double z_shift = 7;</code>
     */
    public double getZShift() {
      return zShift_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (option_ != 0) {
        output.writeInt32(1, option_);
      }
      if (!getSelectedBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, selected_);
      }
      if (magnification_ != 0) {
        output.writeInt32(3, magnification_);
      }
      if (scale_ != 0) {
        output.writeInt32(4, scale_);
      }
      if (xShift_ != 0D) {
        output.writeDouble(5, xShift_);
      }
      if (yShift_ != 0D) {
        output.writeDouble(6, yShift_);
      }
      if (zShift_ != 0D) {
        output.writeDouble(7, zShift_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (option_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, option_);
      }
      if (!getSelectedBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, selected_);
      }
      if (magnification_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, magnification_);
      }
      if (scale_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, scale_);
      }
      if (xShift_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, xShift_);
      }
      if (yShift_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, yShift_);
      }
      if (zShift_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, zShift_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings)) {
        return super.equals(obj);
      }
      gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings other = (gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings) obj;

      boolean result = true;
      result = result && (getOption()
          == other.getOption());
      result = result && getSelected()
          .equals(other.getSelected());
      result = result && (getMagnification()
          == other.getMagnification());
      result = result && (getScale()
          == other.getScale());
      result = result && (
          java.lang.Double.doubleToLongBits(getXShift())
          == java.lang.Double.doubleToLongBits(
              other.getXShift()));
      result = result && (
          java.lang.Double.doubleToLongBits(getYShift())
          == java.lang.Double.doubleToLongBits(
              other.getYShift()));
      result = result && (
          java.lang.Double.doubleToLongBits(getZShift())
          == java.lang.Double.doubleToLongBits(
              other.getZShift()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPTION_FIELD_NUMBER;
      hash = (53 * hash) + getOption();
      hash = (37 * hash) + SELECTED_FIELD_NUMBER;
      hash = (53 * hash) + getSelected().hashCode();
      hash = (37 * hash) + MAGNIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getMagnification();
      hash = (37 * hash) + SCALE_FIELD_NUMBER;
      hash = (53 * hash) + getScale();
      hash = (37 * hash) + X_SHIFT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getXShift()));
      hash = (37 * hash) + Y_SHIFT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getYShift()));
      hash = (37 * hash) + Z_SHIFT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getZShift()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains settings for the Cubic Spline Manager plugin
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.CubicSplineManagerSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.CubicSplineManagerSettings)
        gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings.class, gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        option_ = 0;

        selected_ = "";

        magnification_ = 0;

        scale_ = 0;

        xShift_ = 0D;

        yShift_ = 0D;

        zShift_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.GUIProtos.internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_descriptor;
      }

      public gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings getDefaultInstanceForType() {
        return gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings.getDefaultInstance();
      }

      public gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings build() {
        gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings buildPartial() {
        gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings result = new gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings(this);
        result.option_ = option_;
        result.selected_ = selected_;
        result.magnification_ = magnification_;
        result.scale_ = scale_;
        result.xShift_ = xShift_;
        result.yShift_ = yShift_;
        result.zShift_ = zShift_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings) {
          return mergeFrom((gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings other) {
        if (other == gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings.getDefaultInstance()) return this;
        if (other.getOption() != 0) {
          setOption(other.getOption());
        }
        if (!other.getSelected().isEmpty()) {
          selected_ = other.selected_;
          onChanged();
        }
        if (other.getMagnification() != 0) {
          setMagnification(other.getMagnification());
        }
        if (other.getScale() != 0) {
          setScale(other.getScale());
        }
        if (other.getXShift() != 0D) {
          setXShift(other.getXShift());
        }
        if (other.getYShift() != 0D) {
          setYShift(other.getYShift());
        }
        if (other.getZShift() != 0D) {
          setZShift(other.getZShift());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int option_ ;
      /**
       * <code>int32 option = 1;</code>
       */
      public int getOption() {
        return option_;
      }
      /**
       * <code>int32 option = 1;</code>
       */
      public Builder setOption(int value) {
        
        option_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 option = 1;</code>
       */
      public Builder clearOption() {
        
        option_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object selected_ = "";
      /**
       * <code>string selected = 2;</code>
       */
      public java.lang.String getSelected() {
        java.lang.Object ref = selected_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          selected_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string selected = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSelectedBytes() {
        java.lang.Object ref = selected_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          selected_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string selected = 2;</code>
       */
      public Builder setSelected(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        selected_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string selected = 2;</code>
       */
      public Builder clearSelected() {
        
        selected_ = getDefaultInstance().getSelected();
        onChanged();
        return this;
      }
      /**
       * <code>string selected = 2;</code>
       */
      public Builder setSelectedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        selected_ = value;
        onChanged();
        return this;
      }

      private int magnification_ ;
      /**
       * <code>int32 magnification = 3;</code>
       */
      public int getMagnification() {
        return magnification_;
      }
      /**
       * <code>int32 magnification = 3;</code>
       */
      public Builder setMagnification(int value) {
        
        magnification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 magnification = 3;</code>
       */
      public Builder clearMagnification() {
        
        magnification_ = 0;
        onChanged();
        return this;
      }

      private int scale_ ;
      /**
       * <code>int32 scale = 4;</code>
       */
      public int getScale() {
        return scale_;
      }
      /**
       * <code>int32 scale = 4;</code>
       */
      public Builder setScale(int value) {
        
        scale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 scale = 4;</code>
       */
      public Builder clearScale() {
        
        scale_ = 0;
        onChanged();
        return this;
      }

      private double xShift_ ;
      /**
       * <code>double x_shift = 5;</code>
       */
      public double getXShift() {
        return xShift_;
      }
      /**
       * <code>double x_shift = 5;</code>
       */
      public Builder setXShift(double value) {
        
        xShift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double x_shift = 5;</code>
       */
      public Builder clearXShift() {
        
        xShift_ = 0D;
        onChanged();
        return this;
      }

      private double yShift_ ;
      /**
       * <code>double y_shift = 6;</code>
       */
      public double getYShift() {
        return yShift_;
      }
      /**
       * <code>double y_shift = 6;</code>
       */
      public Builder setYShift(double value) {
        
        yShift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double y_shift = 6;</code>
       */
      public Builder clearYShift() {
        
        yShift_ = 0D;
        onChanged();
        return this;
      }

      private double zShift_ ;
      /**
       * <code>double z_shift = 7;</code>
       */
      public double getZShift() {
        return zShift_;
      }
      /**
       * <code>double z_shift = 7;</code>
       */
      public Builder setZShift(double value) {
        
        zShift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double z_shift = 7;</code>
       */
      public Builder clearZShift() {
        
        zShift_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.CubicSplineManagerSettings)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.CubicSplineManagerSettings)
    private static final gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings();
    }

    public static gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CubicSplineManagerSettings>
        PARSER = new com.google.protobuf.AbstractParser<CubicSplineManagerSettings>() {
      public CubicSplineManagerSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CubicSplineManagerSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CubicSplineManagerSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CubicSplineManagerSettings> getParserForType() {
      return PARSER;
    }

    public gdsc.smlm.data.config.GUIProtos.CubicSplineManagerSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_CreateDataSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_CreateDataSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_ClusteringSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_ClusteringSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_OpticsEventSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_OpticsEventSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_OpticsSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_OpticsSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_DefaultTemplate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_DefaultTemplate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_NucleusMaskSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_NucleusMaskSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_PSFCreatorSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_PSFCreatorSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tgui.proto\022\025gdsc.smlm.data.config\032\nunit" +
      ".proto\032\021calibration.proto\032\tfit.proto\032\tps" +
      "f.proto\"\212\002\n\021GUIFilterSettings\022\021\n\tmax_dri" +
      "ft\030\001 \001(\002\022\022\n\nmin_signal\030\002 \001(\002\022\017\n\007min_snr\030" +
      "\003 \001(\002\022\025\n\rmax_precision\030\004 \001(\001\022\021\n\tmax_widt" +
      "h\030\005 \001(\002\022\021\n\tmin_width\030\006 \001(\002\022\022\n\nmask_title" +
      "\030\007 \001(\t\022\023\n\013free_filter\030\010 \001(\t\022\027\n\017filter_te" +
      "mplate\030\t \001(\t\022!\n\031filter_analysis_director" +
      "y\030\n \001(\t\022\033\n\023filter_set_filename\030\013 \001(\t\"\314\001\n" +
      "\025PSFCalculatorSettings\022\023\n\013pixel_pitch\030\001 ",
      "\001(\001\022\025\n\rmagnification\030\002 \001(\001\022\025\n\rbeam_expan" +
      "der\030\003 \001(\001\022\022\n\nwavelength\030\004 \001(\001\022\032\n\022numeric" +
      "al_aperture\030\005 \001(\001\022 \n\030adjust_for_square_p" +
      "ixels\030\006 \001(\010\022\036\n\026proportionality_factor\030\007 " +
      "\001(\001\"\273\001\n\024PSFEstimatorSettings\022\027\n\017number_o" +
      "f_peaks\030\001 \001(\005\022\017\n\007p_value\030\002 \001(\001\022\032\n\022update" +
      "_preferences\030\003 \001(\010\022\033\n\023debug_psf_estimato" +
      "r\030\004 \001(\010\022\017\n\007iterate\030\005 \001(\010\022\027\n\017show_histogr" +
      "ams\030\006 \001(\010\022\026\n\016histogram_bins\030\007 \001(\005\"\203\020\n\022Cr" +
      "eateDataSettings\022\014\n\004size\030\001 \001(\005\022\r\n\005depth\030",
      "\002 \001(\001\022\023\n\013fixed_Depth\030\003 \001(\010\022\017\n\007seconds\030\004 " +
      "\001(\001\022\025\n\rexposure_time\030\005 \001(\001\022\030\n\020steps_per_" +
      "second\030\006 \001(\001\022\024\n\014illumination\030\007 \001(\t\022\030\n\020ba" +
      "ckground_image\030\010 \001(\t\022\024\n\014distribution\030\t \001" +
      "(\t\022\031\n\021distribution_mask\030\n \001(\t\022%\n\035distrib" +
      "ution_mask_slice_depth\030\013 \001(\001\022\025\n\rpoisson_" +
      "noise\030\014 \001(\010\022\022\n\nbackground\030\r \001(\001\022\017\n\007em_ga" +
      "in\030\016 \001(\001\022\023\n\013camera_gain\030\017 \001(\001\022\032\n\022quantum" +
      "_efficiency\030\020 \001(\001\022\022\n\nread_noise\030\021 \001(\001\022\014\n" +
      "\004bias\030\022 \001(\005\022\021\n\tparticles\030\023 \001(\005\022\030\n\020sample",
      "_per_frame\030\024 \001(\010\022\032\n\022photons_per_second\030\025" +
      " \001(\001\022\"\n\032photons_per_second_maximum\030\026 \001(\001" +
      "\022\033\n\023photon_distribution\030\027 \001(\t\022 \n\030photon_" +
      "distribution_file\030\030 \001(\t\022\024\n\014photon_shape\030" +
      "\031 \001(\001\022\023\n\013correlation\030\032 \001(\001\022\021\n\tpsf_model\030" +
      "\033 \001(\t\022\026\n\016psf_image_name\030\034 \001(\t\022\023\n\013enter_w" +
      "idth\030\035 \001(\010\022\022\n\nwavelength\030\036 \001(\001\022\032\n\022numeri" +
      "cal_aperture\030\037 \001(\001\022\016\n\006psf_sd\030  \001(\001\022\023\n\013pi" +
      "xel_pitch\030! \001(\001\022\017\n\007density\030\" \001(\001\022\026\n\016diff" +
      "usion_rate\030# \001(\001\022\026\n\016diffusion_type\030$ \001(\005",
      "\022\032\n\022compound_molecules\030% \001(\010\022\025\n\rcompound" +
      "_text\030& \001(\t\022\022\n\ndiffuse_2D\030\' \001(\010\022\"\n\032rotat" +
      "e_initial_orientation\030( \001(\010\022 \n\030rotate_du" +
      "ring_simulation\030) \001(\010\022\021\n\trotate_2D\030* \001(\010" +
      "\022\025\n\rfixedFraction\030+ \001(\001\022\023\n\013confinement\030," +
      " \001(\t\022\030\n\020confinement_mask\030- \001(\t\022$\n\034confin" +
      "ement_mask_slice_depth\030. \001(\001\022\032\n\022confinem" +
      "ent_radius\030/ \001(\001\022\026\n\016pulse_interval\0300 \001(\005" +
      "\022\023\n\013pulse_ratio\0301 \001(\001\022\014\n\004t_on\0302 \001(\001\022\023\n\013t" +
      "_off_short\0303 \001(\001\022\022\n\nt_off_long\0304 \001(\001\022\026\n\016",
      "n_blinks_short\0305 \001(\001\022\025\n\rn_blinks_long\0306 " +
      "\001(\001\022\'\n\037n_blinks_geometric_distribution\0307" +
      " \001(\010\022\023\n\013min_photons\0308 \001(\001\022\022\n\nmin_snr_t1\030" +
      "9 \001(\001\022\022\n\nmin_snr_tN\030: \001(\001\022\021\n\traw_image\030;" +
      " \001(\010\022\022\n\nsave_image\030< \001(\010\022\032\n\022save_image_r" +
      "esults\030= \001(\010\022\032\n\022save_localisations\030> \001(\010" +
      "\022\031\n\021save_fluorophores\030? \001(\010\022\026\n\016image_fil" +
      "ename\030@ \001(\t\022\036\n\026image_results_filename\030A " +
      "\001(\t\022\034\n\024fluorophoresFilename\030B \001(\t\022\021\n\tcel" +
      "l_size\030C \001(\005\022\032\n\022probability_binary\030D \001(\001",
      "\022\033\n\023min_binary_distance\030E \001(\001\022\033\n\023max_bin" +
      "ary_distance\030F \001(\001\022\027\n\017show_histograms\030G " +
      "\001(\010\022\031\n\021choose_histograms\030H \001(\010\022\026\n\016histog" +
      "ram_bins\030I \001(\005\022\027\n\017remove_outliers\030J \001(\010\022" +
      "\026\n\016density_radius\030K \001(\002\022\026\n\016depth_of_fiel" +
      "d\030L \001(\002\022\022\n\nx_position\030M \001(\001\022\022\n\ny_positio" +
      "n\030N \001(\001\022\022\n\nz_position\030O \001(\001\0226\n\013camera_ty" +
      "pe\030P \001(\0162!.gdsc.smlm.data.config.CameraT" +
      "ype\022\031\n\021camera_model_name\030Q \001(\t\022\023\n\013random" +
      "_crop\030R \001(\010\022\020\n\010origin_x\030S \001(\005\022\020\n\010origin_",
      "y\030T \001(\005\":\n\031LoadLocalisationsSettings\022\035\n\025" +
      "localisationsFilename\030\001 \001(\t\"\220\007\n\022Clusteri" +
      "ngSettings\022\032\n\022distance_threshold\030\001 \001(\001\022\032" +
      "\n\022distance_exclusion\030\002 \001(\001\022\026\n\016time_thres" +
      "hold\030\003 \001(\001\0222\n\ttime_unit\030\004 \001(\0162\037.gdsc.sml" +
      "m.data.config.TimeUnit\022\022\n\ntrace_mode\030\005 \001" +
      "(\005\022\034\n\024clustering_algorithm\030\006 \001(\005\022\026\n\016puls" +
      "e_interval\030\007 \001(\005\022\024\n\014pulse_window\030\010 \001(\005\022\024" +
      "\n\014split_pulses\030\t \001(\010\022\025\n\rblinking_rate\030\n " +
      "\001(\001\022\020\n\010optimise\030\013 \001(\010\022\036\n\026min_distance_th",
      "reshold\030\014 \001(\001\022\036\n\026max_distance_threshold\030" +
      "\r \001(\001\022\032\n\022min_time_threshold\030\016 \001(\005\022\032\n\022max" +
      "_time_threshold\030\017 \001(\005\022\027\n\017optimiser_steps" +
      "\030\020 \001(\005\022\026\n\016optimiser_plot\030\021 \001(\005\022\023\n\013save_t" +
      "races\030\022 \001(\010\022\027\n\017show_histograms\030\023 \001(\010\022\027\n\017" +
      "save_trace_data\030\024 \001(\010\022\034\n\024trace_data_dire" +
      "ctory\030\025 \001(\t\022\026\n\016histogram_bins\030\026 \001(\005\022\027\n\017r" +
      "emove_outliers\030\027 \001(\010\022\024\n\014refit_option\030\030 \001" +
      "(\010\022\034\n\024minimum_trace_length\030\031 \001(\005\022\020\n\010trun" +
      "cate\030\032 \001(\010\022\032\n\022internal_distances\030\033 \001(\010\022\035",
      "\n\025sub_sampled_distances\030\034 \001(\010\022\023\n\013ignore_" +
      "ends\030\035 \001(\010\022\034\n\024precision_correction\030\036 \001(\010" +
      "\022\026\n\016msd_correction\030\037 \001(\010\022\013\n\003mle\030  \001(\010\022\022\n" +
      "\nfit_length\030! \001(\005\022\024\n\014fit_restarts\030\" \001(\005\022" +
      "\025\n\rjump_distance\030# \001(\005\"\353\001\n\023OpticsEventSe" +
      "ttings\022\034\n\024show_selection_table\030\001 \001(\010\022\036\n\026" +
      "table_create_selection\030\002 \001(\010\022\036\n\026image_cr" +
      "eate_selection\030\003 \001(\010\022\035\n\025plot_create_sele" +
      "ction\030\004 \001(\010\022\034\n\024table_show_selection\030\005 \001(" +
      "\010\022\034\n\024image_show_selection\030\006 \001(\010\022\033\n\023plot_",
      "show_selection\030\007 \001(\010\"\337\005\n\016OpticsSettings\022" +
      "\024\n\014input_option\030\001 \001(\t\022\023\n\013optics_mode\030\002 \001" +
      "(\005\022\034\n\024number_of_split_sets\030\003 \001(\005\022\032\n\022use_" +
      "random_vectors\030\004 \001(\010\022\035\n\025save_approximate" +
      "_sets\030\005 \001(\010\022\023\n\013sample_mode\030\006 \001(\005\022\033\n\023gene" +
      "rating_distance\030\007 \001(\001\022\022\n\nmin_points\030\010 \001(" +
      "\005\022\027\n\017clustering_mode\030\t \001(\005\022\n\n\002xi\030\n \001(\001\022\020" +
      "\n\010topLevel\030\013 \001(\010\022\023\n\013upper_limit\030\014 \001(\001\022\023\n" +
      "\013lower_limit\030\r \001(\001\022\017\n\007samples\030\016 \001(\005\022\027\n\017s" +
      "ample_fraction\030\017 \001(\001\022\026\n\016fraction_noise\030\020",
      " \001(\001\022\033\n\023clustering_distance\030\021 \001(\001\022\014\n\004cor" +
      "e\030\022 \001(\010\022\023\n\013image_scale\030\023 \001(\001\022\022\n\nimage_mo" +
      "de\030\024 \001(\005\022\020\n\010weighted\030\025 \001(\010\022\021\n\tequalised\030" +
      "\026 \001(\010\022\021\n\tplot_mode\030\027 \001(\005\022\024\n\014outline_mode" +
      "\030\030 \001(\005\022\032\n\022spanning_tree_mode\030\031 \001(\005\022\016\n\006la" +
      "mbda\030\032 \001(\001\022\022\n\nshow_table\030\033 \001(\010\022\027\n\017table_" +
      "sort_mode\030\034 \001(\005\022\032\n\022table_reverse_sort\030\035 " +
      "\001(\010\022I\n\025optics_event_settings\030\036 \001(\0132*.gds" +
      "c.smlm.data.config.OpticsEventSettings\"\203" +
      "\001\n\017DefaultTemplate\022:\n\rtemplate_type\030\001 \001(",
      "\0162#.gdsc.smlm.data.config.TemplateType\022\014" +
      "\n\004name\030\002 \001(\t\022\020\n\010filename\030\003 \001(\t\022\024\n\014tif_fi" +
      "lename\030\004 \001(\t\"\\\n\027DefaultTemplateSettings\022" +
      "A\n\021default_templates\030\001 \003(\0132&.gdsc.smlm.d" +
      "ata.config.DefaultTemplate\"\375\001\n\035Configura" +
      "tionTemplateSettings\022\016\n\006option\030\001 \001(\005\022!\n\031" +
      "select_standard_templates\030\002 \001(\010\022\037\n\027selec" +
      "t_custom_directory\030\003 \001(\010\022\037\n\027configuratio" +
      "n_directory\030\004 \001(\t\022#\n\033selected_standard_t" +
      "emplates\030\005 \003(\t\022!\n\031selected_custom_templa",
      "tes\030\006 \003(\t\022\020\n\010template\030\007 \001(\t\022\r\n\005close\030\010 \001" +
      "(\010\"\232\001\n\023NucleusMaskSettings\022\014\n\004mode\030\001 \001(\005" +
      "\022\023\n\013field_width\030\002 \001(\005\022\020\n\010y_dither\030\003 \001(\001\022" +
      "\020\n\010z_dither\030\004 \001(\001\022\024\n\014nm_per_pixel\030\005 \001(\001\022" +
      "\024\n\014nm_per_slice\030\006 \001(\001\022\020\n\010diameter\030\007 \001(\001\"" +
      "\315\007\n\022PSFCreatorSettings\022\014\n\004mode\030\001 \001(\005\022\016\n\006" +
      "radius\030\002 \001(\001\022\030\n\020interactive_mode\030\003 \001(\010\022\024" +
      "\n\014nm_per_slice\030\004 \001(\001\022E\n\023fit_engine_setti" +
      "ngs\030\005 \001(\0132(.gdsc.smlm.data.config.FitEng" +
      "ineSettings\022\'\n\003psf\030\006 \001(\0132\032.gdsc.smlm.dat",
      "a.config.PSF\022\032\n\022amplitude_fraction\030\007 \001(\001" +
      "\022\037\n\027start_background_frames\030\010 \001(\005\022\035\n\025end" +
      "_background_frames\030\t \001(\005\022\025\n\rmagnificatio" +
      "n\030\n \001(\005\022\021\n\tsmoothing\030\013 \001(\001\022\031\n\021centre_eac" +
      "h_slice\030\014 \001(\010\022\023\n\013com_cut_off\030\r \001(\001\022\034\n\024in" +
      "terpolation_method\030\016 \001(\005\022\017\n\007psfType\030\017 \001(" +
      "\005\0227\n\013calibration\030\020 \001(\0132\".gdsc.smlm.data." +
      "config.Calibration\022\027\n\017analysis_window\030\021 " +
      "\001(\001\022\022\n\ncom_window\030\022 \001(\005\022\037\n\027alignment_mag" +
      "nification\030\023 \001(\005\022\025\n\rmaxIterations\030\024 \001(\005\022",
      "\030\n\020check_alignments\030\025 \001(\010\022\031\n\021psf_magnifi" +
      "cation\030\026 \001(\005\022\016\n\006window\030\027 \001(\005\022\033\n\023smooth_s" +
      "tack_signal\030\030 \001(\010\022\030\n\020single_precision\030\031 " +
      "\001(\010\022\023\n\013crop_border\030\032 \001(\005\022\022\n\ncrop_start\030\033" +
      " \001(\005\022\020\n\010crop_end\030\034 \001(\005\022\033\n\023psf_z_magnific" +
      "ation\030\035 \001(\005\022\022\n\ncom_border\030\036 \001(\001\022\023\n\013outpu" +
      "t_type\030\037 \001(\005\022\027\n\017spline_filename\030  \001(\t\022\030\n" +
      "\020crop_to_z_centre\030! \001(\010\022\026\n\016alignment_mod" +
      "e\030\" \001(\005\022\032\n\022alignment_z_radius\030# \001(\001\022\022\n\nu" +
      "pdate_roi\030$ \001(\010\"q\n\032CameraModelManagerSet",
      "tings\022\016\n\006option\030\001 \001(\005\022\020\n\010origin_x\030\002 \001(\005\022" +
      "\020\n\010origin_y\030\003 \001(\005\022\r\n\005image\030\004 \001(\t\022\020\n\010sele" +
      "cted\030\005 \001(\t\"\227\001\n\032CubicSplineManagerSetting" +
      "s\022\016\n\006option\030\001 \001(\005\022\020\n\010selected\030\002 \001(\t\022\025\n\rm" +
      "agnification\030\003 \001(\005\022\r\n\005scale\030\004 \001(\005\022\017\n\007x_s" +
      "hift\030\005 \001(\001\022\017\n\007y_shift\030\006 \001(\001\022\017\n\007z_shift\030\007" +
      " \001(\001*O\n\014TemplateType\022\023\n\017INLINE_TEMPLATE\020" +
      "\000\022\025\n\021RESOURCE_TEMPLATE\020\001\022\023\n\017CUSTOM_TEMPL" +
      "ATE\020\002B\013B\tGUIProtosb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gdsc.smlm.data.config.UnitProtos.getDescriptor(),
          gdsc.smlm.data.config.CalibrationProtos.getDescriptor(),
          gdsc.smlm.data.config.FitProtos.getDescriptor(),
          gdsc.smlm.data.config.PSFProtos.getDescriptor(),
        }, assigner);
    internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gdsc_smlm_data_config_GUIFilterSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_GUIFilterSettings_descriptor,
        new java.lang.String[] { "MaxDrift", "MinSignal", "MinSnr", "MaxPrecision", "MaxWidth", "MinWidth", "MaskTitle", "FreeFilter", "FilterTemplate", "FilterAnalysisDirectory", "FilterSetFilename", });
    internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_PSFCalculatorSettings_descriptor,
        new java.lang.String[] { "PixelPitch", "Magnification", "BeamExpander", "Wavelength", "NumericalAperture", "AdjustForSquarePixels", "ProportionalityFactor", });
    internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_PSFEstimatorSettings_descriptor,
        new java.lang.String[] { "NumberOfPeaks", "PValue", "UpdatePreferences", "DebugPsfEstimator", "Iterate", "ShowHistograms", "HistogramBins", });
    internal_static_gdsc_smlm_data_config_CreateDataSettings_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_gdsc_smlm_data_config_CreateDataSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_CreateDataSettings_descriptor,
        new java.lang.String[] { "Size", "Depth", "FixedDepth", "Seconds", "ExposureTime", "StepsPerSecond", "Illumination", "BackgroundImage", "Distribution", "DistributionMask", "DistributionMaskSliceDepth", "PoissonNoise", "Background", "EmGain", "CameraGain", "QuantumEfficiency", "ReadNoise", "Bias", "Particles", "SamplePerFrame", "PhotonsPerSecond", "PhotonsPerSecondMaximum", "PhotonDistribution", "PhotonDistributionFile", "PhotonShape", "Correlation", "PsfModel", "PsfImageName", "EnterWidth", "Wavelength", "NumericalAperture", "PsfSd", "PixelPitch", "Density", "DiffusionRate", "DiffusionType", "CompoundMolecules", "CompoundText", "Diffuse2D", "RotateInitialOrientation", "RotateDuringSimulation", "Rotate2D", "FixedFraction", "Confinement", "ConfinementMask", "ConfinementMaskSliceDepth", "ConfinementRadius", "PulseInterval", "PulseRatio", "TOn", "TOffShort", "TOffLong", "NBlinksShort", "NBlinksLong", "NBlinksGeometricDistribution", "MinPhotons", "MinSnrT1", "MinSnrTN", "RawImage", "SaveImage", "SaveImageResults", "SaveLocalisations", "SaveFluorophores", "ImageFilename", "ImageResultsFilename", "FluorophoresFilename", "CellSize", "ProbabilityBinary", "MinBinaryDistance", "MaxBinaryDistance", "ShowHistograms", "ChooseHistograms", "HistogramBins", "RemoveOutliers", "DensityRadius", "DepthOfField", "XPosition", "YPosition", "ZPosition", "CameraType", "CameraModelName", "RandomCrop", "OriginX", "OriginY", });
    internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_LoadLocalisationsSettings_descriptor,
        new java.lang.String[] { "LocalisationsFilename", });
    internal_static_gdsc_smlm_data_config_ClusteringSettings_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_gdsc_smlm_data_config_ClusteringSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_ClusteringSettings_descriptor,
        new java.lang.String[] { "DistanceThreshold", "DistanceExclusion", "TimeThreshold", "TimeUnit", "TraceMode", "ClusteringAlgorithm", "PulseInterval", "PulseWindow", "SplitPulses", "BlinkingRate", "Optimise", "MinDistanceThreshold", "MaxDistanceThreshold", "MinTimeThreshold", "MaxTimeThreshold", "OptimiserSteps", "OptimiserPlot", "SaveTraces", "ShowHistograms", "SaveTraceData", "TraceDataDirectory", "HistogramBins", "RemoveOutliers", "RefitOption", "MinimumTraceLength", "Truncate", "InternalDistances", "SubSampledDistances", "IgnoreEnds", "PrecisionCorrection", "MsdCorrection", "Mle", "FitLength", "FitRestarts", "JumpDistance", });
    internal_static_gdsc_smlm_data_config_OpticsEventSettings_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_gdsc_smlm_data_config_OpticsEventSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_OpticsEventSettings_descriptor,
        new java.lang.String[] { "ShowSelectionTable", "TableCreateSelection", "ImageCreateSelection", "PlotCreateSelection", "TableShowSelection", "ImageShowSelection", "PlotShowSelection", });
    internal_static_gdsc_smlm_data_config_OpticsSettings_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_gdsc_smlm_data_config_OpticsSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_OpticsSettings_descriptor,
        new java.lang.String[] { "InputOption", "OpticsMode", "NumberOfSplitSets", "UseRandomVectors", "SaveApproximateSets", "SampleMode", "GeneratingDistance", "MinPoints", "ClusteringMode", "Xi", "TopLevel", "UpperLimit", "LowerLimit", "Samples", "SampleFraction", "FractionNoise", "ClusteringDistance", "Core", "ImageScale", "ImageMode", "Weighted", "Equalised", "PlotMode", "OutlineMode", "SpanningTreeMode", "Lambda", "ShowTable", "TableSortMode", "TableReverseSort", "OpticsEventSettings", });
    internal_static_gdsc_smlm_data_config_DefaultTemplate_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_gdsc_smlm_data_config_DefaultTemplate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_DefaultTemplate_descriptor,
        new java.lang.String[] { "TemplateType", "Name", "Filename", "TifFilename", });
    internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_DefaultTemplateSettings_descriptor,
        new java.lang.String[] { "DefaultTemplates", });
    internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_ConfigurationTemplateSettings_descriptor,
        new java.lang.String[] { "Option", "SelectStandardTemplates", "SelectCustomDirectory", "ConfigurationDirectory", "SelectedStandardTemplates", "SelectedCustomTemplates", "Template", "Close", });
    internal_static_gdsc_smlm_data_config_NucleusMaskSettings_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_gdsc_smlm_data_config_NucleusMaskSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_NucleusMaskSettings_descriptor,
        new java.lang.String[] { "Mode", "FieldWidth", "YDither", "ZDither", "NmPerPixel", "NmPerSlice", "Diameter", });
    internal_static_gdsc_smlm_data_config_PSFCreatorSettings_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_gdsc_smlm_data_config_PSFCreatorSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_PSFCreatorSettings_descriptor,
        new java.lang.String[] { "Mode", "Radius", "InteractiveMode", "NmPerSlice", "FitEngineSettings", "Psf", "AmplitudeFraction", "StartBackgroundFrames", "EndBackgroundFrames", "Magnification", "Smoothing", "CentreEachSlice", "ComCutOff", "InterpolationMethod", "PsfType", "Calibration", "AnalysisWindow", "ComWindow", "AlignmentMagnification", "MaxIterations", "CheckAlignments", "PsfMagnification", "Window", "SmoothStackSignal", "SinglePrecision", "CropBorder", "CropStart", "CropEnd", "PsfZMagnification", "ComBorder", "OutputType", "SplineFilename", "CropToZCentre", "AlignmentMode", "AlignmentZRadius", "UpdateRoi", });
    internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_CameraModelManagerSettings_descriptor,
        new java.lang.String[] { "Option", "OriginX", "OriginY", "Image", "Selected", });
    internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_CubicSplineManagerSettings_descriptor,
        new java.lang.String[] { "Option", "Selected", "Magnification", "Scale", "XShift", "YShift", "ZShift", });
    gdsc.smlm.data.config.UnitProtos.getDescriptor();
    gdsc.smlm.data.config.CalibrationProtos.getDescriptor();
    gdsc.smlm.data.config.FitProtos.getDescriptor();
    gdsc.smlm.data.config.PSFProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
