// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fisher.proto

package gdsc.smlm.data.config;

@SuppressWarnings({"unchecked", "unused", "javadoc", "static-method"})
public final class FisherProtos {
  private FisherProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AlphaSampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.AlphaSample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The log10 of the mean
     * </pre>
     *
     * <code>double log_10_mean = 1;</code>
     */
    double getLog10Mean();

    /**
     * <pre>
     * The alpha. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>double alpha = 2;</code>
     */
    double getAlpha();
  }
  /**
   * <pre>
   * Contains a single entry for relative Fisher information compared to that of
   * a random Poisson process (1/mean).
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.AlphaSample}
   */
  public  static final class AlphaSample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.AlphaSample)
      AlphaSampleOrBuilder {
    // Use AlphaSample.newBuilder() to construct.
    private AlphaSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AlphaSample() {
      log10Mean_ = 0D;
      alpha_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AlphaSample(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      final int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag))
				done = true;
              break;
            }
            case 9: {

              log10Mean_ = input.readDouble();
              break;
            }
            case 17: {

              alpha_ = input.readDouble();
              break;
            }
          }
        }
      } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (final java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_AlphaSample_descriptor;
    }

    @Override
	protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_AlphaSample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.FisherProtos.AlphaSample.class, gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder.class);
    }

    public static final int LOG_10_MEAN_FIELD_NUMBER = 1;
    private double log10Mean_;
    /**
     * <pre>
     * The log10 of the mean
     * </pre>
     *
     * <code>double log_10_mean = 1;</code>
     */
    @Override
	public double getLog10Mean() {
      return log10Mean_;
    }

    public static final int ALPHA_FIELD_NUMBER = 2;
    private double alpha_;
    /**
     * <pre>
     * The alpha. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>double alpha = 2;</code>
     */
    @Override
	public double getAlpha() {
      return alpha_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      final byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (log10Mean_ != 0D)
		output.writeDouble(1, log10Mean_);
      if (alpha_ != 0D)
		output.writeDouble(2, alpha_);
    }

    @Override
	public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (log10Mean_ != 0D)
		size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, log10Mean_);
      if (alpha_ != 0D)
		size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, alpha_);
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this)
		return true;
      if (!(obj instanceof gdsc.smlm.data.config.FisherProtos.AlphaSample))
		return super.equals(obj);
      final gdsc.smlm.data.config.FisherProtos.AlphaSample other = (gdsc.smlm.data.config.FisherProtos.AlphaSample) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getLog10Mean())
          == java.lang.Double.doubleToLongBits(
              other.getLog10Mean()));
      result = result && (
          java.lang.Double.doubleToLongBits(getAlpha())
          == java.lang.Double.doubleToLongBits(
              other.getAlpha()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0)
		return memoizedHashCode;
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOG_10_MEAN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLog10Mean()));
      hash = (37 * hash) + ALPHA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAlpha()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.AlphaSample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.FisherProtos.AlphaSample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      final Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains a single entry for relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.AlphaSample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.AlphaSample)
        gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_AlphaSample_descriptor;
      }

      @Override
	protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_AlphaSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.FisherProtos.AlphaSample.class, gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.FisherProtos.AlphaSample.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
	public Builder clear() {
        super.clear();
        log10Mean_ = 0D;

        alpha_ = 0D;

        return this;
      }

      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_AlphaSample_descriptor;
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSample getDefaultInstanceForType() {
        return gdsc.smlm.data.config.FisherProtos.AlphaSample.getDefaultInstance();
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSample build() {
        final gdsc.smlm.data.config.FisherProtos.AlphaSample result = buildPartial();
        if (!result.isInitialized())
			throw newUninitializedMessageException(result);
        return result;
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSample buildPartial() {
        final gdsc.smlm.data.config.FisherProtos.AlphaSample result = new gdsc.smlm.data.config.FisherProtos.AlphaSample(this);
        result.log10Mean_ = log10Mean_;
        result.alpha_ = alpha_;
        onBuilt();
        return result;
      }

      @Override
	public Builder clone() {
        return super.clone();
      }
      @Override
	public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
	public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
	public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
	public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
	public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.FisherProtos.AlphaSample)
			return mergeFrom((gdsc.smlm.data.config.FisherProtos.AlphaSample)other);
		else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.FisherProtos.AlphaSample other) {
        if (other == gdsc.smlm.data.config.FisherProtos.AlphaSample.getDefaultInstance()) return this;
        if (other.getLog10Mean() != 0D)
			setLog10Mean(other.getLog10Mean());
        if (other.getAlpha() != 0D)
			setAlpha(other.getAlpha());
        onChanged();
        return this;
      }

      @Override
	public final boolean isInitialized() {
        return true;
      }

      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.FisherProtos.AlphaSample parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.FisherProtos.AlphaSample) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null)
			mergeFrom(parsedMessage);
        }
        return this;
      }

      private double log10Mean_ ;
      /**
       * <pre>
       * The log10 of the mean
       * </pre>
       *
       * <code>double log_10_mean = 1;</code>
       */
      @Override
	public double getLog10Mean() {
        return log10Mean_;
      }
      /**
       * <pre>
       * The log10 of the mean
       * </pre>
       *
       * <code>double log_10_mean = 1;</code>
       */
      public Builder setLog10Mean(double value) {

        log10Mean_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The log10 of the mean
       * </pre>
       *
       * <code>double log_10_mean = 1;</code>
       */
      public Builder clearLog10Mean() {

        log10Mean_ = 0D;
        onChanged();
        return this;
      }

      private double alpha_ ;
      /**
       * <pre>
       * The alpha. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>double alpha = 2;</code>
       */
      @Override
	public double getAlpha() {
        return alpha_;
      }
      /**
       * <pre>
       * The alpha. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>double alpha = 2;</code>
       */
      public Builder setAlpha(double value) {

        alpha_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alpha. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>double alpha = 2;</code>
       */
      public Builder clearAlpha() {

        alpha_ = 0D;
        onChanged();
        return this;
      }
      @Override
	public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      @Override
	public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.AlphaSample)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.AlphaSample)
    private static final gdsc.smlm.data.config.FisherProtos.AlphaSample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.FisherProtos.AlphaSample();
    }

    public static gdsc.smlm.data.config.FisherProtos.AlphaSample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AlphaSample>
        PARSER = new com.google.protobuf.AbstractParser<AlphaSample>() {
      @Override
	public AlphaSample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AlphaSample(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AlphaSample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AlphaSample> getParserForType() {
      return PARSER;
    }

    @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PoissonFisherInformationDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.PoissonFisherInformationData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type of Fisher information
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     * The amplification gain of the distribution
     * </pre>
     *
     * <code>double gain = 2;</code>
     */
    double getGain();

    /**
     * <pre>
     * The Gaussian noise of the distribution
     * </pre>
     *
     * <code>double noise = 3;</code>
     */
    double getNoise();

    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    java.util.List<gdsc.smlm.data.config.FisherProtos.AlphaSample>
        getAlphaSampleList();
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    gdsc.smlm.data.config.FisherProtos.AlphaSample getAlphaSample(int index);
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    int getAlphaSampleCount();
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    java.util.List<? extends gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder>
        getAlphaSampleOrBuilderList();
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder getAlphaSampleOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Contains the Fisher information for any distribution based on a Poisson random variable
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.PoissonFisherInformationData}
   */
  public  static final class PoissonFisherInformationData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.PoissonFisherInformationData)
      PoissonFisherInformationDataOrBuilder {
    // Use PoissonFisherInformationData.newBuilder() to construct.
    private PoissonFisherInformationData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PoissonFisherInformationData() {
      type_ = 0;
      gain_ = 0D;
      noise_ = 0D;
      alphaSample_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PoissonFisherInformationData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag))
				done = true;
              break;
            }
            case 8: {

              type_ = input.readInt32();
              break;
            }
            case 17: {

              gain_ = input.readDouble();
              break;
            }
            case 25: {

              noise_ = input.readDouble();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                alphaSample_ = new java.util.ArrayList<>();
                mutable_bitField0_ |= 0x00000008;
              }
              alphaSample_.add(
                  input.readMessage(gdsc.smlm.data.config.FisherProtos.AlphaSample.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (final java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008))
			alphaSample_ = java.util.Collections.unmodifiableList(alphaSample_);
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_descriptor;
    }

    @Override
	protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.class, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * The type of Fisher information
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    @Override
	public int getType() {
      return type_;
    }

    public static final int GAIN_FIELD_NUMBER = 2;
    private double gain_;
    /**
     * <pre>
     * The amplification gain of the distribution
     * </pre>
     *
     * <code>double gain = 2;</code>
     */
    @Override
	public double getGain() {
      return gain_;
    }

    public static final int NOISE_FIELD_NUMBER = 3;
    private double noise_;
    /**
     * <pre>
     * The Gaussian noise of the distribution
     * </pre>
     *
     * <code>double noise = 3;</code>
     */
    @Override
	public double getNoise() {
      return noise_;
    }

    public static final int ALPHA_SAMPLE_FIELD_NUMBER = 4;
    private java.util.List<gdsc.smlm.data.config.FisherProtos.AlphaSample> alphaSample_;
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    @Override
	public java.util.List<gdsc.smlm.data.config.FisherProtos.AlphaSample> getAlphaSampleList() {
      return alphaSample_;
    }
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    @Override
	public java.util.List<? extends gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder>
        getAlphaSampleOrBuilderList() {
      return alphaSample_;
    }
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    @Override
	public int getAlphaSampleCount() {
      return alphaSample_.size();
    }
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSample getAlphaSample(int index) {
      return alphaSample_.get(index);
    }
    /**
     * <pre>
     * The alpha samples. This is the relative Fisher information compared to that of
     * a random Poisson process (1/mean).
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
     */
    @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder getAlphaSampleOrBuilder(
        int index) {
      return alphaSample_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      final byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0)
		output.writeInt32(1, type_);
      if (gain_ != 0D)
		output.writeDouble(2, gain_);
      if (noise_ != 0D)
		output.writeDouble(3, noise_);
      for (int i = 0; i < alphaSample_.size(); i++)
		output.writeMessage(4, alphaSample_.get(i));
    }

    @Override
	public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0)
		size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      if (gain_ != 0D)
		size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, gain_);
      if (noise_ != 0D)
		size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, noise_);
      for (int i = 0; i < alphaSample_.size(); i++)
		size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, alphaSample_.get(i));
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this)
		return true;
      if (!(obj instanceof gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData))
		return super.equals(obj);
      final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData other = (gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData) obj;

      boolean result = true;
      result = result && (getType()
          == other.getType());
      result = result && (
          java.lang.Double.doubleToLongBits(getGain())
          == java.lang.Double.doubleToLongBits(
              other.getGain()));
      result = result && (
          java.lang.Double.doubleToLongBits(getNoise())
          == java.lang.Double.doubleToLongBits(
              other.getNoise()));
      result = result && getAlphaSampleList()
          .equals(other.getAlphaSampleList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0)
		return memoizedHashCode;
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + GAIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getGain()));
      hash = (37 * hash) + NOISE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNoise()));
      if (getAlphaSampleCount() > 0) {
        hash = (37 * hash) + ALPHA_SAMPLE_FIELD_NUMBER;
        hash = (53 * hash) + getAlphaSampleList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      final Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains the Fisher information for any distribution based on a Poisson random variable
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.PoissonFisherInformationData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.PoissonFisherInformationData)
        gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_descriptor;
      }

      @Override
	protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.class, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders)
			getAlphaSampleFieldBuilder();
      }
      @Override
	public Builder clear() {
        super.clear();
        type_ = 0;

        gain_ = 0D;

        noise_ = 0D;

        if (alphaSampleBuilder_ == null) {
          alphaSample_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
		else
			alphaSampleBuilder_.clear();
        return this;
      }

      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_descriptor;
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData getDefaultInstanceForType() {
        return gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.getDefaultInstance();
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData build() {
        final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData result = buildPartial();
        if (!result.isInitialized())
			throw newUninitializedMessageException(result);
        return result;
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData buildPartial() {
        final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData result = new gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData(this);
        final int from_bitField0_ = bitField0_;
        final int to_bitField0_ = 0;
        result.type_ = type_;
        result.gain_ = gain_;
        result.noise_ = noise_;
        if (alphaSampleBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            alphaSample_ = java.util.Collections.unmodifiableList(alphaSample_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.alphaSample_ = alphaSample_;
        }
		else
			result.alphaSample_ = alphaSampleBuilder_.build();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
	public Builder clone() {
        return super.clone();
      }
      @Override
	public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
	public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
	public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
	public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
	public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData)
			return mergeFrom((gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData)other);
		else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData other) {
        if (other == gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.getDefaultInstance()) return this;
        if (other.getType() != 0)
			setType(other.getType());
        if (other.getGain() != 0D)
			setGain(other.getGain());
        if (other.getNoise() != 0D)
			setNoise(other.getNoise());
        if (alphaSampleBuilder_ == null) {
          if (!other.alphaSample_.isEmpty()) {
            if (alphaSample_.isEmpty()) {
              alphaSample_ = other.alphaSample_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureAlphaSampleIsMutable();
              alphaSample_.addAll(other.alphaSample_);
            }
            onChanged();
          }
        }
		else if (!other.alphaSample_.isEmpty())
			if (alphaSampleBuilder_.isEmpty()) {
              alphaSampleBuilder_.dispose();
              alphaSampleBuilder_ = null;
              alphaSample_ = other.alphaSample_;
              bitField0_ = (bitField0_ & ~0x00000008);
              alphaSampleBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAlphaSampleFieldBuilder() : null;
            }
			else
				alphaSampleBuilder_.addAllMessages(other.alphaSample_);
        onChanged();
        return this;
      }

      @Override
	public final boolean isInitialized() {
        return true;
      }

      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null)
			mergeFrom(parsedMessage);
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <pre>
       * The type of Fisher information
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      @Override
	public int getType() {
        return type_;
      }
      /**
       * <pre>
       * The type of Fisher information
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder setType(int value) {

        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of Fisher information
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder clearType() {

        type_ = 0;
        onChanged();
        return this;
      }

      private double gain_ ;
      /**
       * <pre>
       * The amplification gain of the distribution
       * </pre>
       *
       * <code>double gain = 2;</code>
       */
      @Override
	public double getGain() {
        return gain_;
      }
      /**
       * <pre>
       * The amplification gain of the distribution
       * </pre>
       *
       * <code>double gain = 2;</code>
       */
      public Builder setGain(double value) {

        gain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The amplification gain of the distribution
       * </pre>
       *
       * <code>double gain = 2;</code>
       */
      public Builder clearGain() {

        gain_ = 0D;
        onChanged();
        return this;
      }

      private double noise_ ;
      /**
       * <pre>
       * The Gaussian noise of the distribution
       * </pre>
       *
       * <code>double noise = 3;</code>
       */
      @Override
	public double getNoise() {
        return noise_;
      }
      /**
       * <pre>
       * The Gaussian noise of the distribution
       * </pre>
       *
       * <code>double noise = 3;</code>
       */
      public Builder setNoise(double value) {

        noise_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Gaussian noise of the distribution
       * </pre>
       *
       * <code>double noise = 3;</code>
       */
      public Builder clearNoise() {

        noise_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<gdsc.smlm.data.config.FisherProtos.AlphaSample> alphaSample_ =
        java.util.Collections.emptyList();
      private void ensureAlphaSampleIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          alphaSample_ = new java.util.ArrayList<>(alphaSample_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gdsc.smlm.data.config.FisherProtos.AlphaSample, gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder, gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder> alphaSampleBuilder_;

      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      @Override
	public java.util.List<gdsc.smlm.data.config.FisherProtos.AlphaSample> getAlphaSampleList() {
        if (alphaSampleBuilder_ == null)
			return java.util.Collections.unmodifiableList(alphaSample_);
		else
			return alphaSampleBuilder_.getMessageList();
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      @Override
	public int getAlphaSampleCount() {
        if (alphaSampleBuilder_ == null)
			return alphaSample_.size();
		else
			return alphaSampleBuilder_.getCount();
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSample getAlphaSample(int index) {
        if (alphaSampleBuilder_ == null)
			return alphaSample_.get(index);
		else
			return alphaSampleBuilder_.getMessage(index);
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder setAlphaSample(
          int index, gdsc.smlm.data.config.FisherProtos.AlphaSample value) {
        if (alphaSampleBuilder_ == null) {
          if (value == null)
			throw new NullPointerException();
          ensureAlphaSampleIsMutable();
          alphaSample_.set(index, value);
          onChanged();
        }
		else
			alphaSampleBuilder_.setMessage(index, value);
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder setAlphaSample(
          int index, gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder builderForValue) {
        if (alphaSampleBuilder_ == null) {
          ensureAlphaSampleIsMutable();
          alphaSample_.set(index, builderForValue.build());
          onChanged();
        }
		else
			alphaSampleBuilder_.setMessage(index, builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder addAlphaSample(gdsc.smlm.data.config.FisherProtos.AlphaSample value) {
        if (alphaSampleBuilder_ == null) {
          if (value == null)
			throw new NullPointerException();
          ensureAlphaSampleIsMutable();
          alphaSample_.add(value);
          onChanged();
        }
		else
			alphaSampleBuilder_.addMessage(value);
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder addAlphaSample(
          int index, gdsc.smlm.data.config.FisherProtos.AlphaSample value) {
        if (alphaSampleBuilder_ == null) {
          if (value == null)
			throw new NullPointerException();
          ensureAlphaSampleIsMutable();
          alphaSample_.add(index, value);
          onChanged();
        }
		else
			alphaSampleBuilder_.addMessage(index, value);
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder addAlphaSample(
          gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder builderForValue) {
        if (alphaSampleBuilder_ == null) {
          ensureAlphaSampleIsMutable();
          alphaSample_.add(builderForValue.build());
          onChanged();
        }
		else
			alphaSampleBuilder_.addMessage(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder addAlphaSample(
          int index, gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder builderForValue) {
        if (alphaSampleBuilder_ == null) {
          ensureAlphaSampleIsMutable();
          alphaSample_.add(index, builderForValue.build());
          onChanged();
        }
		else
			alphaSampleBuilder_.addMessage(index, builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder addAllAlphaSample(
          java.lang.Iterable<? extends gdsc.smlm.data.config.FisherProtos.AlphaSample> values) {
        if (alphaSampleBuilder_ == null) {
          ensureAlphaSampleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, alphaSample_);
          onChanged();
        }
		else
			alphaSampleBuilder_.addAllMessages(values);
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder clearAlphaSample() {
        if (alphaSampleBuilder_ == null) {
          alphaSample_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        }
		else
			alphaSampleBuilder_.clear();
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public Builder removeAlphaSample(int index) {
        if (alphaSampleBuilder_ == null) {
          ensureAlphaSampleIsMutable();
          alphaSample_.remove(index);
          onChanged();
        }
		else
			alphaSampleBuilder_.remove(index);
        return this;
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder getAlphaSampleBuilder(
          int index) {
        return getAlphaSampleFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      @Override
	public gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder getAlphaSampleOrBuilder(
          int index) {
        if (alphaSampleBuilder_ == null)
			return alphaSample_.get(index);
		else
			return alphaSampleBuilder_.getMessageOrBuilder(index);
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      @Override
	public java.util.List<? extends gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder>
           getAlphaSampleOrBuilderList() {
        if (alphaSampleBuilder_ != null)
			return alphaSampleBuilder_.getMessageOrBuilderList();
		else
			return java.util.Collections.unmodifiableList(alphaSample_);
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder addAlphaSampleBuilder() {
        return getAlphaSampleFieldBuilder().addBuilder(
            gdsc.smlm.data.config.FisherProtos.AlphaSample.getDefaultInstance());
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder addAlphaSampleBuilder(
          int index) {
        return getAlphaSampleFieldBuilder().addBuilder(
            index, gdsc.smlm.data.config.FisherProtos.AlphaSample.getDefaultInstance());
      }
      /**
       * <pre>
       * The alpha samples. This is the relative Fisher information compared to that of
       * a random Poisson process (1/mean).
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.AlphaSample alpha_sample = 4;</code>
       */
      public java.util.List<gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder>
           getAlphaSampleBuilderList() {
        return getAlphaSampleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gdsc.smlm.data.config.FisherProtos.AlphaSample, gdsc.smlm.data.config.FisherProtos.AlphaSample.Builder, gdsc.smlm.data.config.FisherProtos.AlphaSampleOrBuilder>
          getAlphaSampleFieldBuilder() {
        if (alphaSampleBuilder_ == null) {
          alphaSampleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<>(
                  alphaSample_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          alphaSample_ = null;
        }
        return alphaSampleBuilder_;
      }
      @Override
	public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      @Override
	public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.PoissonFisherInformationData)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.PoissonFisherInformationData)
    private static final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData();
    }

    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PoissonFisherInformationData>
        PARSER = new com.google.protobuf.AbstractParser<PoissonFisherInformationData>() {
      @Override
	public PoissonFisherInformationData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PoissonFisherInformationData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PoissonFisherInformationData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PoissonFisherInformationData> getParserForType() {
      return PARSER;
    }

    @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PoissonFisherInformationCacheOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gdsc.smlm.data.config.PoissonFisherInformationCache)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    java.util.List<gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData>
        getDataList();
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData getData(int index);
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    int getDataCount();
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    java.util.List<? extends gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder>
        getDataOrBuilderList();
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Contains a cache of Fisher information data
   * </pre>
   *
   * Protobuf type {@code gdsc.smlm.data.config.PoissonFisherInformationCache}
   */
  public  static final class PoissonFisherInformationCache extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gdsc.smlm.data.config.PoissonFisherInformationCache)
      PoissonFisherInformationCacheOrBuilder {
    // Use PoissonFisherInformationCache.newBuilder() to construct.
    private PoissonFisherInformationCache(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PoissonFisherInformationCache() {
      data_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PoissonFisherInformationCache(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag))
				done = true;
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                data_ = new java.util.ArrayList<>();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.add(
                  input.readMessage(gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (final java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001))
			data_ = java.util.Collections.unmodifiableList(data_);
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_descriptor;
    }

    @Override
	protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache.class, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private java.util.List<gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData> data_;
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    @Override
	public java.util.List<gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    @Override
	public java.util.List<? extends gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder>
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    @Override
	public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * The data
     * </pre>
     *
     * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
     */
    @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      final byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < data_.size(); i++)
		output.writeMessage(1, data_.get(i));
    }

    @Override
	public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < data_.size(); i++)
		size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, data_.get(i));
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this)
		return true;
      if (!(obj instanceof gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache))
		return super.equals(obj);
      final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache other = (gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache) obj;

      boolean result = true;
      result = result && getDataList()
          .equals(other.getDataList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0)
		return memoizedHashCode;
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      final Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains a cache of Fisher information data
     * </pre>
     *
     * Protobuf type {@code gdsc.smlm.data.config.PoissonFisherInformationCache}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gdsc.smlm.data.config.PoissonFisherInformationCache)
        gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCacheOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_descriptor;
      }

      @Override
	protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache.class, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache.Builder.class);
      }

      // Construct using gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders)
			getDataFieldBuilder();
      }
      @Override
	public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
		else
			dataBuilder_.clear();
        return this;
      }

      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gdsc.smlm.data.config.FisherProtos.internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_descriptor;
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache getDefaultInstanceForType() {
        return gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache.getDefaultInstance();
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache build() {
        final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache result = buildPartial();
        if (!result.isInitialized())
			throw newUninitializedMessageException(result);
        return result;
      }

      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache buildPartial() {
        final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache result = new gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache(this);
        final int from_bitField0_ = bitField0_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.data_ = data_;
        }
		else
			result.data_ = dataBuilder_.build();
        onBuilt();
        return result;
      }

      @Override
	public Builder clone() {
        return super.clone();
      }
      @Override
	public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
	public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
	public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
	public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
	public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache)
			return mergeFrom((gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache)other);
		else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache other) {
        if (other == gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache.getDefaultInstance()) return this;
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        }
		else if (!other.data_.isEmpty())
			if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            }
			else
				dataBuilder_.addAllMessages(other.data_);
        onChanged();
        return this;
      }

      @Override
	public final boolean isInitialized() {
        return true;
      }

      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null)
			mergeFrom(parsedMessage);
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = new java.util.ArrayList<>(data_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder> dataBuilder_;

      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      @Override
	public java.util.List<gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData> getDataList() {
        if (dataBuilder_ == null)
			return java.util.Collections.unmodifiableList(data_);
		else
			return dataBuilder_.getMessageList();
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      @Override
	public int getDataCount() {
        if (dataBuilder_ == null)
			return data_.size();
		else
			return dataBuilder_.getCount();
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData getData(int index) {
        if (dataBuilder_ == null)
			return data_.get(index);
		else
			return dataBuilder_.getMessage(index);
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder setData(
          int index, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData value) {
        if (dataBuilder_ == null) {
          if (value == null)
			throw new NullPointerException();
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        }
		else
			dataBuilder_.setMessage(index, value);
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder setData(
          int index, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        }
		else
			dataBuilder_.setMessage(index, builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder addData(gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData value) {
        if (dataBuilder_ == null) {
          if (value == null)
			throw new NullPointerException();
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        }
		else
			dataBuilder_.addMessage(value);
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder addData(
          int index, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData value) {
        if (dataBuilder_ == null) {
          if (value == null)
			throw new NullPointerException();
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        }
		else
			dataBuilder_.addMessage(index, value);
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder addData(
          gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        }
		else
			dataBuilder_.addMessage(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder addData(
          int index, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        }
		else
			dataBuilder_.addMessage(index, builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        }
		else
			dataBuilder_.addAllMessages(values);
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        }
		else
			dataBuilder_.clear();
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        }
		else
			dataBuilder_.remove(index);
        return this;
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null)
			return data_.get(index);
		else
			return dataBuilder_.getMessageOrBuilder(index);
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      @Override
	public java.util.List<? extends gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder>
           getDataOrBuilderList() {
        if (dataBuilder_ != null)
			return dataBuilder_.getMessageOrBuilderList();
		else
			return java.util.Collections.unmodifiableList(data_);
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.getDefaultInstance());
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.getDefaultInstance());
      }
      /**
       * <pre>
       * The data
       * </pre>
       *
       * <code>repeated .gdsc.smlm.data.config.PoissonFisherInformationData data = 1;</code>
       */
      public java.util.List<gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder>
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationData.Builder, gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationDataOrBuilder>
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<>(
                  data_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      @Override
	public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      @Override
	public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gdsc.smlm.data.config.PoissonFisherInformationCache)
    }

    // @@protoc_insertion_point(class_scope:gdsc.smlm.data.config.PoissonFisherInformationCache)
    private static final gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache();
    }

    public static gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PoissonFisherInformationCache>
        PARSER = new com.google.protobuf.AbstractParser<PoissonFisherInformationCache>() {
      @Override
	public PoissonFisherInformationCache parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PoissonFisherInformationCache(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PoissonFisherInformationCache> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PoissonFisherInformationCache> getParserForType() {
      return PARSER;
    }

    @Override
	public gdsc.smlm.data.config.FisherProtos.PoissonFisherInformationCache getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_AlphaSample_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_AlphaSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    final java.lang.String[] descriptorData = {
      "\n\014fisher.proto\022\025gdsc.smlm.data.config\"1\n" +
      "\013AlphaSample\022\023\n\013log_10_mean\030\001 \001(\001\022\r\n\005alp" +
      "ha\030\002 \001(\001\"\203\001\n\034PoissonFisherInformationDat" +
      "a\022\014\n\004type\030\001 \001(\005\022\014\n\004gain\030\002 \001(\001\022\r\n\005noise\030\003" +
      " \001(\001\0228\n\014alpha_sample\030\004 \003(\0132\".gdsc.smlm.d" +
      "ata.config.AlphaSample\"b\n\035PoissonFisherI" +
      "nformationCache\022A\n\004data\030\001 \003(\01323.gdsc.sml" +
      "m.data.config.PoissonFisherInformationDa" +
      "taB\016B\014FisherProtosb\006proto3"
    };
    final com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          @Override
		public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_gdsc_smlm_data_config_AlphaSample_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gdsc_smlm_data_config_AlphaSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_AlphaSample_descriptor,
        new java.lang.String[] { "Log10Mean", "Alpha", });
    internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_PoissonFisherInformationData_descriptor,
        new java.lang.String[] { "Type", "Gain", "Noise", "AlphaSample", });
    internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gdsc_smlm_data_config_PoissonFisherInformationCache_descriptor,
        new java.lang.String[] { "Data", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
